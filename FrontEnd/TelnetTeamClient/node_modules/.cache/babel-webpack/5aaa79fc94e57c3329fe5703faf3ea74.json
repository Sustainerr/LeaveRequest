{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"../auth.service\";\nimport * as i6 from \"../services/data.service\";\nimport * as i7 from \"@angular/common\";\n\nfunction AddEmpSomeoneComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r1.type_Conge_Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r1.type);\n  }\n}\n\nexport let AddEmpSomeoneComponent = /*#__PURE__*/(() => {\n  class AddEmpSomeoneComponent {\n    constructor(fb, http, snackBar, dialogRef, authService, dataService) {\n      this.fb = fb;\n      this.http = http;\n      this.snackBar = snackBar;\n      this.dialogRef = dialogRef;\n      this.authService = authService;\n      this.dataService = dataService;\n      this.typeCongeUrl = 'https://localhost:7216/api/TypeConges/byRole';\n      this.congesUrl = 'https://localhost:7216/api/conges';\n      this.userRole = '';\n      this.leaveTypes = [];\n      this.leaveForm = this.fb.group({\n        dateDebut: ['', Validators.required],\n        dateFin: ['', Validators.required],\n        type: ['', Validators.required],\n        matricule: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      const token = this.authService.getToken();\n\n      if (token) {\n        const parsedToken = this.parseToken(token);\n        const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\n\n        if (userId) {\n          this.authService.getUserById(userId).subscribe(data => {\n            this.userRole = data.role;\n            this.userGroupId = data.groupe_Id; // Assuming the API response contains groupe_Id\n\n            this.getLeaveTypesForRoles(this.userRole);\n          }, error => {\n            console.error('Error fetching user data:', error);\n          });\n        } else {\n          console.error('userId is undefined.');\n        }\n      } else {\n        console.error('Token is not available.');\n      }\n    }\n\n    parseToken(token) {\n      try {\n        const payload = atob(token.split('.')[1]);\n        return JSON.parse(payload);\n      } catch (error) {\n        console.error('Error parsing token:', error);\n        return null;\n      }\n    }\n\n    getLeaveTypesForRoles(role) {\n      this.getLeaveTypesByRole('utilisateur').pipe(switchMap(utilisateurTypes => {\n        this.leaveTypes = utilisateurTypes;\n\n        if (role === 'Chef') {\n          return this.getLeaveTypesByRole('Chef');\n        } else if (role === 'Admin') {\n          return this.getLeaveTypesByRole('Chef').pipe(switchMap(chefTypes => {\n            this.leaveTypes = this.leaveTypes.concat(chefTypes);\n            return this.getLeaveTypesByRole('Admin');\n          }));\n        } else {\n          return of([]); // No additional types to fetch\n        }\n      }), catchError(error => {\n        console.error('Error fetching leave types:', error);\n        return of([]); // Return an empty array on error\n      })).subscribe(additionalTypes => {\n        if (role === 'Chef' || role === 'Admin') {\n          this.leaveTypes = this.leaveTypes.concat(additionalTypes);\n        }\n      });\n    }\n\n    getLeaveTypesByRole(role) {\n      const url = `${this.typeCongeUrl}/${role}`;\n      return this.http.get(url).pipe(catchError(error => {\n        console.error(`Error fetching leave types for role ${role}:`, error);\n        return of([]);\n      }));\n    }\n\n    onSubmit() {\n      if (this.leaveForm.valid) {\n        this.dataService.getUserByMatricule(this.leaveForm.value.matricule).subscribe(user => {\n          if (user.congesDispo > 0) {\n            const updatedCongesDispo = user.congesDispo - 1;\n            const updatePayload = {\n              matricule: user.matricule,\n              congesDispo: updatedCongesDispo\n            };\n            this.dataService.updateCongesDispo(updatePayload).subscribe(() => {\n              const leaveRequest = {\n                date_Debut: this.leaveForm.value.dateDebut,\n                date_Fin: this.leaveForm.value.dateFin,\n                statut: 'Approved',\n                type_Conge_Id: this.leaveForm.value.type,\n                matricule: this.leaveForm.value.matricule\n              };\n              this.submitLeaveRequest(leaveRequest);\n            }, error => {\n              console.error('Error updating congesDispo:', error);\n            });\n          } else {\n            this.snackBar.open(`The user with matricule: ${user.matricule} has 0 leave requests available`, 'Close', {\n              duration: 3000\n            });\n          }\n        });\n      } else {\n        console.error('Form is invalid.');\n      }\n    }\n\n    submitLeaveRequest(leaveRequest) {\n      this.http.post(this.congesUrl, leaveRequest).subscribe(response => {\n        this.snackBar.open(`A request has been added for the user with matricule: ${leaveRequest.matricule}`, 'Close', {\n          duration: 3000\n        });\n        this.dialogRef.close(); // Close the dialog after successful submission\n      }, error => {\n        console.error('Error submitting leave request:', error); // Optionally: Display error message to the user\n      });\n    }\n\n  }\n\n  AddEmpSomeoneComponent.ɵfac = function AddEmpSomeoneComponent_Factory(t) {\n    return new (t || AddEmpSomeoneComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.DataService));\n  };\n\n  AddEmpSomeoneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEmpSomeoneComponent,\n    selectors: [[\"app-add-emp-someone\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"date-inputs\"], [1, \"form-group\"], [\"for\", \"dateDebut\"], [\"type\", \"date\", \"id\", \"dateDebut\", \"formControlName\", \"dateDebut\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateFin\"], [\"type\", \"date\", \"id\", \"dateFin\", \"formControlName\", \"dateFin\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"matricule\"], [\"type\", \"text\", \"id\", \"matricule\", \"formControlName\", \"matricule\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"type-input\"], [\"for\", \"type\"], [\"id\", \"type\", \"formControlName\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"]],\n    template: function AddEmpSomeoneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEmpSomeoneComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Date Debut:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Date Fin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵelementStart(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Matricule:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"label\", 11);\n        i0.ɵɵtext(17, \"Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"select\", 12);\n        i0.ɵɵelementStart(19, \"option\", 13);\n        i0.ɵɵtext(20, \"Select Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, AddEmpSomeoneComponent_option_21_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 15);\n        i0.ɵɵtext(23, \"Add Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.leaveForm);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngForOf\", ctx.leaveTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.leaveForm.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i7.NgForOf],\n    styles: [\".form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;padding:35px}.date-inputs[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;max-width:500px;margin-bottom:20px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{flex:1;margin-right:10px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]:last-child{margin-right:0}.type-input[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%;max-width:500px;margin-bottom:20px}button[_ngcontent-%COMP%]{display:block;margin:0 auto}\"]\n  });\n  return AddEmpSomeoneComponent;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/add-emp-someone/add-emp-someone.component.ts"],"names":["Validators","of","catchError","switchMap","i0","i1","i2","i3","i4","i5","i6","i7","AddEmpSomeoneComponent_option_21_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","type_r1","$implicit","ɵɵproperty","type_Conge_Id","ɵɵadvance","ɵɵtextInterpolate","type","AddEmpSomeoneComponent","constructor","fb","http","snackBar","dialogRef","authService","dataService","typeCongeUrl","congesUrl","userRole","leaveTypes","leaveForm","group","dateDebut","required","dateFin","matricule","ngOnInit","token","getToken","parsedToken","parseToken","userId","nameid","getUserById","subscribe","data","role","userGroupId","groupe_Id","getLeaveTypesForRoles","error","console","payload","atob","split","JSON","parse","getLeaveTypesByRole","pipe","utilisateurTypes","chefTypes","concat","additionalTypes","url","get","onSubmit","valid","getUserByMatricule","value","user","congesDispo","updatedCongesDispo","updatePayload","updateCongesDispo","leaveRequest","date_Debut","date_Fin","statut","submitLeaveRequest","open","duration","post","response","close","ɵfac","AddEmpSomeoneComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","HttpClient","MatSnackBar","MatDialogRef","AuthService","DataService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","AddEmpSomeoneComponent_Template","ɵɵlistener","AddEmpSomeoneComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","invalid","directives","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","RequiredValidator","SelectControlValueAccessor","NgSelectOption","ɵNgSelectMultipleOption","NgForOf","styles"],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nimport * as i2 from \"@angular/common/http\";\r\nimport * as i3 from \"@angular/material/snack-bar\";\r\nimport * as i4 from \"@angular/material/dialog\";\r\nimport * as i5 from \"../auth.service\";\r\nimport * as i6 from \"../services/data.service\";\r\nimport * as i7 from \"@angular/common\";\r\nfunction AddEmpSomeoneComponent_option_21_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"option\", 16);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const type_r1 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", type_r1.type_Conge_Id);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(type_r1.type);\r\n} }\r\nexport class AddEmpSomeoneComponent {\r\n    constructor(fb, http, snackBar, dialogRef, authService, dataService) {\r\n        this.fb = fb;\r\n        this.http = http;\r\n        this.snackBar = snackBar;\r\n        this.dialogRef = dialogRef;\r\n        this.authService = authService;\r\n        this.dataService = dataService;\r\n        this.typeCongeUrl = 'https://localhost:7216/api/TypeConges/byRole';\r\n        this.congesUrl = 'https://localhost:7216/api/conges';\r\n        this.userRole = '';\r\n        this.leaveTypes = [];\r\n        this.leaveForm = this.fb.group({\r\n            dateDebut: ['', Validators.required],\r\n            dateFin: ['', Validators.required],\r\n            type: ['', Validators.required],\r\n            matricule: ['', Validators.required]\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        const token = this.authService.getToken();\r\n        if (token) {\r\n            const parsedToken = this.parseToken(token);\r\n            const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\r\n            if (userId) {\r\n                this.authService.getUserById(userId).subscribe((data) => {\r\n                    this.userRole = data.role;\r\n                    this.userGroupId = data.groupe_Id; // Assuming the API response contains groupe_Id\r\n                    this.getLeaveTypesForRoles(this.userRole);\r\n                }, (error) => {\r\n                    console.error('Error fetching user data:', error);\r\n                });\r\n            }\r\n            else {\r\n                console.error('userId is undefined.');\r\n            }\r\n        }\r\n        else {\r\n            console.error('Token is not available.');\r\n        }\r\n    }\r\n    parseToken(token) {\r\n        try {\r\n            const payload = atob(token.split('.')[1]);\r\n            return JSON.parse(payload);\r\n        }\r\n        catch (error) {\r\n            console.error('Error parsing token:', error);\r\n            return null;\r\n        }\r\n    }\r\n    getLeaveTypesForRoles(role) {\r\n        this.getLeaveTypesByRole('utilisateur').pipe(switchMap((utilisateurTypes) => {\r\n            this.leaveTypes = utilisateurTypes;\r\n            if (role === 'Chef') {\r\n                return this.getLeaveTypesByRole('Chef');\r\n            }\r\n            else if (role === 'Admin') {\r\n                return this.getLeaveTypesByRole('Chef').pipe(switchMap((chefTypes) => {\r\n                    this.leaveTypes = this.leaveTypes.concat(chefTypes);\r\n                    return this.getLeaveTypesByRole('Admin');\r\n                }));\r\n            }\r\n            else {\r\n                return of([]); // No additional types to fetch\r\n            }\r\n        }), catchError((error) => {\r\n            console.error('Error fetching leave types:', error);\r\n            return of([]); // Return an empty array on error\r\n        })).subscribe((additionalTypes) => {\r\n            if (role === 'Chef' || role === 'Admin') {\r\n                this.leaveTypes = this.leaveTypes.concat(additionalTypes);\r\n            }\r\n        });\r\n    }\r\n    getLeaveTypesByRole(role) {\r\n        const url = `${this.typeCongeUrl}/${role}`;\r\n        return this.http.get(url).pipe(catchError((error) => {\r\n            console.error(`Error fetching leave types for role ${role}:`, error);\r\n            return of([]);\r\n        }));\r\n    }\r\n    onSubmit() {\r\n        if (this.leaveForm.valid) {\r\n            this.dataService.getUserByMatricule(this.leaveForm.value.matricule).subscribe(user => {\r\n                if (user.congesDispo > 0) {\r\n                    const updatedCongesDispo = user.congesDispo - 1;\r\n                    const updatePayload = {\r\n                        matricule: user.matricule,\r\n                        congesDispo: updatedCongesDispo\r\n                    };\r\n                    this.dataService.updateCongesDispo(updatePayload).subscribe(() => {\r\n                        const leaveRequest = {\r\n                            date_Debut: this.leaveForm.value.dateDebut,\r\n                            date_Fin: this.leaveForm.value.dateFin,\r\n                            statut: 'Approved',\r\n                            type_Conge_Id: this.leaveForm.value.type,\r\n                            matricule: this.leaveForm.value.matricule\r\n                        };\r\n                        this.submitLeaveRequest(leaveRequest);\r\n                    }, (error) => {\r\n                        console.error('Error updating congesDispo:', error);\r\n                    });\r\n                }\r\n                else {\r\n                    this.snackBar.open(`The user with matricule: ${user.matricule} has 0 leave requests available`, 'Close', {\r\n                        duration: 3000,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            console.error('Form is invalid.');\r\n        }\r\n    }\r\n    submitLeaveRequest(leaveRequest) {\r\n        this.http.post(this.congesUrl, leaveRequest).subscribe((response) => {\r\n            this.snackBar.open(`A request has been added for the user with matricule: ${leaveRequest.matricule}`, 'Close', {\r\n                duration: 3000,\r\n            });\r\n            this.dialogRef.close(); // Close the dialog after successful submission\r\n        }, (error) => {\r\n            console.error('Error submitting leave request:', error);\r\n            // Optionally: Display error message to the user\r\n        });\r\n    }\r\n}\r\nAddEmpSomeoneComponent.ɵfac = function AddEmpSomeoneComponent_Factory(t) { return new (t || AddEmpSomeoneComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.DataService)); };\r\nAddEmpSomeoneComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddEmpSomeoneComponent, selectors: [[\"app-add-emp-someone\"]], decls: 24, vars: 3, consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"date-inputs\"], [1, \"form-group\"], [\"for\", \"dateDebut\"], [\"type\", \"date\", \"id\", \"dateDebut\", \"formControlName\", \"dateDebut\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateFin\"], [\"type\", \"date\", \"id\", \"dateFin\", \"formControlName\", \"dateFin\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"matricule\"], [\"type\", \"text\", \"id\", \"matricule\", \"formControlName\", \"matricule\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"type-input\"], [\"for\", \"type\"], [\"id\", \"type\", \"formControlName\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"]], template: function AddEmpSomeoneComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵelementStart(1, \"form\", 1);\r\n        i0.ɵɵlistener(\"ngSubmit\", function AddEmpSomeoneComponent_Template_form_ngSubmit_1_listener() { return ctx.onSubmit(); });\r\n        i0.ɵɵelementStart(2, \"div\", 2);\r\n        i0.ɵɵelementStart(3, \"div\", 3);\r\n        i0.ɵɵelementStart(4, \"label\", 4);\r\n        i0.ɵɵtext(5, \"Date Debut:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(6, \"input\", 5);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(7, \"div\", 3);\r\n        i0.ɵɵelementStart(8, \"label\", 6);\r\n        i0.ɵɵtext(9, \"Date Fin:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(10, \"input\", 7);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(11, \"div\", 3);\r\n        i0.ɵɵelementStart(12, \"label\", 8);\r\n        i0.ɵɵtext(13, \"Matricule:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(14, \"input\", 9);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(15, \"div\", 10);\r\n        i0.ɵɵelementStart(16, \"label\", 11);\r\n        i0.ɵɵtext(17, \"Type:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(18, \"select\", 12);\r\n        i0.ɵɵelementStart(19, \"option\", 13);\r\n        i0.ɵɵtext(20, \"Select Type\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(21, AddEmpSomeoneComponent_option_21_Template, 2, 2, \"option\", 14);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(22, \"button\", 15);\r\n        i0.ɵɵtext(23, \"Add Employee\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"formGroup\", ctx.leaveForm);\r\n        i0.ɵɵadvance(20);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.leaveTypes);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"disabled\", ctx.leaveForm.invalid);\r\n    } }, directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i7.NgForOf], styles: [\".form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;padding:35px}.date-inputs[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;max-width:500px;margin-bottom:20px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{flex:1;margin-right:10px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]:last-child{margin-right:0}.type-input[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%;max-width:500px;margin-bottom:20px}button[_ngcontent-%COMP%]{display:block;margin:0 auto}\"] });\r\n"]},"metadata":{},"sourceType":"module"}
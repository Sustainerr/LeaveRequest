{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { User, MessageParameter, Message } from 'app/models/shared';\nimport { WorkHomeRequestStatus } from 'app/models/human-resources/work-from-home';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./core-data.service\";\nimport * as i3 from \"./date-time.service\";\nimport * as i4 from \"../human-resources/work-from-home\";\nexport let MailService = /*#__PURE__*/(() => {\n  class MailService {\n    constructor(httpClient, coreDataService, dateTimeService, workFromHomeService) {\n      this.httpClient = httpClient;\n      this.coreDataService = coreDataService;\n      this.dateTimeService = dateTimeService;\n      this.workFromHomeService = workFromHomeService;\n      this.headers = new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8'\n      });\n    }\n\n    send(message) {\n      return this.httpClient.post('/Mail/Send', JSON.stringify(message), {\n        headers: this.headers,\n        responseType: 'text'\n      });\n    }\n\n    workFromHomeRequestDeleted(workFromHomeRequest) {\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      let workFromHomeLink = window.location.href;\n\n      if (workFromHomeLink.indexOf(';') > -1) {\n        workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\n      }\n\n      this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\n        const workFromHomeResource = Object.assign(new User(), workFromHomeUser[0]);\n        this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\n          const reportingsToUsers = [];\n          reportingsTo.forEach(user => {\n            reportingsToUsers.push(Object.assign(new User(), user));\n          });\n          const message = new Message();\n          message.subject = 'Work From Home Request Deleted';\n          message.from = currentUser.email;\n          message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupHumanResources';\n          message.to = workFromHomeRequest.state === WorkHomeRequestStatus.Approved ? message.to + ',' + 'GroupSupport' : message.to;\n          message.cc = currentUser.email;\n          message.body = 'HumanResources.WorkFromHomeRequestDeleted';\n          message.messageParameters = new Array();\n          message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\n          message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\n          message.messageParameters.push(new MessageParameter('StartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\n          message.messageParameters.push(new MessageParameter('EndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\n          message.messageParameters.push(new MessageParameter('DayNumber', workFromHomeRequest.dayNumber.toString()));\n          message.messageParameters.push(new MessageParameter('HalfDay', workFromHomeRequest.halfDay));\n          message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\n          this.send(message).subscribe();\n        });\n      });\n    }\n\n    workFromHomeRequestRejected(workFromHomeRequest) {\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      let workFromHomeLink = window.location.href;\n\n      if (workFromHomeLink.indexOf(';') > -1) {\n        workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\n      }\n\n      this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\n        const workFromHomeResource = Object.assign(new User(), workFromHomeUser[0]);\n        this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\n          const reportingsToUsers = [];\n          reportingsTo.forEach(user => {\n            reportingsToUsers.push(Object.assign(new User(), user));\n          });\n          const message = new Message();\n          message.subject = 'Work From Home Request Rejected';\n          message.from = currentUser.email;\n          message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupHumanResources';\n          message.to = workFromHomeRequest.state !== WorkHomeRequestStatus.InProgress ? message.to + ',' + 'GroupSupport' : message.to;\n          message.cc = currentUser.email;\n          message.body = 'HumanResources.WorkFromHomeRequestRejected';\n          message.messageParameters = new Array();\n          message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\n          message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\n          message.messageParameters.push(new MessageParameter('StartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\n          message.messageParameters.push(new MessageParameter('EndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\n          message.messageParameters.push(new MessageParameter('DayNumber', workFromHomeRequest.dayNumber.toString()));\n          message.messageParameters.push(new MessageParameter('HalfDay', workFromHomeRequest.halfDay));\n          message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\n          this.send(message).subscribe();\n        });\n      });\n    }\n\n    workFromHomeRequestApproved(workFromHomeRequest) {\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      let workFromHomeLink = window.location.href;\n\n      if (workFromHomeLink.indexOf(';') > -1) {\n        workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\n      }\n\n      this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\n        const workFromHomeResource = Object.assign(new User(), workFromHomeUser[0]);\n        this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\n          const reportingsToUsers = [];\n          reportingsTo.forEach(user => {\n            reportingsToUsers.push(Object.assign(new User(), user));\n          });\n          const message = new Message();\n          message.subject = 'Work From Home Request Approved';\n          message.from = currentUser.email;\n          message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupSupport' + ',' + 'GroupHumanResources';\n          message.cc = currentUser.email;\n          message.body = 'HumanResources.WorkFromHomeRequestApproved';\n          message.messageParameters = new Array();\n          message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\n          message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\n          message.messageParameters.push(new MessageParameter('StartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\n          message.messageParameters.push(new MessageParameter('EndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\n          message.messageParameters.push(new MessageParameter('DayNumber', workFromHomeRequest.dayNumber.toString()));\n          message.messageParameters.push(new MessageParameter('HalfDay', workFromHomeRequest.halfDay));\n          message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\n          this.send(message).subscribe();\n        });\n      });\n    }\n\n    workFromHomeRequestModified(workFromHomeRequest, initialWorkFromHomeRequest) {\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      let workFromHomeLink = window.location.href;\n\n      if (workFromHomeLink.indexOf(';') > -1) {\n        workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\n      }\n\n      this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\n        const workFromHomeResource = Object.assign(new User(), workFromHomeUser[0]);\n        this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\n          const reportingsToUsers = [];\n          reportingsTo.forEach(user => {\n            reportingsToUsers.push(Object.assign(new User(), user));\n          });\n          const message = new Message();\n          message.subject = 'Work From Home Request Modified';\n          message.from = currentUser.email;\n          message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupHumanResources';\n          message.body = 'HumanResources.WorkFromHomeRequestModified';\n          message.messageParameters = new Array();\n          message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\n          message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\n          message.messageParameters.push(new MessageParameter('InitialStartDate', this.dateTimeService.getShortFormat(initialWorkFromHomeRequest.startDate)));\n          message.messageParameters.push(new MessageParameter('NewStartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\n          message.messageParameters.push(new MessageParameter('InitialEndDate', this.dateTimeService.getShortFormat(initialWorkFromHomeRequest.endDate)));\n          message.messageParameters.push(new MessageParameter('NewEndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\n          message.messageParameters.push(new MessageParameter('InitialDayNumber', initialWorkFromHomeRequest.dayNumber.toString()));\n          message.messageParameters.push(new MessageParameter('NewDayNumber', workFromHomeRequest.dayNumber.toString()));\n          message.messageParameters.push(new MessageParameter('InitialHalfDay', initialWorkFromHomeRequest.halfDay));\n          message.messageParameters.push(new MessageParameter('NewHalfDay', workFromHomeRequest.halfDay));\n          message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\n          this.send(message).subscribe();\n        });\n      });\n    }\n\n    workFromHomeRequestAdded(workFromHomeRequest) {\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\n        const workFromHomeResource = Object.assign(new User(), workFromHomeUser[0]);\n        let workFromHomeLink = window.location.href;\n\n        if (workFromHomeLink.indexOf(';') > -1) {\n          workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\n        }\n\n        this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\n          const reportingsToUsers = [];\n          reportingsTo.forEach(user => {\n            reportingsToUsers.push(Object.assign(new User(), user));\n          });\n          const message = new Message();\n          message.subject = 'Work From Home Request Added';\n          message.from = currentUser.email;\n          message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupHumanResources';\n          message.body = 'HumanResources.WorkFromHomeRequestAdded';\n          message.messageParameters = new Array();\n          message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\n          message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\n          message.messageParameters.push(new MessageParameter('StartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\n          message.messageParameters.push(new MessageParameter('EndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\n          message.messageParameters.push(new MessageParameter('DayNumber', workFromHomeRequest.dayNumber.toString()));\n          message.messageParameters.push(new MessageParameter('HalfDay', workFromHomeRequest.halfDay));\n          message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\n          this.send(message).subscribe();\n        });\n      });\n    }\n\n  }\n\n  MailService.ɵfac = function MailService_Factory(t) {\n    return new (t || MailService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CoreDataService), i0.ɵɵinject(i3.DateTimeService), i0.ɵɵinject(i4.WorkFromHomeService));\n  };\n\n  MailService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MailService,\n    factory: MailService.ɵfac\n  });\n  return MailService;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/services/shared/mail.service.ts"],"names":["HttpHeaders","User","MessageParameter","Message","WorkHomeRequestStatus","i0","i1","i2","i3","i4","MailService","constructor","httpClient","coreDataService","dateTimeService","workFromHomeService","headers","send","message","post","JSON","stringify","responseType","workFromHomeRequestDeleted","workFromHomeRequest","currentUser","parse","localStorage","getItem","workFromHomeLink","window","location","href","indexOf","slice","getUser","userId","subscribe","workFromHomeUser","workFromHomeResource","Object","assign","getReportingsTo","reportingsTo","reportingsToUsers","forEach","user","push","subject","from","email","to","map","join","state","Approved","cc","body","messageParameters","Array","userName","userFullName","getShortFormat","startDate","endDate","dayNumber","toString","halfDay","workFromHomeRequestRejected","InProgress","workFromHomeRequestApproved","workFromHomeRequestModified","initialWorkFromHomeRequest","workFromHomeRequestAdded","ɵfac","MailService_Factory","t","ɵɵinject","HttpClient","CoreDataService","DateTimeService","WorkFromHomeService","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport { User, MessageParameter, Message } from 'app/models/shared';\r\nimport { WorkHomeRequestStatus } from 'app/models/human-resources/work-from-home';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"./core-data.service\";\r\nimport * as i3 from \"./date-time.service\";\r\nimport * as i4 from \"../human-resources/work-from-home\";\r\nexport class MailService {\r\n    constructor(httpClient, coreDataService, dateTimeService, workFromHomeService) {\r\n        this.httpClient = httpClient;\r\n        this.coreDataService = coreDataService;\r\n        this.dateTimeService = dateTimeService;\r\n        this.workFromHomeService = workFromHomeService;\r\n        this.headers = new HttpHeaders({ 'Content-Type': 'application/json; charset=utf-8' });\r\n    }\r\n    send(message) {\r\n        return this.httpClient.post('/Mail/Send', JSON.stringify(message), { headers: this.headers, responseType: 'text' });\r\n    }\r\n    workFromHomeRequestDeleted(workFromHomeRequest) {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        let workFromHomeLink = window.location.href;\r\n        if (workFromHomeLink.indexOf(';') > -1) {\r\n            workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\r\n        }\r\n        this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\r\n            const workFromHomeResource = Object.assign(new User, workFromHomeUser[0]);\r\n            this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\r\n                const reportingsToUsers = [];\r\n                reportingsTo.forEach(user => {\r\n                    reportingsToUsers.push(Object.assign(new User(), user));\r\n                });\r\n                const message = new Message();\r\n                message.subject = 'Work From Home Request Deleted';\r\n                message.from = currentUser.email;\r\n                message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupHumanResources';\r\n                message.to = workFromHomeRequest.state === WorkHomeRequestStatus.Approved ?\r\n                    message.to + ',' + 'GroupSupport' : message.to;\r\n                message.cc = currentUser.email;\r\n                message.body = 'HumanResources.WorkFromHomeRequestDeleted';\r\n                message.messageParameters = new Array();\r\n                message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\r\n                message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\r\n                message.messageParameters.push(new MessageParameter('StartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\r\n                message.messageParameters.push(new MessageParameter('EndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\r\n                message.messageParameters.push(new MessageParameter('DayNumber', workFromHomeRequest.dayNumber.toString()));\r\n                message.messageParameters.push(new MessageParameter('HalfDay', workFromHomeRequest.halfDay));\r\n                message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\r\n                this.send(message).subscribe();\r\n            });\r\n        });\r\n    }\r\n    workFromHomeRequestRejected(workFromHomeRequest) {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        let workFromHomeLink = window.location.href;\r\n        if (workFromHomeLink.indexOf(';') > -1) {\r\n            workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\r\n        }\r\n        this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\r\n            const workFromHomeResource = Object.assign(new User, workFromHomeUser[0]);\r\n            this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\r\n                const reportingsToUsers = [];\r\n                reportingsTo.forEach(user => {\r\n                    reportingsToUsers.push(Object.assign(new User(), user));\r\n                });\r\n                const message = new Message();\r\n                message.subject = 'Work From Home Request Rejected';\r\n                message.from = currentUser.email;\r\n                message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupHumanResources';\r\n                message.to = workFromHomeRequest.state !== WorkHomeRequestStatus.InProgress ?\r\n                    message.to + ',' + 'GroupSupport' : message.to;\r\n                message.cc = currentUser.email;\r\n                message.body = 'HumanResources.WorkFromHomeRequestRejected';\r\n                message.messageParameters = new Array();\r\n                message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\r\n                message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\r\n                message.messageParameters.push(new MessageParameter('StartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\r\n                message.messageParameters.push(new MessageParameter('EndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\r\n                message.messageParameters.push(new MessageParameter('DayNumber', workFromHomeRequest.dayNumber.toString()));\r\n                message.messageParameters.push(new MessageParameter('HalfDay', workFromHomeRequest.halfDay));\r\n                message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\r\n                this.send(message).subscribe();\r\n            });\r\n        });\r\n    }\r\n    workFromHomeRequestApproved(workFromHomeRequest) {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        let workFromHomeLink = window.location.href;\r\n        if (workFromHomeLink.indexOf(';') > -1) {\r\n            workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\r\n        }\r\n        this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\r\n            const workFromHomeResource = Object.assign(new User, workFromHomeUser[0]);\r\n            this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\r\n                const reportingsToUsers = [];\r\n                reportingsTo.forEach(user => {\r\n                    reportingsToUsers.push(Object.assign(new User(), user));\r\n                });\r\n                const message = new Message();\r\n                message.subject = 'Work From Home Request Approved';\r\n                message.from = currentUser.email;\r\n                message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupSupport' + ',' + 'GroupHumanResources';\r\n                message.cc = currentUser.email;\r\n                message.body = 'HumanResources.WorkFromHomeRequestApproved';\r\n                message.messageParameters = new Array();\r\n                message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\r\n                message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\r\n                message.messageParameters.push(new MessageParameter('StartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\r\n                message.messageParameters.push(new MessageParameter('EndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\r\n                message.messageParameters.push(new MessageParameter('DayNumber', workFromHomeRequest.dayNumber.toString()));\r\n                message.messageParameters.push(new MessageParameter('HalfDay', workFromHomeRequest.halfDay));\r\n                message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\r\n                this.send(message).subscribe();\r\n            });\r\n        });\r\n    }\r\n    workFromHomeRequestModified(workFromHomeRequest, initialWorkFromHomeRequest) {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        let workFromHomeLink = window.location.href;\r\n        if (workFromHomeLink.indexOf(';') > -1) {\r\n            workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\r\n        }\r\n        this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\r\n            const workFromHomeResource = Object.assign(new User, workFromHomeUser[0]);\r\n            this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\r\n                const reportingsToUsers = [];\r\n                reportingsTo.forEach(user => {\r\n                    reportingsToUsers.push(Object.assign(new User(), user));\r\n                });\r\n                const message = new Message();\r\n                message.subject = 'Work From Home Request Modified';\r\n                message.from = currentUser.email;\r\n                message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupHumanResources';\r\n                message.body = 'HumanResources.WorkFromHomeRequestModified';\r\n                message.messageParameters = new Array();\r\n                message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\r\n                message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\r\n                message.messageParameters.push(new MessageParameter('InitialStartDate', this.dateTimeService.getShortFormat(initialWorkFromHomeRequest.startDate)));\r\n                message.messageParameters.push(new MessageParameter('NewStartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\r\n                message.messageParameters.push(new MessageParameter('InitialEndDate', this.dateTimeService.getShortFormat(initialWorkFromHomeRequest.endDate)));\r\n                message.messageParameters.push(new MessageParameter('NewEndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\r\n                message.messageParameters.push(new MessageParameter('InitialDayNumber', initialWorkFromHomeRequest.dayNumber.toString()));\r\n                message.messageParameters.push(new MessageParameter('NewDayNumber', workFromHomeRequest.dayNumber.toString()));\r\n                message.messageParameters.push(new MessageParameter('InitialHalfDay', initialWorkFromHomeRequest.halfDay));\r\n                message.messageParameters.push(new MessageParameter('NewHalfDay', workFromHomeRequest.halfDay));\r\n                message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\r\n                this.send(message).subscribe();\r\n            });\r\n        });\r\n    }\r\n    workFromHomeRequestAdded(workFromHomeRequest) {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        this.workFromHomeService.getUser(workFromHomeRequest.userId).subscribe(workFromHomeUser => {\r\n            const workFromHomeResource = Object.assign(new User, workFromHomeUser[0]);\r\n            let workFromHomeLink = window.location.href;\r\n            if (workFromHomeLink.indexOf(';') > -1) {\r\n                workFromHomeLink = workFromHomeLink.slice(0, workFromHomeLink.indexOf(';') + 1);\r\n            }\r\n            this.workFromHomeService.getReportingsTo(workFromHomeRequest.userId).subscribe(reportingsTo => {\r\n                const reportingsToUsers = [];\r\n                reportingsTo.forEach(user => {\r\n                    reportingsToUsers.push(Object.assign(new User(), user));\r\n                });\r\n                const message = new Message();\r\n                message.subject = 'Work From Home Request Added';\r\n                message.from = currentUser.email;\r\n                message.to = workFromHomeResource.email + ',' + reportingsToUsers.map(user => user.email).join(',') + ',' + 'GroupHumanResources';\r\n                message.body = 'HumanResources.WorkFromHomeRequestAdded';\r\n                message.messageParameters = new Array();\r\n                message.messageParameters.push(new MessageParameter('UserName', currentUser.userName));\r\n                message.messageParameters.push(new MessageParameter('UserFullName', workFromHomeRequest.userFullName));\r\n                message.messageParameters.push(new MessageParameter('StartDate', this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)));\r\n                message.messageParameters.push(new MessageParameter('EndDate', this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)));\r\n                message.messageParameters.push(new MessageParameter('DayNumber', workFromHomeRequest.dayNumber.toString()));\r\n                message.messageParameters.push(new MessageParameter('HalfDay', workFromHomeRequest.halfDay));\r\n                message.messageParameters.push(new MessageParameter('WorkFromHomeLink', workFromHomeLink));\r\n                this.send(message).subscribe();\r\n            });\r\n        });\r\n    }\r\n}\r\nMailService.ɵfac = function MailService_Factory(t) { return new (t || MailService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CoreDataService), i0.ɵɵinject(i3.DateTimeService), i0.ɵɵinject(i4.WorkFromHomeService)); };\r\nMailService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: MailService, factory: MailService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}
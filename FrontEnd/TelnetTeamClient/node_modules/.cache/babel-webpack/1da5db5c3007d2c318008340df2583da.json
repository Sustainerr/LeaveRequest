{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule, MaterialModule } from './shared/shared.module';\nimport { MenuItems } from './shared/menu-items/menu-items';\nimport { AuthGuard, AuthGuardLogin, AuthGuardReset } from 'app/guards';\nimport { SimpleNotificationsModule } from 'angular2-notifications';\nimport { CustomValidators } from 'app/shared/custom-validators/custom-validators';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\nimport { BotDetectCaptchaModule } from 'angular-captcha';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { ErrorInterceptor } from 'app/interceptors/error.interceptor';\nimport { HttpClientInterceptor } from 'app/interceptors/httpClient.interceptor';\nimport { AuthModule } from './components/auth/auth.module';\nimport { LockScreenModule } from './components/auth/lock-screen/lock-screen.module';\nimport { DirectivesModule } from './directives/shared/directives.module';\nimport { ProjectManagementModule } from './components/project-management/project-management.module';\nimport { HumanResourcesModule } from './components/human-resources/human-resources.module';\nimport { WorkFromHomeService } from './services/human-resources/work-from-home';\nimport { NotificationService, ShowErrorsService, GenericService, DateTimeService, PagerService, EntityParameterService, SearchFilterService, ExcelService, FileService, GroupsService, AuthenticationService, CoreDataService, MailService, SortService } from './services/shared';\nimport { NumberFormatter } from './helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular2-notifications\";\nimport * as i2 from \"@ng-idle/keepalive\";\nexport const CUSTOM_DT_FORMATS = {\n  parse: {\n    dateInput: 'L'\n  },\n  display: {\n    dateInput: 'L',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [CoreDataService, WorkFromHomeService, MailService, NotificationService, MenuItems, AuthGuard, ShowErrorsService, EntityParameterService, GenericService, DateTimeService, PagerService, AuthenticationService, FileService, CustomValidators, AuthGuardReset, CookieService, AuthGuardLogin, SearchFilterService, ExcelService, GroupsService, SortService, NumberFormatter, {\n      provide: MAT_DATE_LOCALE,\n      useValue: 'fr-FR'\n    }, {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE]\n    }, {\n      provide: MAT_DATE_FORMATS,\n      useValue: CUSTOM_DT_FORMATS\n    }, {\n      provide: MAT_DIALOG_DEFAULT_OPTIONS,\n      useValue: {\n        hasBackdrop: false\n      }\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpClientInterceptor,\n      multi: true\n    }, {\n      provide: MatDialogRef,\n      useValue: {}\n    }, {\n      provide: MAT_DIALOG_DATA,\n      useValue: []\n    }],\n    imports: [[CommonModule, BrowserModule, FormsModule, ReactiveFormsModule, HttpClientModule, BrowserAnimationsModule, SimpleNotificationsModule.forRoot(), AppRoutingModule, SharedModule, ProjectManagementModule, HumanResourcesModule, DirectivesModule, MaterialModule, ColorPickerModule, NgIdleKeepaliveModule.forRoot(), MatDialogModule, MatSnackBarModule, NgxMatSelectSearchModule, LockScreenModule, AuthModule, MatButtonModule, BotDetectCaptchaModule]]\n  });\n  return AppModule;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/app.module.ts"],"names":["BrowserModule","CommonModule","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","AppRoutingModule","AppComponent","SharedModule","MaterialModule","MenuItems","AuthGuard","AuthGuardLogin","AuthGuardReset","SimpleNotificationsModule","CustomValidators","ColorPickerModule","CookieService","MomentDateAdapter","MatButtonModule","MAT_DATE_LOCALE","DateAdapter","MAT_DATE_FORMATS","MatDialogRef","MAT_DIALOG_DATA","MatDialogModule","MAT_DIALOG_DEFAULT_OPTIONS","MatSnackBarModule","HTTP_INTERCEPTORS","HttpClientModule","NgIdleKeepaliveModule","BotDetectCaptchaModule","NgxMatSelectSearchModule","ErrorInterceptor","HttpClientInterceptor","AuthModule","LockScreenModule","DirectivesModule","ProjectManagementModule","HumanResourcesModule","WorkFromHomeService","NotificationService","ShowErrorsService","GenericService","DateTimeService","PagerService","EntityParameterService","SearchFilterService","ExcelService","FileService","GroupsService","AuthenticationService","CoreDataService","MailService","SortService","NumberFormatter","i0","i1","i2","CUSTOM_DT_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","ɵfac","AppModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","bootstrap","ɵinj","ɵɵdefineInjector","providers","provide","useValue","useClass","deps","hasBackdrop","multi","imports","forRoot"],"mappings":"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","sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule, MaterialModule } from './shared/shared.module';\r\nimport { MenuItems } from './shared/menu-items/menu-items';\r\nimport { AuthGuard, AuthGuardLogin, AuthGuardReset } from 'app/guards';\r\nimport { SimpleNotificationsModule } from 'angular2-notifications';\r\nimport { CustomValidators } from 'app/shared/custom-validators/custom-validators';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\r\nimport { BotDetectCaptchaModule } from 'angular-captcha';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { ErrorInterceptor } from 'app/interceptors/error.interceptor';\r\nimport { HttpClientInterceptor } from 'app/interceptors/httpClient.interceptor';\r\nimport { AuthModule } from './components/auth/auth.module';\r\nimport { LockScreenModule } from './components/auth/lock-screen/lock-screen.module';\r\nimport { DirectivesModule } from './directives/shared/directives.module';\r\nimport { ProjectManagementModule } from './components/project-management/project-management.module';\r\nimport { HumanResourcesModule } from './components/human-resources/human-resources.module';\r\nimport { WorkFromHomeService } from './services/human-resources/work-from-home';\r\nimport { NotificationService, ShowErrorsService, GenericService, DateTimeService, PagerService, EntityParameterService, SearchFilterService, ExcelService, FileService, GroupsService, AuthenticationService, CoreDataService, MailService, SortService } from './services/shared';\r\nimport { NumberFormatter } from './helpers';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"angular2-notifications\";\r\nimport * as i2 from \"@ng-idle/keepalive\";\r\nexport const CUSTOM_DT_FORMATS = {\r\n    parse: {\r\n        dateInput: 'L',\r\n    },\r\n    display: {\r\n        dateInput: 'L',\r\n        monthYearLabel: 'MMM YYYY',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'MMMM YYYY',\r\n    },\r\n};\r\nexport class AppModule {\r\n}\r\nAppModule.ɵfac = function AppModule_Factory(t) { return new (t || AppModule)(); };\r\nAppModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AppModule, bootstrap: [AppComponent] });\r\nAppModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        CoreDataService,\r\n        WorkFromHomeService,\r\n        MailService,\r\n        NotificationService,\r\n        MenuItems,\r\n        AuthGuard,\r\n        ShowErrorsService,\r\n        EntityParameterService,\r\n        GenericService,\r\n        DateTimeService,\r\n        PagerService,\r\n        AuthenticationService,\r\n        FileService,\r\n        CustomValidators,\r\n        AuthGuardReset,\r\n        CookieService,\r\n        AuthGuardLogin,\r\n        SearchFilterService,\r\n        ExcelService,\r\n        GroupsService,\r\n        SortService,\r\n        NumberFormatter,\r\n        { provide: MAT_DATE_LOCALE, useValue: 'fr-FR' },\r\n        { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n        { provide: MAT_DATE_FORMATS, useValue: CUSTOM_DT_FORMATS },\r\n        { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: false } },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n        { provide: HTTP_INTERCEPTORS, useClass: HttpClientInterceptor, multi: true },\r\n        { provide: MatDialogRef, useValue: {} },\r\n        { provide: MAT_DIALOG_DATA, useValue: [] },\r\n    ], imports: [[\r\n            CommonModule,\r\n            BrowserModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            HttpClientModule,\r\n            BrowserAnimationsModule,\r\n            SimpleNotificationsModule.forRoot(),\r\n            AppRoutingModule,\r\n            SharedModule,\r\n            ProjectManagementModule,\r\n            HumanResourcesModule,\r\n            DirectivesModule,\r\n            MaterialModule,\r\n            ColorPickerModule,\r\n            NgIdleKeepaliveModule.forRoot(),\r\n            MatDialogModule,\r\n            MatSnackBarModule,\r\n            NgxMatSelectSearchModule,\r\n            LockScreenModule,\r\n            AuthModule,\r\n            MatButtonModule,\r\n            BotDetectCaptchaModule\r\n        ]] });\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, ViewChild } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { CaptchaComponent } from 'angular-captcha';\nimport { PasswordStrengthBarComponent } from 'app/shared/password-strength-bar/password-strength-bar.component';\nlet LoginComponent = class LoginComponent {\n  constructor(route, router, authenticationService, cookieService) {\n    this.route = route;\n    this.router = router;\n    this.authenticationService = authenticationService;\n    this.cookieService = cookieService;\n    this.idleState = 'Not started.';\n    this.timedOut = false;\n    this.lastPing = null;\n    this.idlestart = false;\n    this.failedLogin = false;\n    this.failedCaptcha = false;\n    this.recaptchaSended = false;\n    this.userLogin = '';\n    this.userPassword = '';\n    this.isLoading = false;\n    this.commitTime = environment.commitTime;\n  }\n\n  ngOnInit() {\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\n    this.authenticationService.logout();\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'dashboard';\n    this.captchaComponent.captchaEndpoint = environment.apiUrl + environment.captchaEndpointUrl;\n  }\n\n  validateCaptcha() {\n    const userEnteredCaptchaCode = this.captchaComponent.userEnteredCaptchaCode;\n    const captchaId = this.captchaComponent.captchaId;\n    const postData = {\n      userEnteredCaptchaCode: userEnteredCaptchaCode,\n      captchaId: captchaId\n    };\n    this.authenticationService.validateCaptcha(postData).subscribe(response => {\n      if (response === 'false') {\n        this.failedLogin = false;\n        this.failedCaptcha = true;\n        this.captchaComponent.reloadImage();\n      } else {\n        this.login();\n        this.failedCaptcha = false;\n      }\n    }, error => {\n      this.failedLogin = false;\n      this.failedCaptcha = true;\n    });\n  }\n\n  login() {\n    this.isLoading = true;\n    const score = PasswordStrengthBarComponent.measureStrength(this.userPassword);\n    this.authenticationService.login(this.userLogin, this.userPassword, score).subscribe(userProfile => {\n      this.isLoading = false;\n\n      if (userProfile && this.authenticationService.isAuthenticated()) {\n        this.cookieService.set('userLogin', this.userLogin);\n\n        if (this.returnUrl.indexOf(';') > -1) {\n          this.getOptionalParameters(this.returnUrl);\n        } else {\n          this.router.navigate([this.returnUrl]);\n        }\n      } else {\n        this.failedCaptcha = false;\n        this.failedLogin = true;\n      }\n    }, () => {\n      this.isLoading = false;\n      this.failedCaptcha = false;\n      this.failedLogin = true;\n    });\n  }\n\n  getOptionalParameters(Url) {\n    const queryParams = {};\n    let param;\n    let value;\n    const route = Url.substr(0, Url.indexOf(';'));\n    let parameters = Url.substr(Url.indexOf(';') + 1, Url.length - Url.indexOf(';') - 1);\n\n    while (parameters.indexOf(';') > -1) {\n      param = parameters.substr(0, parameters.indexOf('='));\n      value = parameters.substr(parameters.indexOf('=') + 1, parameters.indexOf(';') - parameters.indexOf('=') - 1);\n      queryParams[param] = value;\n      parameters = parameters.substr(parameters.indexOf(';') + 1, parameters.length - parameters.indexOf(';') - 1);\n    }\n\n    param = parameters.substr(0, parameters.indexOf('='));\n    value = parameters.substr(parameters.indexOf('=') + 1, parameters.length - parameters.indexOf('=') - 1);\n    queryParams[param] = value;\n    this.router.navigate([route], {\n      queryParams\n    });\n  }\n\n};\n\n__decorate([ViewChild(CaptchaComponent, {\n  static: true\n})], LoginComponent.prototype, \"captchaComponent\", void 0);\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/components/auth/login/login.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Component","ViewChild","environment","CaptchaComponent","PasswordStrengthBarComponent","LoginComponent","constructor","route","router","authenticationService","cookieService","idleState","timedOut","lastPing","idlestart","failedLogin","failedCaptcha","recaptchaSended","userLogin","userPassword","isLoading","commitTime","ngOnInit","document","querySelector","setAttribute","logout","returnUrl","snapshot","queryParams","captchaComponent","captchaEndpoint","apiUrl","captchaEndpointUrl","validateCaptcha","userEnteredCaptchaCode","captchaId","postData","subscribe","response","reloadImage","login","error","score","measureStrength","userProfile","isAuthenticated","set","indexOf","getOptionalParameters","navigate","Url","param","value","substr","parameters","static","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { CaptchaComponent } from 'angular-captcha';\r\nimport { PasswordStrengthBarComponent } from 'app/shared/password-strength-bar/password-strength-bar.component';\r\nlet LoginComponent = class LoginComponent {\r\n    constructor(route, router, authenticationService, cookieService) {\r\n        this.route = route;\r\n        this.router = router;\r\n        this.authenticationService = authenticationService;\r\n        this.cookieService = cookieService;\r\n        this.idleState = 'Not started.';\r\n        this.timedOut = false;\r\n        this.lastPing = null;\r\n        this.idlestart = false;\r\n        this.failedLogin = false;\r\n        this.failedCaptcha = false;\r\n        this.recaptchaSended = false;\r\n        this.userLogin = '';\r\n        this.userPassword = '';\r\n        this.isLoading = false;\r\n        this.commitTime = environment.commitTime;\r\n    }\r\n    ngOnInit() {\r\n        document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n        this.authenticationService.logout();\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'dashboard';\r\n        this.captchaComponent.captchaEndpoint = environment.apiUrl + environment.captchaEndpointUrl;\r\n    }\r\n    validateCaptcha() {\r\n        const userEnteredCaptchaCode = this.captchaComponent.userEnteredCaptchaCode;\r\n        const captchaId = this.captchaComponent.captchaId;\r\n        const postData = {\r\n            userEnteredCaptchaCode: userEnteredCaptchaCode,\r\n            captchaId: captchaId\r\n        };\r\n        this.authenticationService.validateCaptcha(postData)\r\n            .subscribe(response => {\r\n            if (response === 'false') {\r\n                this.failedLogin = false;\r\n                this.failedCaptcha = true;\r\n                this.captchaComponent.reloadImage();\r\n            }\r\n            else {\r\n                this.login();\r\n                this.failedCaptcha = false;\r\n            }\r\n        }, error => {\r\n            this.failedLogin = false;\r\n            this.failedCaptcha = true;\r\n        });\r\n    }\r\n    login() {\r\n        this.isLoading = true;\r\n        const score = PasswordStrengthBarComponent.measureStrength(this.userPassword);\r\n        this.authenticationService.login(this.userLogin, this.userPassword, score)\r\n            .subscribe(userProfile => {\r\n            this.isLoading = false;\r\n            if (userProfile && this.authenticationService.isAuthenticated()) {\r\n                this.cookieService.set('userLogin', this.userLogin);\r\n                if (this.returnUrl.indexOf(';') > -1) {\r\n                    this.getOptionalParameters(this.returnUrl);\r\n                }\r\n                else {\r\n                    this.router.navigate([this.returnUrl]);\r\n                }\r\n            }\r\n            else {\r\n                this.failedCaptcha = false;\r\n                this.failedLogin = true;\r\n            }\r\n        }, () => {\r\n            this.isLoading = false;\r\n            this.failedCaptcha = false;\r\n            this.failedLogin = true;\r\n        });\r\n    }\r\n    getOptionalParameters(Url) {\r\n        const queryParams = {};\r\n        let param;\r\n        let value;\r\n        const route = Url.substr(0, Url.indexOf(';'));\r\n        let parameters = Url.substr(Url.indexOf(';') + 1, Url.length - Url.indexOf(';') - 1);\r\n        while (parameters.indexOf(';') > -1) {\r\n            param = parameters.substr(0, parameters.indexOf('='));\r\n            value = parameters.substr(parameters.indexOf('=') + 1, parameters.indexOf(';') - parameters.indexOf('=') - 1);\r\n            queryParams[param] = value;\r\n            parameters = parameters.substr(parameters.indexOf(';') + 1, parameters.length - parameters.indexOf(';') - 1);\r\n        }\r\n        param = parameters.substr(0, parameters.indexOf('='));\r\n        value = parameters.substr(parameters.indexOf('=') + 1, parameters.length - parameters.indexOf('=') - 1);\r\n        queryParams[param] = value;\r\n        this.router.navigate([route], { queryParams });\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild(CaptchaComponent, { static: true })\r\n], LoginComponent.prototype, \"captchaComponent\", void 0);\r\nLoginComponent = __decorate([\r\n    Component({\r\n        selector: 'app-login',\r\n        templateUrl: './login.component.html',\r\n        styleUrls: ['./login.component.scss']\r\n    })\r\n], LoginComponent);\r\nexport { LoginComponent };\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject, ReplaySubject, Subscription } from 'rxjs/index';\nimport { takeUntil } from 'rxjs/operators';\nimport { Reference } from 'app/models/project-management/project';\nlet EditReferenceComponent = class EditReferenceComponent {\n  constructor(notificationService, referenceService, _avRoute, router, dateTimeService) {\n    this.notificationService = notificationService;\n    this.referenceService = referenceService;\n    this._avRoute = _avRoute;\n    this.router = router;\n    this.dateTimeService = dateTimeService;\n    this.reference = new Reference();\n    this.disableGenerator = true;\n    this.subscription = new Subscription();\n    this.isSameActivity = true;\n    this.filteredDocumentTypes = new ReplaySubject(1);\n    this.documentTypeFilterCtrl = new FormControl();\n    this.filteredAbbreviations = new ReplaySubject(1);\n    this.abbrivationFilterCtrl = new FormControl();\n    this._onDestroy = new Subject();\n    this.previousState = {\n      getPrevious: false,\n      pageIndex: null,\n      pageSize: null\n    };\n  }\n\n  ngOnInit() {\n    if (this.reference.referenceId !== 0) {\n      this.isSameActivity = this.reference.activityId === JSON.parse(localStorage.getItem('currentUser')).activityId;\n    } else {\n      this.disableGenerator = false;\n    }\n\n    this._avRoute.params.subscribe(param => {\n      if (param.referenceId !== undefined && param.referenceId !== null) {\n        this.getReferenceProject(+param.referenceId);\n      }\n    });\n\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.reference.creationDate = this.dateTimeService.today();\n    this.getDocumentTypes();\n    this.getStates();\n    this.getConfidentialities();\n    this.abbrivationFilterCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      this.filterAbbreviations();\n    });\n    this.documentTypeFilterCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      this.filterDocumentTypes();\n    });\n    this.subscription.add(this.referenceService.savedReference.subscribe(data => {\n      if (data) {\n        this.previousState = data;\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  getDocumentTypes() {\n    this.referenceService.getTypesDocuments().subscribe(data => {\n      if (data != null) {\n        this.documentTypesIdentifiers = data;\n        this.filteredDocumentTypes.next(this.documentTypesIdentifiers.slice());\n      }\n    });\n  }\n\n  getStates() {\n    this.referenceService.getDocumentStates().subscribe(data => {\n      if (data != null) {\n        this.documentStatesIdentifiers = data;\n      }\n    });\n  }\n\n  getConfidentialities() {\n    this.referenceService.GetDocumentConfidentialities().subscribe(data => {\n      if (data != null) {\n        this.documentConfidentialitiesIdentifiers = data;\n      }\n    });\n  }\n\n  getProjectAbbreviationByActivity(activityId) {\n    this.referenceService.getActivityAbbriviations(activityId).subscribe(data => {\n      if (data != null) {\n        this.projectsAbrreviation = data;\n        this.filteredAbbreviations.next(this.projectsAbrreviation.slice());\n      }\n    });\n  }\n\n  getReferenceProject(referenceId) {\n    this.disableGenerator = true;\n    this.referenceService.getReferenceProject(referenceId).subscribe(data => {\n      this.reference = Object.assign(new Reference(), data[0]);\n      this.isSameActivity = this.reference.activityId === JSON.parse(localStorage.getItem('currentUser')).activityId;\n      const splittedReferenceParts = this.getReferenceParts(this.reference.referenceCode);\n      this.projectAbrreviation = splittedReferenceParts[2];\n      this.confidentialityCode = splittedReferenceParts[4].split(' ')[1];\n    });\n  }\n\n  onActivtyChange(activityId) {\n    this.getProjectAbbreviationByActivity(activityId);\n  }\n\n  buildReferenceToSave(activityCode) {\n    const referenceToSave = new Reference();\n    referenceToSave.referenceId = this.reference.referenceId;\n    referenceToSave.referenceCode = this.reference.referenceCode;\n    referenceToSave.title = this.reference.title;\n    referenceToSave.edition = this.reference.edition;\n    referenceToSave.creationDate = this.reference.creationDate;\n    referenceToSave.stateId = this.reference.stateId;\n    referenceToSave.note = this.reference.note;\n    referenceToSave.archiving = this.reference.archiving;\n    referenceToSave.userId = this.reference.userId;\n    referenceToSave.activityId = this.reference.activityId;\n    referenceToSave.typeId = this.reference.typeId;\n\n    if (this.reference.referenceId === 0) {\n      // if new reference build new reference code\n      const typeAbbreviation = this.documentTypesIdentifiers.filter(document => document.id === this.reference.typeId)[0].description.split('/')[0];\n      const creationYear = new Date(this.reference.creationDate).getFullYear().toString().substring(2); // expression ***** will be replaced by incremented counter in the stored procedure\n\n      referenceToSave.referenceCode = typeAbbreviation + '.' + activityCode + '.' + this.projectAbrreviation.toUpperCase() + '.*****.' + creationYear + ' ' + this.confidentialityCode;\n    }\n\n    return referenceToSave;\n  }\n\n  getLabelSubmit() {\n    return this.disableGenerator ? 'Save' : 'Generate & Save';\n  }\n\n  saveReference() {\n    if (this.referenceForm.valid) {\n      this.referenceService.getActivityCode(this.reference.activityId).subscribe(data => {\n        const activityCode = data.length !== 0 ? data[0].activityCode : 'TXA';\n        this.reference.userId = +this.currentUser.userId;\n        this.reference.edition = +this.reference.edition.toString().replace(',', '.');\n        const referenceToSave = this.buildReferenceToSave(activityCode);\n        this.referenceService.saveReferenceGenerator(referenceToSave).subscribe(referenceId => {\n          this.notificationService.success('Reference saved successfully');\n\n          if (this.reference.referenceId === 0) {\n            this.getReferenceProject(+referenceId);\n          } else {\n            this.close();\n          }\n        });\n      });\n    } else {\n      this.notificationService.danger('Please fill all required fields');\n    }\n  }\n\n  close() {\n    if (this.previousState.pageIndex != null) {\n      this.previousState.getPrevious = true;\n      this.referenceService.savedReference.next(this.previousState);\n    }\n\n    this.router.navigate(['/project-management/project/references']);\n  }\n\n  filterAbbreviations() {\n    if (!this.projectsAbrreviation) {\n      return;\n    }\n\n    let search = this.abbrivationFilterCtrl.value;\n\n    if (!search) {\n      this.filteredAbbreviations.next(this.projectsAbrreviation.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n\n    this.filteredAbbreviations.next(this.projectsAbrreviation.filter(abbriviation => abbriviation.value.toLowerCase().indexOf(search) > -1));\n  }\n\n  filterDocumentTypes() {\n    if (!this.documentTypesIdentifiers) {\n      return;\n    }\n\n    let search = this.documentTypeFilterCtrl.value;\n\n    if (!search) {\n      this.filteredDocumentTypes.next(this.documentTypesIdentifiers.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n\n    this.filteredDocumentTypes.next(this.documentTypesIdentifiers.filter(documentType => documentType.description.toLowerCase().indexOf(search) > -1));\n  }\n\n  getReferenceParts(reference) {\n    const referenceElements = reference.split('.');\n    const referenceElementsNumber = referenceElements.length;\n    let referenceParts = [];\n\n    if (referenceElementsNumber > 5) {\n      let position = 1;\n      let part = '';\n      referenceElements.forEach(element => {\n        if (part === '') {\n          part += element;\n        } else {\n          part += '.' + element;\n        }\n\n        if (position < 3 || position >= referenceElementsNumber - 2) {\n          referenceParts.push(part);\n          part = '';\n        }\n\n        position++;\n      });\n    } else {\n      referenceParts = referenceElements;\n    }\n\n    return referenceParts;\n  }\n\n};\n\n__decorate([ViewChild('referenceForm', {\n  static: true\n})], EditReferenceComponent.prototype, \"referenceForm\", void 0);\n\nEditReferenceComponent = __decorate([Component({\n  selector: 'app-edit-reference',\n  templateUrl: './edit-reference.component.html',\n  styleUrls: ['./edit-reference.component.scss']\n})], EditReferenceComponent);\nexport { EditReferenceComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/components/project-management/project/references/edit-reference/edit-reference.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Component","ViewChild","FormControl","Subject","ReplaySubject","Subscription","takeUntil","Reference","EditReferenceComponent","constructor","notificationService","referenceService","_avRoute","router","dateTimeService","reference","disableGenerator","subscription","isSameActivity","filteredDocumentTypes","documentTypeFilterCtrl","filteredAbbreviations","abbrivationFilterCtrl","_onDestroy","previousState","getPrevious","pageIndex","pageSize","ngOnInit","referenceId","activityId","JSON","parse","localStorage","getItem","params","subscribe","param","undefined","getReferenceProject","currentUser","creationDate","today","getDocumentTypes","getStates","getConfidentialities","valueChanges","pipe","filterAbbreviations","filterDocumentTypes","add","savedReference","data","ngOnDestroy","unsubscribe","getTypesDocuments","documentTypesIdentifiers","next","slice","getDocumentStates","documentStatesIdentifiers","GetDocumentConfidentialities","documentConfidentialitiesIdentifiers","getProjectAbbreviationByActivity","getActivityAbbriviations","projectsAbrreviation","assign","splittedReferenceParts","getReferenceParts","referenceCode","projectAbrreviation","confidentialityCode","split","onActivtyChange","buildReferenceToSave","activityCode","referenceToSave","title","edition","stateId","note","archiving","userId","typeId","typeAbbreviation","filter","document","id","description","creationYear","Date","getFullYear","toString","substring","toUpperCase","getLabelSubmit","saveReference","referenceForm","valid","getActivityCode","replace","saveReferenceGenerator","success","close","danger","navigate","search","value","toLowerCase","abbriviation","indexOf","documentType","referenceElements","referenceElementsNumber","referenceParts","position","part","forEach","element","push","static","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subject, ReplaySubject, Subscription } from 'rxjs/index';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Reference } from 'app/models/project-management/project';\r\nlet EditReferenceComponent = class EditReferenceComponent {\r\n    constructor(notificationService, referenceService, _avRoute, router, dateTimeService) {\r\n        this.notificationService = notificationService;\r\n        this.referenceService = referenceService;\r\n        this._avRoute = _avRoute;\r\n        this.router = router;\r\n        this.dateTimeService = dateTimeService;\r\n        this.reference = new Reference();\r\n        this.disableGenerator = true;\r\n        this.subscription = new Subscription();\r\n        this.isSameActivity = true;\r\n        this.filteredDocumentTypes = new ReplaySubject(1);\r\n        this.documentTypeFilterCtrl = new FormControl();\r\n        this.filteredAbbreviations = new ReplaySubject(1);\r\n        this.abbrivationFilterCtrl = new FormControl();\r\n        this._onDestroy = new Subject();\r\n        this.previousState = {\r\n            getPrevious: false,\r\n            pageIndex: null,\r\n            pageSize: null,\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        if (this.reference.referenceId !== 0) {\r\n            this.isSameActivity = this.reference.activityId === JSON.parse(localStorage.getItem('currentUser')).activityId;\r\n        }\r\n        else {\r\n            this.disableGenerator = false;\r\n        }\r\n        this._avRoute.params.subscribe(param => {\r\n            if (param.referenceId !== undefined && param.referenceId !== null) {\r\n                this.getReferenceProject(+param.referenceId);\r\n            }\r\n        });\r\n        this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        this.reference.creationDate = this.dateTimeService.today();\r\n        this.getDocumentTypes();\r\n        this.getStates();\r\n        this.getConfidentialities();\r\n        this.abbrivationFilterCtrl.valueChanges\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(() => {\r\n            this.filterAbbreviations();\r\n        });\r\n        this.documentTypeFilterCtrl.valueChanges\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(() => {\r\n            this.filterDocumentTypes();\r\n        });\r\n        this.subscription.add(this.referenceService.savedReference.subscribe((data) => {\r\n            if (data) {\r\n                this.previousState = data;\r\n            }\r\n        }));\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n    getDocumentTypes() {\r\n        this.referenceService.getTypesDocuments()\r\n            .subscribe(data => {\r\n            if (data != null) {\r\n                this.documentTypesIdentifiers = data;\r\n                this.filteredDocumentTypes.next(this.documentTypesIdentifiers.slice());\r\n            }\r\n        });\r\n    }\r\n    getStates() {\r\n        this.referenceService.getDocumentStates()\r\n            .subscribe(data => {\r\n            if (data != null) {\r\n                this.documentStatesIdentifiers = data;\r\n            }\r\n        });\r\n    }\r\n    getConfidentialities() {\r\n        this.referenceService.GetDocumentConfidentialities()\r\n            .subscribe(data => {\r\n            if (data != null) {\r\n                this.documentConfidentialitiesIdentifiers = data;\r\n            }\r\n        });\r\n    }\r\n    getProjectAbbreviationByActivity(activityId) {\r\n        this.referenceService.getActivityAbbriviations(activityId)\r\n            .subscribe(data => {\r\n            if (data != null) {\r\n                this.projectsAbrreviation = data;\r\n                this.filteredAbbreviations.next(this.projectsAbrreviation.slice());\r\n            }\r\n        });\r\n    }\r\n    getReferenceProject(referenceId) {\r\n        this.disableGenerator = true;\r\n        this.referenceService.getReferenceProject(referenceId).subscribe(data => {\r\n            this.reference = Object.assign(new Reference, data[0]);\r\n            this.isSameActivity = this.reference.activityId === JSON.parse(localStorage.getItem('currentUser')).activityId;\r\n            const splittedReferenceParts = this.getReferenceParts(this.reference.referenceCode);\r\n            this.projectAbrreviation = splittedReferenceParts[2];\r\n            this.confidentialityCode = splittedReferenceParts[4].split(' ')[1];\r\n        });\r\n    }\r\n    onActivtyChange(activityId) {\r\n        this.getProjectAbbreviationByActivity(activityId);\r\n    }\r\n    buildReferenceToSave(activityCode) {\r\n        const referenceToSave = new Reference();\r\n        referenceToSave.referenceId = this.reference.referenceId;\r\n        referenceToSave.referenceCode = this.reference.referenceCode;\r\n        referenceToSave.title = this.reference.title;\r\n        referenceToSave.edition = this.reference.edition;\r\n        referenceToSave.creationDate = this.reference.creationDate;\r\n        referenceToSave.stateId = this.reference.stateId;\r\n        referenceToSave.note = this.reference.note;\r\n        referenceToSave.archiving = this.reference.archiving;\r\n        referenceToSave.userId = this.reference.userId;\r\n        referenceToSave.activityId = this.reference.activityId;\r\n        referenceToSave.typeId = this.reference.typeId;\r\n        if (this.reference.referenceId === 0) {\r\n            // if new reference build new reference code\r\n            const typeAbbreviation = this.documentTypesIdentifiers.filter(document => document.id === this.reference.typeId)[0].description.split('/')[0];\r\n            const creationYear = new Date(this.reference.creationDate).getFullYear().toString().substring(2);\r\n            // expression ***** will be replaced by incremented counter in the stored procedure\r\n            referenceToSave.referenceCode = typeAbbreviation + '.' + activityCode + '.' +\r\n                this.projectAbrreviation.toUpperCase() + '.*****.' + creationYear + ' ' + this.confidentialityCode;\r\n        }\r\n        return referenceToSave;\r\n    }\r\n    getLabelSubmit() {\r\n        return this.disableGenerator ? 'Save' : 'Generate & Save';\r\n    }\r\n    saveReference() {\r\n        if (this.referenceForm.valid) {\r\n            this.referenceService.getActivityCode(this.reference.activityId).subscribe(data => {\r\n                const activityCode = (data.length !== 0) ? data[0].activityCode : 'TXA';\r\n                this.reference.userId = +this.currentUser.userId;\r\n                this.reference.edition = +this.reference.edition.toString().replace(',', '.');\r\n                const referenceToSave = this.buildReferenceToSave(activityCode);\r\n                this.referenceService.saveReferenceGenerator(referenceToSave).subscribe((referenceId) => {\r\n                    this.notificationService.success('Reference saved successfully');\r\n                    if (this.reference.referenceId === 0) {\r\n                        this.getReferenceProject(+referenceId);\r\n                    }\r\n                    else {\r\n                        this.close();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            this.notificationService.danger('Please fill all required fields');\r\n        }\r\n    }\r\n    close() {\r\n        if (this.previousState.pageIndex != null) {\r\n            this.previousState.getPrevious = true;\r\n            this.referenceService.savedReference.next(this.previousState);\r\n        }\r\n        this.router.navigate(['/project-management/project/references']);\r\n    }\r\n    filterAbbreviations() {\r\n        if (!this.projectsAbrreviation) {\r\n            return;\r\n        }\r\n        let search = this.abbrivationFilterCtrl.value;\r\n        if (!search) {\r\n            this.filteredAbbreviations.next(this.projectsAbrreviation.slice());\r\n            return;\r\n        }\r\n        else {\r\n            search = search.toLowerCase();\r\n        }\r\n        this.filteredAbbreviations.next(this.projectsAbrreviation.filter(abbriviation => abbriviation.value.toLowerCase().indexOf(search) > -1));\r\n    }\r\n    filterDocumentTypes() {\r\n        if (!this.documentTypesIdentifiers) {\r\n            return;\r\n        }\r\n        let search = this.documentTypeFilterCtrl.value;\r\n        if (!search) {\r\n            this.filteredDocumentTypes.next(this.documentTypesIdentifiers.slice());\r\n            return;\r\n        }\r\n        else {\r\n            search = search.toLowerCase();\r\n        }\r\n        this.filteredDocumentTypes.next(this.documentTypesIdentifiers.filter(documentType => documentType.description.toLowerCase().indexOf(search) > -1));\r\n    }\r\n    getReferenceParts(reference) {\r\n        const referenceElements = reference.split('.');\r\n        const referenceElementsNumber = referenceElements.length;\r\n        let referenceParts = [];\r\n        if (referenceElementsNumber > 5) {\r\n            let position = 1;\r\n            let part = '';\r\n            referenceElements.forEach(element => {\r\n                if (part === '') {\r\n                    part += element;\r\n                }\r\n                else {\r\n                    part += '.' + element;\r\n                }\r\n                if (position < 3 || position >= referenceElementsNumber - 2) {\r\n                    referenceParts.push(part);\r\n                    part = '';\r\n                }\r\n                position++;\r\n            });\r\n        }\r\n        else {\r\n            referenceParts = referenceElements;\r\n        }\r\n        return referenceParts;\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('referenceForm', { static: true })\r\n], EditReferenceComponent.prototype, \"referenceForm\", void 0);\r\nEditReferenceComponent = __decorate([\r\n    Component({\r\n        selector: 'app-edit-reference',\r\n        templateUrl: './edit-reference.component.html',\r\n        styleUrls: ['./edit-reference.component.scss']\r\n    })\r\n], EditReferenceComponent);\r\nexport { EditReferenceComponent };\r\n"]},"metadata":{},"sourceType":"module"}
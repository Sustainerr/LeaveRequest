{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar http_1 = require(\"@angular/common/http\");\n\nvar captcha_endpoint_pipe_1 = require(\"./captcha-endpoint.pipe\");\n\nvar config_1 = require(\"./config\");\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ɵngcc1 = require('@angular/common/http');\n\nvar ɵngcc2 = require('./captcha-endpoint.pipe');\n\nvar CaptchaService =\n/** @class */\nfunction () {\n  function CaptchaService(http, captchaEndpointPipe, config) {\n    this.http = http;\n    this.captchaEndpointPipe = captchaEndpointPipe;\n    this.config = config;\n  }\n\n  Object.defineProperty(CaptchaService.prototype, \"captchaStyleName\", {\n    get: function () {\n      return this._captchaStyleName;\n    },\n    set: function (captchaStyleName) {\n      this._captchaStyleName = captchaStyleName;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CaptchaService.prototype, \"captchaEndpoint\", {\n    // the captcha endpoint for botdetect requests.\n    get: function () {\n      var captchaEndpoint = this._captchaEndpoint;\n\n      if (this.config && this.config.captchaEndpoint) {\n        captchaEndpoint = this.config.captchaEndpoint;\n      }\n\n      return this.captchaEndpointPipe.transform(captchaEndpoint);\n    },\n    set: function (captchaEndpoint) {\n      this._captchaEndpoint = captchaEndpoint;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CaptchaService.prototype, \"botdetectInstance\", {\n    // get botdetect instance, which is provided by botdetect script.\n    get: function () {\n      return BotDetect.getInstanceByStyleName(this.captchaStyleName);\n    },\n    enumerable: true,\n    configurable: true\n  }); // get captcha html markup from botdetect api.\n\n  CaptchaService.prototype.getHtml = function () {\n    if (!this.captchaEndpoint) {\n      var errorMessage = \"captchaEndpoint property is not set!\\n    The Angular Captcha Module requires the \\\"this.captchaComponent.captchaEndpoint\\\" property to be set.\\n    For example: \\n    ngOnInit(): void {\\n      this.captchaComponent.captchaEndpoint = 'https://your-app-backend-hostname.your-domain.com/simple-captcha-endpoint-path';\\n    }\\n      \";\n      throw new Error(errorMessage);\n    }\n\n    var url = this.captchaEndpoint + '?get=html&c=' + this.captchaStyleName;\n    return this.http.get(url, {\n      responseType: 'text'\n    });\n  }; // ui validate captcha.\n\n\n  CaptchaService.prototype.validateUnsafe = function (captchaCode) {\n    if (!this.botdetectInstance) {\n      throw new Error('BotDetect instance does not exist.');\n    }\n\n    var url = this.botdetectInstance.validationUrl + '&i=' + captchaCode;\n    return this.http.get(url);\n  };\n  /** @nocollapse */\n\n\n  CaptchaService.ctorParameters = function () {\n    return [{\n      type: http_1.HttpClient\n    }, {\n      type: captcha_endpoint_pipe_1.CaptchaEndpointPipe\n    }, {\n      type: undefined,\n      decorators: [{\n        type: core_1.Inject,\n        args: [config_1.CAPTCHA_SETTINGS]\n      }]\n    }];\n  };\n\n  CaptchaService.ɵfac = function CaptchaService_Factory(t) {\n    return new (t || CaptchaService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(ɵngcc2.CaptchaEndpointPipe), ɵngcc0.ɵɵinject(config_1.CAPTCHA_SETTINGS));\n  };\n\n  CaptchaService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: CaptchaService,\n    factory: function (t) {\n      return CaptchaService.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return CaptchaService;\n}();\n\nexports.CaptchaService = CaptchaService;","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/node_modules/angular-captcha/__ivy_ngcc__/src/captcha.service.js"],"names":["Object","defineProperty","exports","value","core_1","require","http_1","captcha_endpoint_pipe_1","config_1","ɵngcc0","ɵngcc1","ɵngcc2","CaptchaService","http","captchaEndpointPipe","config","prototype","get","_captchaStyleName","set","captchaStyleName","enumerable","configurable","captchaEndpoint","_captchaEndpoint","transform","BotDetect","getInstanceByStyleName","getHtml","errorMessage","Error","url","responseType","validateUnsafe","captchaCode","botdetectInstance","validationUrl","ctorParameters","type","HttpClient","CaptchaEndpointPipe","undefined","decorators","Inject","args","CAPTCHA_SETTINGS","ɵfac","CaptchaService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar captcha_endpoint_pipe_1 = require(\"./captcha-endpoint.pipe\");\r\nvar config_1 = require(\"./config\");\r\nvar ɵngcc0 = require('@angular/core');\nvar ɵngcc1 = require('@angular/common/http');\nvar ɵngcc2 = require('./captcha-endpoint.pipe');\nvar CaptchaService = /** @class */ (function () {\r\n    function CaptchaService(http, captchaEndpointPipe, config) {\r\n        this.http = http;\r\n        this.captchaEndpointPipe = captchaEndpointPipe;\r\n        this.config = config;\r\n    }\r\n    Object.defineProperty(CaptchaService.prototype, \"captchaStyleName\", {\r\n        get: function () {\r\n            return this._captchaStyleName;\r\n        },\r\n        set: function (captchaStyleName) {\r\n            this._captchaStyleName = captchaStyleName;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CaptchaService.prototype, \"captchaEndpoint\", {\r\n        // the captcha endpoint for botdetect requests.\r\n        get: function () {\r\n            var captchaEndpoint = this._captchaEndpoint;\r\n            if (this.config && this.config.captchaEndpoint) {\r\n                captchaEndpoint = this.config.captchaEndpoint;\r\n            }\r\n            return this.captchaEndpointPipe.transform(captchaEndpoint);\r\n        },\r\n        set: function (captchaEndpoint) {\r\n            this._captchaEndpoint = captchaEndpoint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CaptchaService.prototype, \"botdetectInstance\", {\r\n        // get botdetect instance, which is provided by botdetect script.\r\n        get: function () {\r\n            return BotDetect.getInstanceByStyleName(this.captchaStyleName);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // get captcha html markup from botdetect api.\r\n    CaptchaService.prototype.getHtml = function () {\r\n        if (!this.captchaEndpoint) {\r\n            var errorMessage = \"captchaEndpoint property is not set!\\n    The Angular Captcha Module requires the \\\"this.captchaComponent.captchaEndpoint\\\" property to be set.\\n    For example: \\n    ngOnInit(): void {\\n      this.captchaComponent.captchaEndpoint = 'https://your-app-backend-hostname.your-domain.com/simple-captcha-endpoint-path';\\n    }\\n      \";\r\n            throw new Error(errorMessage);\r\n        }\r\n        var url = this.captchaEndpoint + '?get=html&c=' + this.captchaStyleName;\r\n        return this.http.get(url, { responseType: 'text' });\r\n    };\r\n    // ui validate captcha.\r\n    CaptchaService.prototype.validateUnsafe = function (captchaCode) {\r\n        if (!this.botdetectInstance) {\r\n            throw new Error('BotDetect instance does not exist.');\r\n        }\r\n        var url = this.botdetectInstance.validationUrl + '&i=' + captchaCode;\r\n        return this.http.get(url);\r\n    };\r\n    /** @nocollapse */\r\n    CaptchaService.ctorParameters = function () { return [\r\n        { type: http_1.HttpClient, },\r\n        { type: captcha_endpoint_pipe_1.CaptchaEndpointPipe, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [config_1.CAPTCHA_SETTINGS,] },] },\r\n    ]; };\nCaptchaService.ɵfac = function CaptchaService_Factory(t) { return new (t || CaptchaService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(ɵngcc2.CaptchaEndpointPipe), ɵngcc0.ɵɵinject(config_1.CAPTCHA_SETTINGS)); };\nCaptchaService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CaptchaService, factory: function (t) { return CaptchaService.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CaptchaService, [{\n        type: core_1.Injectable\n    }], function () { return [{ type: ɵngcc1.HttpClient }, { type: ɵngcc2.CaptchaEndpointPipe }, { type: undefined, decorators: [{\n                type: core_1.Inject,\n                args: [config_1.CAPTCHA_SETTINGS]\n            }] }]; }, null); })();\r\n    return CaptchaService;\r\n}());\r\nexports.CaptchaService = CaptchaService;\r\n\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nlet AddEmpSomeoneComponent = class AddEmpSomeoneComponent {\n  constructor(fb, http, authService, dataService) {\n    this.fb = fb;\n    this.http = http;\n    this.authService = authService;\n    this.dataService = dataService;\n    this.typeCongeUrl = 'https://localhost:7216/api/TypeConges/byRole';\n    this.congesUrl = 'https://localhost:7216/api/conges';\n    this.userRole = '';\n    this.leaveTypes = [];\n    console.log('AddEmpSomeoneComponent instantiated');\n    this.leaveForm = this.fb.group({\n      dateDebut: ['', Validators.required],\n      dateFin: ['', Validators.required],\n      type: ['', Validators.required],\n      matricule: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit called');\n    const token = this.authService.getToken();\n    console.log('Token:', token);\n\n    if (token) {\n      const parsedToken = this.parseToken(token);\n      console.log('Parsed Token:', parsedToken);\n      const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\n      console.log('User ID:', userId);\n\n      if (userId) {\n        this.authService.getUserById(userId).subscribe(data => {\n          console.log('User data:', data);\n          this.userRole = data.role;\n          this.userGroupId = data.groupe_Id; // Assuming the API response contains groupe_Id\n\n          console.log('User Role:', this.userRole);\n          console.log('User Group ID:', this.userGroupId);\n          this.getLeaveTypesForRoles(this.userRole);\n        }, error => {\n          console.error('Error fetching user data:', error);\n        });\n      } else {\n        console.error('userId is undefined.');\n      }\n    } else {\n      console.error('Token is not available.');\n    }\n  }\n\n  parseToken(token) {\n    try {\n      const payload = atob(token.split('.')[1]);\n      return JSON.parse(payload);\n    } catch (error) {\n      console.error('Error parsing token:', error);\n      return null;\n    }\n  }\n\n  getLeaveTypesForRoles(role) {\n    this.getLeaveTypesByRole('utilisateur').pipe(switchMap(utilisateurTypes => {\n      this.leaveTypes = utilisateurTypes;\n\n      if (role === 'Chef') {\n        return this.getLeaveTypesByRole('Chef');\n      } else if (role === 'Admin') {\n        return this.getLeaveTypesByRole('chef').pipe(switchMap(chefTypes => {\n          this.leaveTypes = this.leaveTypes.concat(chefTypes);\n          return this.getLeaveTypesByRole('Admin');\n        }));\n      } else {\n        return of([]); // No additional types to fetch\n      }\n    }), catchError(error => {\n      console.error('Error fetching leave types:', error);\n      return of([]); // Return an empty array on error\n    })).subscribe(additionalTypes => {\n      if (role === 'Chef' || role === 'Admin') {\n        this.leaveTypes = this.leaveTypes.concat(additionalTypes);\n      }\n\n      console.log('Combined leave types:', this.leaveTypes);\n    });\n  }\n\n  getLeaveTypesByRole(role) {\n    const url = `${this.typeCongeUrl}/${role}`;\n    console.log(`Fetching leave types for role: ${role} from URL: ${url}`);\n    return this.http.get(url).pipe(catchError(error => {\n      console.error(`Error fetching leave types for role ${role}:`, error);\n      return of([]);\n    }));\n  }\n\n  onSubmit() {\n    if (this.leaveForm.valid) {\n      const token = this.authService.getToken();\n\n      if (token) {\n        const parsedToken = this.parseToken(token);\n        const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\n        const leaveRequest = {\n          date_Debut: this.leaveForm.value.dateDebut,\n          date_Fin: this.leaveForm.value.dateFin,\n          statut: 'Approved',\n          type_Conge_Id: this.leaveForm.value.type,\n          matricule: this.leaveForm.value.matricule // Use the matricule from the form\n\n        };\n\n        if (this.userRole === 'Admin') {\n          // Admin can add leave request for any user\n          this.submitLeaveRequest(leaveRequest);\n        } else if (this.userRole === 'Chef') {\n          if (this.userGroupId !== undefined) {\n            this.dataService.getUserByMatricule(this.leaveForm.value.matricule).subscribe(data => {\n              if (data.groupe_Id === this.userGroupId) {\n                this.submitLeaveRequest(leaveRequest);\n              } else {\n                console.error('Error: The selected user is not in the same group.'); // Display error message to the user\n              }\n            }, error => {\n              console.error('Error fetching user data by matricule:', error);\n            });\n          } else {\n            console.error('Error: Group ID is undefined.'); // Display error message to the user\n          }\n        }\n      } else {\n        console.error('Token is not available.');\n      }\n    } else {\n      console.error('Form is invalid.');\n    }\n  }\n\n  submitLeaveRequest(leaveRequest) {\n    console.log('Submitting leave request:', leaveRequest);\n    this.http.post(this.congesUrl, leaveRequest).subscribe(response => {\n      console.log('Leave request submitted successfully:', response); // Optionally: Show success message to the user\n    }, error => {\n      console.error('Error submitting leave request:', error); // Optionally: Display error message to the user\n    });\n  }\n\n};\nAddEmpSomeoneComponent = __decorate([Component({\n  selector: 'app-add-emp-someone',\n  templateUrl: './add-emp-someone.component.html',\n  styleUrls: ['./add-emp-someone.component.scss']\n})], AddEmpSomeoneComponent);\nexport { AddEmpSomeoneComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/add-emp-someone/add-emp-someone.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Component","Validators","of","catchError","switchMap","AddEmpSomeoneComponent","constructor","fb","http","authService","dataService","typeCongeUrl","congesUrl","userRole","leaveTypes","console","log","leaveForm","group","dateDebut","required","dateFin","type","matricule","ngOnInit","token","getToken","parsedToken","parseToken","userId","nameid","getUserById","subscribe","data","role","userGroupId","groupe_Id","getLeaveTypesForRoles","error","payload","atob","split","JSON","parse","getLeaveTypesByRole","pipe","utilisateurTypes","chefTypes","concat","additionalTypes","url","get","onSubmit","valid","leaveRequest","date_Debut","value","date_Fin","statut","type_Conge_Id","submitLeaveRequest","undefined","getUserByMatricule","post","response","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nlet AddEmpSomeoneComponent = class AddEmpSomeoneComponent {\r\n    constructor(fb, http, authService, dataService) {\r\n        this.fb = fb;\r\n        this.http = http;\r\n        this.authService = authService;\r\n        this.dataService = dataService;\r\n        this.typeCongeUrl = 'https://localhost:7216/api/TypeConges/byRole';\r\n        this.congesUrl = 'https://localhost:7216/api/conges';\r\n        this.userRole = '';\r\n        this.leaveTypes = [];\r\n        console.log('AddEmpSomeoneComponent instantiated');\r\n        this.leaveForm = this.fb.group({\r\n            dateDebut: ['', Validators.required],\r\n            dateFin: ['', Validators.required],\r\n            type: ['', Validators.required],\r\n            matricule: ['', Validators.required]\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        console.log('ngOnInit called');\r\n        const token = this.authService.getToken();\r\n        console.log('Token:', token);\r\n        if (token) {\r\n            const parsedToken = this.parseToken(token);\r\n            console.log('Parsed Token:', parsedToken);\r\n            const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\r\n            console.log('User ID:', userId);\r\n            if (userId) {\r\n                this.authService.getUserById(userId).subscribe((data) => {\r\n                    console.log('User data:', data);\r\n                    this.userRole = data.role;\r\n                    this.userGroupId = data.groupe_Id; // Assuming the API response contains groupe_Id\r\n                    console.log('User Role:', this.userRole);\r\n                    console.log('User Group ID:', this.userGroupId);\r\n                    this.getLeaveTypesForRoles(this.userRole);\r\n                }, (error) => {\r\n                    console.error('Error fetching user data:', error);\r\n                });\r\n            }\r\n            else {\r\n                console.error('userId is undefined.');\r\n            }\r\n        }\r\n        else {\r\n            console.error('Token is not available.');\r\n        }\r\n    }\r\n    parseToken(token) {\r\n        try {\r\n            const payload = atob(token.split('.')[1]);\r\n            return JSON.parse(payload);\r\n        }\r\n        catch (error) {\r\n            console.error('Error parsing token:', error);\r\n            return null;\r\n        }\r\n    }\r\n    getLeaveTypesForRoles(role) {\r\n        this.getLeaveTypesByRole('utilisateur').pipe(switchMap((utilisateurTypes) => {\r\n            this.leaveTypes = utilisateurTypes;\r\n            if (role === 'Chef') {\r\n                return this.getLeaveTypesByRole('Chef');\r\n            }\r\n            else if (role === 'Admin') {\r\n                return this.getLeaveTypesByRole('chef').pipe(switchMap((chefTypes) => {\r\n                    this.leaveTypes = this.leaveTypes.concat(chefTypes);\r\n                    return this.getLeaveTypesByRole('Admin');\r\n                }));\r\n            }\r\n            else {\r\n                return of([]); // No additional types to fetch\r\n            }\r\n        }), catchError((error) => {\r\n            console.error('Error fetching leave types:', error);\r\n            return of([]); // Return an empty array on error\r\n        })).subscribe((additionalTypes) => {\r\n            if (role === 'Chef' || role === 'Admin') {\r\n                this.leaveTypes = this.leaveTypes.concat(additionalTypes);\r\n            }\r\n            console.log('Combined leave types:', this.leaveTypes);\r\n        });\r\n    }\r\n    getLeaveTypesByRole(role) {\r\n        const url = `${this.typeCongeUrl}/${role}`;\r\n        console.log(`Fetching leave types for role: ${role} from URL: ${url}`);\r\n        return this.http.get(url).pipe(catchError((error) => {\r\n            console.error(`Error fetching leave types for role ${role}:`, error);\r\n            return of([]);\r\n        }));\r\n    }\r\n    onSubmit() {\r\n        if (this.leaveForm.valid) {\r\n            const token = this.authService.getToken();\r\n            if (token) {\r\n                const parsedToken = this.parseToken(token);\r\n                const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\r\n                const leaveRequest = {\r\n                    date_Debut: this.leaveForm.value.dateDebut,\r\n                    date_Fin: this.leaveForm.value.dateFin,\r\n                    statut: 'Approved',\r\n                    type_Conge_Id: this.leaveForm.value.type,\r\n                    matricule: this.leaveForm.value.matricule // Use the matricule from the form\r\n                };\r\n                if (this.userRole === 'Admin') {\r\n                    // Admin can add leave request for any user\r\n                    this.submitLeaveRequest(leaveRequest);\r\n                }\r\n                else if (this.userRole === 'Chef') {\r\n                    if (this.userGroupId !== undefined) {\r\n                        this.dataService.getUserByMatricule(this.leaveForm.value.matricule).subscribe((data) => {\r\n                            if (data.groupe_Id === this.userGroupId) {\r\n                                this.submitLeaveRequest(leaveRequest);\r\n                            }\r\n                            else {\r\n                                console.error('Error: The selected user is not in the same group.');\r\n                                // Display error message to the user\r\n                            }\r\n                        }, (error) => {\r\n                            console.error('Error fetching user data by matricule:', error);\r\n                        });\r\n                    }\r\n                    else {\r\n                        console.error('Error: Group ID is undefined.');\r\n                        // Display error message to the user\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                console.error('Token is not available.');\r\n            }\r\n        }\r\n        else {\r\n            console.error('Form is invalid.');\r\n        }\r\n    }\r\n    submitLeaveRequest(leaveRequest) {\r\n        console.log('Submitting leave request:', leaveRequest);\r\n        this.http.post(this.congesUrl, leaveRequest).subscribe((response) => {\r\n            console.log('Leave request submitted successfully:', response);\r\n            // Optionally: Show success message to the user\r\n        }, (error) => {\r\n            console.error('Error submitting leave request:', error);\r\n            // Optionally: Display error message to the user\r\n        });\r\n    }\r\n};\r\nAddEmpSomeoneComponent = __decorate([\r\n    Component({\r\n        selector: 'app-add-emp-someone',\r\n        templateUrl: './add-emp-someone.component.html',\r\n        styleUrls: ['./add-emp-someone.component.scss']\r\n    })\r\n], AddEmpSomeoneComponent);\r\nexport { AddEmpSomeoneComponent };\r\n"]},"metadata":{},"sourceType":"module"}
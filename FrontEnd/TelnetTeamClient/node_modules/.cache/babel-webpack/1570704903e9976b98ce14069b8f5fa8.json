{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { WorkFromHomeRequest, HalfDay } from 'app/models/human-resources/work-from-home';\nimport { Groups } from 'app/models/shared';\nimport { FormControl } from '@angular/forms';\nimport { ReplaySubject, Subject } from 'rxjs/index';\nimport { takeUntil } from 'rxjs/operators';\nlet EditWorkFromHomeRequestComponent = class EditWorkFromHomeRequestComponent {\n  constructor(workFromHomeService, notificationService, mailService, datepipe, dialogRef, data) {\n    this.workFromHomeService = workFromHomeService;\n    this.notificationService = notificationService;\n    this.mailService = mailService;\n    this.datepipe = datepipe;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.initialWorkFromHomeRequest = new WorkFromHomeRequest();\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.resourceFilterCtrl = new FormControl();\n    this.filteredResources = new ReplaySubject(1);\n    this.halefDayItems = Object.values(HalfDay).map(key => HalfDay[key]);\n    this.selectedHalefDayItem = this.halefDayItems[0];\n    this.forbiddenResources = true;\n    this._onDestroy = new Subject();\n    this.isEdit = false;\n  }\n\n  ngOnInit() {\n    this.workFromHomeRequestId = this.data.workFromHomeRequestId;\n\n    if (this.isSuperAdmin()) {\n      this.getResources();\n    } else {\n      this.getReporters();\n    }\n\n    this.resourceFilterCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      this.filterIdentifiers(this.resourcesIdentifiers, this.filteredResources, this.resourceFilterCtrl);\n    });\n    this.forbiddenResources = this.currentUser.groupId !== Groups.SuperAdmin && !this.currentUser.hasSubordinates;\n\n    if (this.data) {\n      this.workFromHomeRequest = new WorkFromHomeRequest();\n      this.isEdit = this.data.isEdit;\n\n      if (this.isEdit) {\n        this.modelTitel = 'Edit Work From Home Request';\n        this.getWorkFromHomeRequestInProgress();\n      } else {\n        this.modelTitel = 'Add Work From Home Request';\n        this.workFromHomeRequest.userId = this.currentUser.userId;\n      }\n    }\n  }\n\n  getWorkFromHomeRequestInProgress() {\n    if (this.workFromHomeRequestId) {\n      this.workFromHomeService.getWorkHomeRequestInProgress(this.workFromHomeRequestId).subscribe(data => {\n        if (data.length !== 0) {\n          this.workFromHomeRequest = Object.assign(new WorkFromHomeRequest(), data[0]);\n          this.workFromHomeRequest.startDate = new Date(this.workFromHomeRequest.startDate);\n          this.workFromHomeRequest.endDate = new Date(this.workFromHomeRequest.endDate);\n          this.initialWorkFromHomeRequest = Object.assign(new WorkFromHomeRequest(), data[0]);\n          this.initialWorkFromHomeRequest.startDate = new Date(this.initialWorkFromHomeRequest.startDate);\n          this.initialWorkFromHomeRequest.endDate = new Date(this.initialWorkFromHomeRequest.endDate);\n\n          if (this.workFromHomeRequest.halfDay !== null) {\n            this.isHalfDayChecked = true;\n          }\n        } else {\n          this.close();\n          this.workFromHomeService.refreshWorkFomHomeRequest.next();\n          this.notificationService.danger('This Work From Home Request does not yet exist or not in progress');\n        }\n      });\n    }\n  }\n\n  OnChangeHalfDay() {\n    if (!this.isHalfDayChecked) {\n      this.workFromHomeRequest.halfDay = null;\n    } else {\n      this.workFromHomeRequest.endDate = this.workFromHomeRequest.startDate;\n    }\n  }\n\n  getResources() {\n    this.workFromHomeService.getResources().subscribe(resources => {\n      if (resources != null) {\n        this.resourcesIdentifiers = resources;\n        this.filteredResources.next(this.resourcesIdentifiers.slice());\n      }\n    });\n  }\n\n  getReporters() {\n    const userId = this.currentUser.userId;\n    this.workFromHomeService.getReporters(userId).subscribe(reporters => {\n      if (reporters != null) {\n        this.resourcesIdentifiers = reporters;\n        this.filteredResources.next(this.resourcesIdentifiers.slice());\n      }\n    });\n  }\n\n  isSuperAdmin() {\n    return this.currentUser.groupId === Groups.SuperAdmin;\n  }\n\n  filterIdentifiers(Identifiers, filtredIdentifier, IdentifierFormCtrl) {\n    if (!Identifiers) {\n      return;\n    }\n\n    let search = IdentifierFormCtrl.value;\n\n    if (!search) {\n      filtredIdentifier.next(Identifiers.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n\n    filtredIdentifier.next(Identifiers.filter(identifier => identifier.description.toLowerCase().indexOf(search) > -1));\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  cancel() {\n    this.close();\n  }\n\n  dateOnly(event) {\n    return this.dateTimeService.dateOnly(event);\n  }\n\n  onChangingDate() {\n    if (this.isHalfDayChecked) {\n      this.workFromHomeRequest.endDate = this.workFromHomeRequest.startDate;\n    } else {\n      if (!this.workFromHomeRequest.endDate || this.workFromHomeRequest.startDate > this.workFromHomeRequest.endDate) {\n        this.workFromHomeRequest.endDate = this.workFromHomeRequest.startDate;\n      }\n    }\n  }\n\n  formControl() {\n    this.errorMessage = '';\n    let isValid = true;\n\n    if (this.workFromHomeRequest.startDate > this.workFromHomeRequest.endDate) {\n      this.errorMessage = 'End Date must be greater than Start Date.';\n      isValid = false;\n    }\n\n    if (this.isHalfDayChecked && (this.workFromHomeRequest.halfDay === '' || this.workFromHomeRequest.halfDay === null)) {\n      this.errorMessage = 'Day Time is required';\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  save() {\n    if (this.workFromHomeRequestForm.valid) {\n      if (this.formControl()) {\n        this.prepareWorkFromHomeRequest(this.workFromHomeRequest);\n        this.workFromHomeService.IsDateExistOrInProgressWorkHome(this.workFromHomeRequest.workHomeRequestId, this.workFromHomeRequest.userId, this.workFromHomeRequest.startDate, this.workFromHomeRequest.endDate).subscribe(data => {\n          switch (data) {\n            case 0:\n              {\n                this.workFromHomeService.insertOrUpdateWorkFromHomeRequest(this.workFromHomeRequest).subscribe(() => {\n                  this.notifications();\n                  this.close();\n                  this.workFromHomeService.refreshWorkFomHomeRequest.next();\n                });\n                break;\n              }\n\n            case 1:\n              {\n                this.close();\n                this.workFromHomeService.refreshWorkFomHomeRequest.next();\n                this.notificationService.danger('This Work From Home Request does not yet exist or not in progress');\n                break;\n              }\n\n            case 2:\n              {\n                this.notificationService.danger('This person has a work from home request at this date.');\n                break;\n              }\n          }\n        });\n      } else {\n        this.notificationService.danger(this.errorMessage);\n      }\n    } else {\n      this.notificationService.danger('Please fill all required fields');\n    }\n  }\n\n  notifications() {\n    if (this.isEdit) {\n      const workFromHomeRequestModification = this.checkModification(this.initialWorkFromHomeRequest, this.workFromHomeRequest);\n\n      if (workFromHomeRequestModification) {\n        this.notificationService.success('This Work From Home Request is modified successfully');\n        this.mailService.workFromHomeRequestModified(this.workFromHomeRequest, this.initialWorkFromHomeRequest);\n      }\n    } else {\n      this.notificationService.success('This Work From Home Request is added successfully');\n      this.mailService.workFromHomeRequestAdded(this.workFromHomeRequest);\n    }\n  }\n\n  prepareWorkFromHomeRequest(workFromHomeRequest) {\n    if (workFromHomeRequest.workHomeRequestId === 0) {\n      workFromHomeRequest.state = 1;\n    }\n\n    workFromHomeRequest.motive = '';\n    workFromHomeRequest.userFullName = this.resourcesIdentifiers.find(resource => resource.id === workFromHomeRequest.userId).description;\n    workFromHomeRequest.dayNumber = this.calculateBetweenDates();\n  }\n\n  calculateBetweenDates() {\n    let dayNumber = 0;\n\n    if (this.isHalfDayChecked) {\n      dayNumber = 0.5;\n    } else {\n      const date1 = new Date(this.workFromHomeRequest.startDate);\n      const date2 = new Date(this.workFromHomeRequest.endDate);\n      const Difference_In_Time = date2.getTime() - date1.getTime();\n      dayNumber = Difference_In_Time / (1000 * 3600 * 24) + 1;\n    }\n\n    console.log(dayNumber);\n    return dayNumber;\n  }\n\n  checkModification(oldWorkFromHomeRequest, newWorkFromHomeRequest) {\n    let modification = false;\n\n    if (oldWorkFromHomeRequest.startDate !== newWorkFromHomeRequest.startDate || oldWorkFromHomeRequest.endDate !== newWorkFromHomeRequest.endDate || oldWorkFromHomeRequest.halfDay !== newWorkFromHomeRequest.halfDay || oldWorkFromHomeRequest.dayNumber !== newWorkFromHomeRequest.dayNumber) {\n      modification = true;\n    }\n\n    return modification;\n  }\n\n};\n\n__decorate([ViewChild('workFromHomeRequestForm', {\n  static: true\n})], EditWorkFromHomeRequestComponent.prototype, \"workFromHomeRequestForm\", void 0);\n\nEditWorkFromHomeRequestComponent = __decorate([Component({\n  selector: 'app-edit-work-from-home-request',\n  templateUrl: './edit-work-from-home-request.component.html',\n  styleUrls: ['./edit-work-from-home-request.component.scss']\n}), __param(5, Inject(MAT_DIALOG_DATA))], EditWorkFromHomeRequestComponent);\nexport { EditWorkFromHomeRequestComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/components/human-resources/work-from-home/work-from-home-request/edit-work-from-home-request/edit-work-from-home-request.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Component","Inject","ViewChild","MAT_DIALOG_DATA","WorkFromHomeRequest","HalfDay","Groups","FormControl","ReplaySubject","Subject","takeUntil","EditWorkFromHomeRequestComponent","constructor","workFromHomeService","notificationService","mailService","datepipe","dialogRef","data","initialWorkFromHomeRequest","currentUser","JSON","parse","localStorage","getItem","resourceFilterCtrl","filteredResources","halefDayItems","values","map","selectedHalefDayItem","forbiddenResources","_onDestroy","isEdit","ngOnInit","workFromHomeRequestId","isSuperAdmin","getResources","getReporters","valueChanges","pipe","subscribe","filterIdentifiers","resourcesIdentifiers","groupId","SuperAdmin","hasSubordinates","workFromHomeRequest","modelTitel","getWorkFromHomeRequestInProgress","userId","getWorkHomeRequestInProgress","assign","startDate","Date","endDate","halfDay","isHalfDayChecked","close","refreshWorkFomHomeRequest","next","danger","OnChangeHalfDay","resources","slice","reporters","Identifiers","filtredIdentifier","IdentifierFormCtrl","search","value","toLowerCase","filter","identifier","description","indexOf","cancel","dateOnly","event","dateTimeService","onChangingDate","formControl","errorMessage","isValid","save","workFromHomeRequestForm","valid","prepareWorkFromHomeRequest","IsDateExistOrInProgressWorkHome","workHomeRequestId","insertOrUpdateWorkFromHomeRequest","notifications","workFromHomeRequestModification","checkModification","success","workFromHomeRequestModified","workFromHomeRequestAdded","state","motive","userFullName","find","resource","id","dayNumber","calculateBetweenDates","date1","date2","Difference_In_Time","getTime","console","log","oldWorkFromHomeRequest","newWorkFromHomeRequest","modification","static","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { Component, Inject, ViewChild } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { WorkFromHomeRequest, HalfDay } from 'app/models/human-resources/work-from-home';\r\nimport { Groups } from 'app/models/shared';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ReplaySubject, Subject } from 'rxjs/index';\r\nimport { takeUntil } from 'rxjs/operators';\r\nlet EditWorkFromHomeRequestComponent = class EditWorkFromHomeRequestComponent {\r\n    constructor(workFromHomeService, notificationService, mailService, datepipe, dialogRef, data) {\r\n        this.workFromHomeService = workFromHomeService;\r\n        this.notificationService = notificationService;\r\n        this.mailService = mailService;\r\n        this.datepipe = datepipe;\r\n        this.dialogRef = dialogRef;\r\n        this.data = data;\r\n        this.initialWorkFromHomeRequest = new WorkFromHomeRequest();\r\n        this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        this.resourceFilterCtrl = new FormControl();\r\n        this.filteredResources = new ReplaySubject(1);\r\n        this.halefDayItems = Object.values(HalfDay).map(key => HalfDay[key]);\r\n        this.selectedHalefDayItem = this.halefDayItems[0];\r\n        this.forbiddenResources = true;\r\n        this._onDestroy = new Subject();\r\n        this.isEdit = false;\r\n    }\r\n    ngOnInit() {\r\n        this.workFromHomeRequestId = this.data.workFromHomeRequestId;\r\n        if (this.isSuperAdmin()) {\r\n            this.getResources();\r\n        }\r\n        else {\r\n            this.getReporters();\r\n        }\r\n        this.resourceFilterCtrl.valueChanges\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(() => {\r\n            this.filterIdentifiers(this.resourcesIdentifiers, this.filteredResources, this.resourceFilterCtrl);\r\n        });\r\n        this.forbiddenResources = this.currentUser.groupId !== Groups.SuperAdmin && !this.currentUser.hasSubordinates;\r\n        if (this.data) {\r\n            this.workFromHomeRequest = new WorkFromHomeRequest();\r\n            this.isEdit = this.data.isEdit;\r\n            if (this.isEdit) {\r\n                this.modelTitel = 'Edit Work From Home Request';\r\n                this.getWorkFromHomeRequestInProgress();\r\n            }\r\n            else {\r\n                this.modelTitel = 'Add Work From Home Request';\r\n                this.workFromHomeRequest.userId = this.currentUser.userId;\r\n            }\r\n        }\r\n    }\r\n    getWorkFromHomeRequestInProgress() {\r\n        if (this.workFromHomeRequestId) {\r\n            this.workFromHomeService.getWorkHomeRequestInProgress(this.workFromHomeRequestId)\r\n                .subscribe(data => {\r\n                if (data.length !== 0) {\r\n                    this.workFromHomeRequest = Object.assign(new WorkFromHomeRequest, data[0]);\r\n                    this.workFromHomeRequest.startDate = new Date(this.workFromHomeRequest.startDate);\r\n                    this.workFromHomeRequest.endDate = new Date(this.workFromHomeRequest.endDate);\r\n                    this.initialWorkFromHomeRequest = Object.assign(new WorkFromHomeRequest, data[0]);\r\n                    this.initialWorkFromHomeRequest.startDate = new Date(this.initialWorkFromHomeRequest.startDate);\r\n                    this.initialWorkFromHomeRequest.endDate = new Date(this.initialWorkFromHomeRequest.endDate);\r\n                    if (this.workFromHomeRequest.halfDay !== null) {\r\n                        this.isHalfDayChecked = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this.close();\r\n                    this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                    this.notificationService.danger('This Work From Home Request does not yet exist or not in progress');\r\n                }\r\n            });\r\n        }\r\n    }\r\n    OnChangeHalfDay() {\r\n        if (!this.isHalfDayChecked) {\r\n            this.workFromHomeRequest.halfDay = null;\r\n        }\r\n        else {\r\n            this.workFromHomeRequest.endDate = this.workFromHomeRequest.startDate;\r\n        }\r\n    }\r\n    getResources() {\r\n        this.workFromHomeService.getResources()\r\n            .subscribe(resources => {\r\n            if (resources != null) {\r\n                this.resourcesIdentifiers = resources;\r\n                this.filteredResources.next(this.resourcesIdentifiers.slice());\r\n            }\r\n        });\r\n    }\r\n    getReporters() {\r\n        const userId = this.currentUser.userId;\r\n        this.workFromHomeService.getReporters(userId)\r\n            .subscribe(reporters => {\r\n            if (reporters != null) {\r\n                this.resourcesIdentifiers = reporters;\r\n                this.filteredResources.next(this.resourcesIdentifiers.slice());\r\n            }\r\n        });\r\n    }\r\n    isSuperAdmin() {\r\n        return this.currentUser.groupId === Groups.SuperAdmin;\r\n    }\r\n    filterIdentifiers(Identifiers, filtredIdentifier, IdentifierFormCtrl) {\r\n        if (!Identifiers) {\r\n            return;\r\n        }\r\n        let search = IdentifierFormCtrl.value;\r\n        if (!search) {\r\n            filtredIdentifier.next(Identifiers.slice());\r\n            return;\r\n        }\r\n        else {\r\n            search = search.toLowerCase();\r\n        }\r\n        filtredIdentifier.next(Identifiers.filter(identifier => identifier.description.toLowerCase().indexOf(search) > -1));\r\n    }\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    cancel() {\r\n        this.close();\r\n    }\r\n    dateOnly(event) {\r\n        return this.dateTimeService.dateOnly(event);\r\n    }\r\n    onChangingDate() {\r\n        if (this.isHalfDayChecked) {\r\n            this.workFromHomeRequest.endDate = this.workFromHomeRequest.startDate;\r\n        }\r\n        else {\r\n            if (!this.workFromHomeRequest.endDate || this.workFromHomeRequest.startDate > this.workFromHomeRequest.endDate) {\r\n                this.workFromHomeRequest.endDate = this.workFromHomeRequest.startDate;\r\n            }\r\n        }\r\n    }\r\n    formControl() {\r\n        this.errorMessage = '';\r\n        let isValid = true;\r\n        if (this.workFromHomeRequest.startDate > this.workFromHomeRequest.endDate) {\r\n            this.errorMessage = 'End Date must be greater than Start Date.';\r\n            isValid = false;\r\n        }\r\n        if (this.isHalfDayChecked && (this.workFromHomeRequest.halfDay === '' || this.workFromHomeRequest.halfDay === null)) {\r\n            this.errorMessage = 'Day Time is required';\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n    save() {\r\n        if (this.workFromHomeRequestForm.valid) {\r\n            if (this.formControl()) {\r\n                this.prepareWorkFromHomeRequest(this.workFromHomeRequest);\r\n                this.workFromHomeService.IsDateExistOrInProgressWorkHome(this.workFromHomeRequest.workHomeRequestId, this.workFromHomeRequest.userId, this.workFromHomeRequest.startDate, this.workFromHomeRequest.endDate).subscribe(data => {\r\n                    switch (data) {\r\n                        case 0: {\r\n                            this.workFromHomeService.insertOrUpdateWorkFromHomeRequest(this.workFromHomeRequest).subscribe(() => {\r\n                                this.notifications();\r\n                                this.close();\r\n                                this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 1: {\r\n                            this.close();\r\n                            this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                            this.notificationService.danger('This Work From Home Request does not yet exist or not in progress');\r\n                            break;\r\n                        }\r\n                        case 2: {\r\n                            this.notificationService.danger('This person has a work from home request at this date.');\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.notificationService.danger(this.errorMessage);\r\n            }\r\n        }\r\n        else {\r\n            this.notificationService.danger('Please fill all required fields');\r\n        }\r\n    }\r\n    notifications() {\r\n        if (this.isEdit) {\r\n            const workFromHomeRequestModification = this.checkModification(this.initialWorkFromHomeRequest, this.workFromHomeRequest);\r\n            if (workFromHomeRequestModification) {\r\n                this.notificationService.success('This Work From Home Request is modified successfully');\r\n                this.mailService.workFromHomeRequestModified(this.workFromHomeRequest, this.initialWorkFromHomeRequest);\r\n            }\r\n        }\r\n        else {\r\n            this.notificationService.success('This Work From Home Request is added successfully');\r\n            this.mailService.workFromHomeRequestAdded(this.workFromHomeRequest);\r\n        }\r\n    }\r\n    prepareWorkFromHomeRequest(workFromHomeRequest) {\r\n        if (workFromHomeRequest.workHomeRequestId === 0) {\r\n            workFromHomeRequest.state = 1;\r\n        }\r\n        workFromHomeRequest.motive = '';\r\n        workFromHomeRequest.userFullName = this.resourcesIdentifiers.find(resource => resource.id === workFromHomeRequest.userId).description;\r\n        workFromHomeRequest.dayNumber = this.calculateBetweenDates();\r\n    }\r\n    calculateBetweenDates() {\r\n        let dayNumber = 0;\r\n        if (this.isHalfDayChecked) {\r\n            dayNumber = 0.5;\r\n        }\r\n        else {\r\n            const date1 = new Date(this.workFromHomeRequest.startDate);\r\n            const date2 = new Date(this.workFromHomeRequest.endDate);\r\n            const Difference_In_Time = date2.getTime() - date1.getTime();\r\n            dayNumber = Difference_In_Time / (1000 * 3600 * 24) + 1;\r\n        }\r\n        console.log(dayNumber);\r\n        return dayNumber;\r\n    }\r\n    checkModification(oldWorkFromHomeRequest, newWorkFromHomeRequest) {\r\n        let modification = false;\r\n        if ((oldWorkFromHomeRequest.startDate !== newWorkFromHomeRequest.startDate)\r\n            || (oldWorkFromHomeRequest.endDate !== newWorkFromHomeRequest.endDate)\r\n            || (oldWorkFromHomeRequest.halfDay !== newWorkFromHomeRequest.halfDay)\r\n            || (oldWorkFromHomeRequest.dayNumber !== newWorkFromHomeRequest.dayNumber)) {\r\n            modification = true;\r\n        }\r\n        return modification;\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('workFromHomeRequestForm', { static: true })\r\n], EditWorkFromHomeRequestComponent.prototype, \"workFromHomeRequestForm\", void 0);\r\nEditWorkFromHomeRequestComponent = __decorate([\r\n    Component({\r\n        selector: 'app-edit-work-from-home-request',\r\n        templateUrl: './edit-work-from-home-request.component.html',\r\n        styleUrls: ['./edit-work-from-home-request.component.scss']\r\n    }),\r\n    __param(5, Inject(MAT_DIALOG_DATA))\r\n], EditWorkFromHomeRequestComponent);\r\nexport { EditWorkFromHomeRequestComponent };\r\n"]},"metadata":{},"sourceType":"module"}
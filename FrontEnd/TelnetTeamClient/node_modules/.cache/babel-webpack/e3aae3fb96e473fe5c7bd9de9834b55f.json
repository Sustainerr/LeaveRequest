{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, ViewChild } from '@angular/core';\nimport { CaptchaComponent } from 'angular-captcha';\nimport { environment } from 'environments/environment';\nlet SendResetPasswordComponent = class SendResetPasswordComponent {\n  constructor(router, authenticationService, notificationService) {\n    this.router = router;\n    this.authenticationService = authenticationService;\n    this.notificationService = notificationService;\n    this.recaptchaSended = false;\n    this.emailSended = false;\n    this.failedCaptcha = false;\n    this.failedEmail = false;\n  }\n\n  ngOnInit() {\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\n    this.captchaComponent.captchaEndpoint = environment.apiUrl + environment.captchaEndpointUrl;\n  }\n\n  validateCaptcha() {\n    const email = this.email.nativeElement.value;\n\n    if (email !== '') {\n      const userEnteredCaptchaCode = this.captchaComponent.userEnteredCaptchaCode;\n      const captchaId = this.captchaComponent.captchaId;\n      const postData = {\n        userEnteredCaptchaCode: userEnteredCaptchaCode,\n        captchaId: captchaId\n      };\n      this.authenticationService.validateCaptcha(postData).subscribe(response => {\n        if (response === 'false') {\n          this.failedCaptcha = true;\n          this.failedEmail = false;\n          this.captchaComponent.reloadImage();\n        } else {\n          this.sendResetPassword();\n          this.failedCaptcha = false;\n        }\n      }, error => {\n        this.failedCaptcha = true;\n      });\n    } else {\n      this.failedEmail = true;\n      this.failedCaptcha = false;\n    }\n  }\n\n  sendResetPassword() {\n    const email = this.email.nativeElement.value;\n    this.authenticationService.sendResetPassword(email).subscribe(data => {\n      if (data !== null || data !== undefined) {\n        if (data === 'succeded') {\n          this.emailSended = true;\n          this.notificationService.success('Your request is sent successfully. You will recieve an email in short time.');\n        } else {\n          this.notificationService.danger('Your request failed. Please check your email address or contact your administrator.');\n        }\n      }\n    });\n  }\n\n};\n\n__decorate([ViewChild('email')], SendResetPasswordComponent.prototype, \"email\", void 0);\n\n__decorate([ViewChild(CaptchaComponent, {\n  static: true\n})], SendResetPasswordComponent.prototype, \"captchaComponent\", void 0);\n\nSendResetPasswordComponent = __decorate([Component({\n  selector: 'app-send-reset-password',\n  templateUrl: './send-reset-password.component.html',\n  styleUrls: []\n})], SendResetPasswordComponent);\nexport { SendResetPasswordComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/components/auth/send-reset-password/send-reset-password.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Component","ViewChild","CaptchaComponent","environment","SendResetPasswordComponent","constructor","router","authenticationService","notificationService","recaptchaSended","emailSended","failedCaptcha","failedEmail","ngOnInit","document","querySelector","setAttribute","captchaComponent","captchaEndpoint","apiUrl","captchaEndpointUrl","validateCaptcha","email","nativeElement","value","userEnteredCaptchaCode","captchaId","postData","subscribe","response","reloadImage","sendResetPassword","error","data","undefined","success","danger","prototype","static","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { CaptchaComponent } from 'angular-captcha';\r\nimport { environment } from 'environments/environment';\r\nlet SendResetPasswordComponent = class SendResetPasswordComponent {\r\n    constructor(router, authenticationService, notificationService) {\r\n        this.router = router;\r\n        this.authenticationService = authenticationService;\r\n        this.notificationService = notificationService;\r\n        this.recaptchaSended = false;\r\n        this.emailSended = false;\r\n        this.failedCaptcha = false;\r\n        this.failedEmail = false;\r\n    }\r\n    ngOnInit() {\r\n        document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n        this.captchaComponent.captchaEndpoint = environment.apiUrl + environment.captchaEndpointUrl;\r\n    }\r\n    validateCaptcha() {\r\n        const email = this.email.nativeElement.value;\r\n        if (email !== '') {\r\n            const userEnteredCaptchaCode = this.captchaComponent.userEnteredCaptchaCode;\r\n            const captchaId = this.captchaComponent.captchaId;\r\n            const postData = {\r\n                userEnteredCaptchaCode: userEnteredCaptchaCode,\r\n                captchaId: captchaId\r\n            };\r\n            this.authenticationService.validateCaptcha(postData)\r\n                .subscribe(response => {\r\n                if (response === 'false') {\r\n                    this.failedCaptcha = true;\r\n                    this.failedEmail = false;\r\n                    this.captchaComponent.reloadImage();\r\n                }\r\n                else {\r\n                    this.sendResetPassword();\r\n                    this.failedCaptcha = false;\r\n                }\r\n            }, error => {\r\n                this.failedCaptcha = true;\r\n            });\r\n        }\r\n        else {\r\n            this.failedEmail = true;\r\n            this.failedCaptcha = false;\r\n        }\r\n    }\r\n    sendResetPassword() {\r\n        const email = this.email.nativeElement.value;\r\n        this.authenticationService.sendResetPassword(email).subscribe((data) => {\r\n            if (data !== null || data !== undefined) {\r\n                if (data === 'succeded') {\r\n                    this.emailSended = true;\r\n                    this.notificationService.success('Your request is sent successfully. You will recieve an email in short time.');\r\n                }\r\n                else {\r\n                    this.notificationService.danger('Your request failed. Please check your email address or contact your administrator.');\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('email')\r\n], SendResetPasswordComponent.prototype, \"email\", void 0);\r\n__decorate([\r\n    ViewChild(CaptchaComponent, { static: true })\r\n], SendResetPasswordComponent.prototype, \"captchaComponent\", void 0);\r\nSendResetPasswordComponent = __decorate([\r\n    Component({\r\n        selector: 'app-send-reset-password',\r\n        templateUrl: './send-reset-password.component.html',\r\n        styleUrls: []\r\n    })\r\n], SendResetPasswordComponent);\r\nexport { SendResetPasswordComponent };\r\n"]},"metadata":{},"sourceType":"module"}
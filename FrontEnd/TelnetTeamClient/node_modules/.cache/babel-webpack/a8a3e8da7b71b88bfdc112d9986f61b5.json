{"ast":null,"code":"import { throwError as observableThrowError } from 'rxjs/index';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(error => {\n        const errMsg = error.body ? error.message : error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        return observableThrowError(errMsg);\n      }));\n    }\n\n  }\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)();\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/interceptors/error.interceptor.ts"],"names":["throwError","observableThrowError","catchError","i0","ErrorInterceptor","intercept","request","next","handle","pipe","error","errMsg","body","message","status","statusText","ɵfac","ErrorInterceptor_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"AAAA,SAASA,UAAU,IAAIC,oBAAvB,QAAmD,YAAnD;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,WAAaC,gBAAb;AAAO,QAAMA,gBAAN,CAAuB;AAC1BC,IAAAA,SAAS,CAACC,OAAD,EAAUC,IAAV,EAAgB;AACrB,aAAOA,IAAI,CAACC,MAAL,CAAYF,OAAZ,EACFG,IADE,CACGP,UAAU,CAACQ,KAAK,IAAI;AAC1B,cAAMC,MAAM,GAAID,KAAK,CAACE,IAAP,GAAeF,KAAK,CAACG,OAArB,GACXH,KAAK,CAACI,MAAN,GAAgB,GAAEJ,KAAK,CAACI,MAAO,MAAKJ,KAAK,CAACK,UAAW,EAArD,GAAyD,cAD7D;AAEA,eAAOd,oBAAoB,CAACU,MAAD,CAA3B;AACH,OAJmB,CADb,CAAP;AAMH;;AARyB;;AAU9BP,EAAAA,gBAAgB,CAACY,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,WAAO,KAAKA,CAAC,IAAId,gBAAV,GAAP;AAAuC,GAAtG;;AACAA,EAAAA,gBAAgB,CAACe,KAAjB,GAAyB,aAAchB,EAAE,CAACiB,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAEjB,gBAAT;AAA2BkB,IAAAA,OAAO,EAAElB,gBAAgB,CAACY;AAArD,GAAtB,CAAvC;AAXA,SAAaZ,gBAAb;AAAA","sourcesContent":["import { throwError as observableThrowError } from 'rxjs/index';\r\nimport { catchError } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nexport class ErrorInterceptor {\r\n    intercept(request, next) {\r\n        return next.handle(request)\r\n            .pipe(catchError(error => {\r\n            const errMsg = (error.body) ? error.message :\r\n                error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n            return observableThrowError(errMsg);\r\n        }));\r\n    }\r\n}\r\nErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) { return new (t || ErrorInterceptor)(); };\r\nErrorInterceptor.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ErrorInterceptor, factory: ErrorInterceptor.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}
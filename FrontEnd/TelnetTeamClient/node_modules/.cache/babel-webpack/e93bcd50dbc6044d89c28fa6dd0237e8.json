{"ast":null,"code":"import { Functions } from 'app/models/shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/services/shared\";\nconst MENUITEMS = [{\n  label: 'TelnetTeam',\n  main: [{\n    state: 'human-resources',\n    name: 'Human Resources',\n    type: 'sub',\n    icon: 'icon-user',\n    children: [{\n      state: 'work-from-home',\n      name: 'Work From Home',\n      type: 'sub',\n      icon: 'icon-user',\n      function: Functions.WorkFromHome,\n      children: [{\n        state: 'work-from-home',\n        name: 'Requests',\n        target: true,\n        function: Functions.WorkFromHome\n      }]\n    }]\n  }, {\n    state: 'project-management',\n    name: 'Project Management',\n    type: 'sub',\n    icon: 'icon-briefcase',\n    children: [{\n      state: 'project',\n      name: 'Project',\n      type: 'sub',\n      icon: 'icon-briefcase',\n      function: Functions.Project,\n      children: [{\n        state: 'references',\n        name: 'References',\n        target: true,\n        function: Functions.References\n      }]\n    }]\n  }]\n}];\nexport let MenuItems = /*#__PURE__*/(() => {\n  class MenuItems {\n    constructor(authenticationService) {\n      this.authenticationService = authenticationService;\n    }\n\n    getAll() {\n      return MENUITEMS;\n    }\n\n    isVisible(functionId) {\n      let result = false;\n      const profile = this.authenticationService.getProfile();\n\n      if (!(profile === null || profile === undefined) && !(profile.currentUser === null || profile.currentUser === undefined) && !(profile.currentUser.functionsId === null || profile.currentUser.functionsId === undefined)) {\n        result = profile.currentUser.functionsId.indexOf(functionId) !== -1;\n      }\n\n      return result;\n    }\n\n  }\n\n  MenuItems.ɵfac = function MenuItems_Factory(t) {\n    return new (t || MenuItems)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n\n  MenuItems.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MenuItems,\n    factory: MenuItems.ɵfac\n  });\n  return MenuItems;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/shared/menu-items/menu-items.ts"],"names":["Functions","i0","i1","MENUITEMS","label","main","state","name","type","icon","children","function","WorkFromHome","target","Project","References","MenuItems","constructor","authenticationService","getAll","isVisible","functionId","result","profile","getProfile","undefined","currentUser","functionsId","indexOf","ɵfac","MenuItems_Factory","t","ɵɵinject","AuthenticationService","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"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","sourcesContent":["import { Functions } from 'app/models/shared';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"app/services/shared\";\r\nconst MENUITEMS = [\r\n    {\r\n        label: 'TelnetTeam',\r\n        main: [\r\n            {\r\n                state: 'human-resources',\r\n                name: 'Human Resources',\r\n                type: 'sub',\r\n                icon: 'icon-user',\r\n                children: [\r\n                    {\r\n                        state: 'work-from-home',\r\n                        name: 'Work From Home',\r\n                        type: 'sub',\r\n                        icon: 'icon-user',\r\n                        function: Functions.WorkFromHome,\r\n                        children: [\r\n                            {\r\n                                state: 'work-from-home',\r\n                                name: 'Requests',\r\n                                target: true,\r\n                                function: Functions.WorkFromHome\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                state: 'project-management',\r\n                name: 'Project Management',\r\n                type: 'sub',\r\n                icon: 'icon-briefcase',\r\n                children: [\r\n                    {\r\n                        state: 'project',\r\n                        name: 'Project',\r\n                        type: 'sub',\r\n                        icon: 'icon-briefcase',\r\n                        function: Functions.Project,\r\n                        children: [\r\n                            {\r\n                                state: 'references',\r\n                                name: 'References',\r\n                                target: true,\r\n                                function: Functions.References\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\nexport class MenuItems {\r\n    constructor(authenticationService) {\r\n        this.authenticationService = authenticationService;\r\n    }\r\n    getAll() {\r\n        return MENUITEMS;\r\n    }\r\n    isVisible(functionId) {\r\n        let result = false;\r\n        const profile = this.authenticationService.getProfile();\r\n        if (!(profile === null || profile === undefined) && !(profile.currentUser === null || profile.currentUser === undefined)\r\n            && !(profile.currentUser.functionsId === null || profile.currentUser.functionsId === undefined)) {\r\n            result = (profile.currentUser.functionsId.indexOf(functionId) !== -1);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nMenuItems.ɵfac = function MenuItems_Factory(t) { return new (t || MenuItems)(i0.ɵɵinject(i1.AuthenticationService)); };\r\nMenuItems.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: MenuItems, factory: MenuItems.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar http_1 = require(\"@angular/common/http\");\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ɵngcc1 = require('@angular/common/http');\n\nvar CaptchaHelperService =\n/** @class */\nfunction () {\n  function CaptchaHelperService(http, ngZone) {\n    this.http = http;\n    this.ngZone = ngZone;\n  } // get script and execute it immediately\n\n\n  CaptchaHelperService.prototype.getScript = function (url) {\n    var _this = this;\n\n    this.http.get(url, {\n      responseType: 'text'\n    }).subscribe(function (scriptString) {\n      var f = new Function(scriptString);\n\n      _this.ngZone.runOutsideAngular(function () {\n        f();\n      });\n    });\n  };\n\n  CaptchaHelperService.prototype.useUserInputBlurValidation = function (userInput) {\n    return userInput.getAttribute('correctCaptcha') !== null;\n  }; // get captcha endpoint handler from configued captchaEndpoint value,\n  // the result can be \"simple-captcha-endpoint.ashx\", \"simple-captcha-endpoint\",\n  // or \"simple-botdetect.php\"\n\n\n  CaptchaHelperService.prototype.getCaptchaEndpointHandler = function (captchaEndpoint) {\n    var splited = captchaEndpoint.split('/');\n    return splited[splited.length - 1];\n  }; // get backend base url from configued captchaEndpoint value\n\n\n  CaptchaHelperService.prototype.getBackendBaseUrl = function (captchaEndpoint, captchaEndpointHandler) {\n    var lastIndex = captchaEndpoint.lastIndexOf(captchaEndpointHandler);\n    return captchaEndpoint.substring(0, lastIndex);\n  }; // change relative to absolute urls in captcha html markup\n\n\n  CaptchaHelperService.prototype.changeRelativeToAbsoluteUrls = function (originCaptchaHtml, captchaEndpoint) {\n    var captchaEndpointHandler = this.getCaptchaEndpointHandler(captchaEndpoint);\n    var backendUrl = this.getBackendBaseUrl(captchaEndpoint, captchaEndpointHandler);\n    originCaptchaHtml = originCaptchaHtml.replace(/<script.*<\\/script>/g, '');\n    var relativeUrls = originCaptchaHtml.match(/(src|href)=\\\"([^\"]+)\\\"/g);\n    var relativeUrl,\n        relativeUrlPrefixPattern,\n        absoluteUrl,\n        changedCaptchaHtml = originCaptchaHtml;\n\n    for (var i = 0; i < relativeUrls.length; i++) {\n      relativeUrl = relativeUrls[i].slice(0, -1).replace(/src=\\\"|href=\\\"/, '');\n      relativeUrlPrefixPattern = new RegExp(\".*\" + captchaEndpointHandler);\n      absoluteUrl = relativeUrl.replace(relativeUrlPrefixPattern, backendUrl + captchaEndpointHandler);\n      changedCaptchaHtml = changedCaptchaHtml.replace(relativeUrl, absoluteUrl);\n    }\n\n    return changedCaptchaHtml;\n  };\n  /** @nocollapse */\n\n\n  CaptchaHelperService.ctorParameters = function () {\n    return [{\n      type: http_1.HttpClient\n    }, {\n      type: core_1.NgZone\n    }];\n  };\n\n  CaptchaHelperService.ɵfac = function CaptchaHelperService_Factory(t) {\n    return new (t || CaptchaHelperService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  CaptchaHelperService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: CaptchaHelperService,\n    factory: function (t) {\n      return CaptchaHelperService.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return CaptchaHelperService;\n}();\n\nexports.CaptchaHelperService = CaptchaHelperService;","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/node_modules/angular-captcha/__ivy_ngcc__/src/captcha-helper.service.js"],"names":["Object","defineProperty","exports","value","core_1","require","http_1","ɵngcc0","ɵngcc1","CaptchaHelperService","http","ngZone","prototype","getScript","url","_this","get","responseType","subscribe","scriptString","f","Function","runOutsideAngular","useUserInputBlurValidation","userInput","getAttribute","getCaptchaEndpointHandler","captchaEndpoint","splited","split","length","getBackendBaseUrl","captchaEndpointHandler","lastIndex","lastIndexOf","substring","changeRelativeToAbsoluteUrls","originCaptchaHtml","backendUrl","replace","relativeUrls","match","relativeUrl","relativeUrlPrefixPattern","absoluteUrl","changedCaptchaHtml","i","slice","RegExp","ctorParameters","type","HttpClient","NgZone","ɵfac","CaptchaHelperService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar ɵngcc0 = require('@angular/core');\nvar ɵngcc1 = require('@angular/common/http');\nvar CaptchaHelperService = /** @class */ (function () {\r\n    function CaptchaHelperService(http, ngZone) {\r\n        this.http = http;\r\n        this.ngZone = ngZone;\r\n    }\r\n    // get script and execute it immediately\r\n    CaptchaHelperService.prototype.getScript = function (url) {\r\n        var _this = this;\r\n        this.http.get(url, { responseType: 'text' })\r\n            .subscribe(function (scriptString) {\r\n            var f = new Function(scriptString);\r\n            _this.ngZone.runOutsideAngular(function () {\r\n                f();\r\n            });\r\n        });\r\n    };\r\n    CaptchaHelperService.prototype.useUserInputBlurValidation = function (userInput) {\r\n        return (userInput.getAttribute('correctCaptcha') !== null);\r\n    };\r\n    // get captcha endpoint handler from configued captchaEndpoint value,\r\n    // the result can be \"simple-captcha-endpoint.ashx\", \"simple-captcha-endpoint\",\r\n    // or \"simple-botdetect.php\"\r\n    CaptchaHelperService.prototype.getCaptchaEndpointHandler = function (captchaEndpoint) {\r\n        var splited = captchaEndpoint.split('/');\r\n        return splited[splited.length - 1];\r\n    };\r\n    // get backend base url from configued captchaEndpoint value\r\n    CaptchaHelperService.prototype.getBackendBaseUrl = function (captchaEndpoint, captchaEndpointHandler) {\r\n        var lastIndex = captchaEndpoint.lastIndexOf(captchaEndpointHandler);\r\n        return captchaEndpoint.substring(0, lastIndex);\r\n    };\r\n    // change relative to absolute urls in captcha html markup\r\n    CaptchaHelperService.prototype.changeRelativeToAbsoluteUrls = function (originCaptchaHtml, captchaEndpoint) {\r\n        var captchaEndpointHandler = this.getCaptchaEndpointHandler(captchaEndpoint);\r\n        var backendUrl = this.getBackendBaseUrl(captchaEndpoint, captchaEndpointHandler);\r\n        originCaptchaHtml = originCaptchaHtml.replace(/<script.*<\\/script>/g, '');\r\n        var relativeUrls = originCaptchaHtml.match(/(src|href)=\\\"([^\"]+)\\\"/g);\r\n        var relativeUrl, relativeUrlPrefixPattern, absoluteUrl, changedCaptchaHtml = originCaptchaHtml;\r\n        for (var i = 0; i < relativeUrls.length; i++) {\r\n            relativeUrl = relativeUrls[i].slice(0, -1).replace(/src=\\\"|href=\\\"/, '');\r\n            relativeUrlPrefixPattern = new RegExp(\".*\" + captchaEndpointHandler);\r\n            absoluteUrl = relativeUrl.replace(relativeUrlPrefixPattern, backendUrl + captchaEndpointHandler);\r\n            changedCaptchaHtml = changedCaptchaHtml.replace(relativeUrl, absoluteUrl);\r\n        }\r\n        return changedCaptchaHtml;\r\n    };\r\n    /** @nocollapse */\r\n    CaptchaHelperService.ctorParameters = function () { return [\r\n        { type: http_1.HttpClient, },\r\n        { type: core_1.NgZone, },\r\n    ]; };\nCaptchaHelperService.ɵfac = function CaptchaHelperService_Factory(t) { return new (t || CaptchaHelperService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nCaptchaHelperService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CaptchaHelperService, factory: function (t) { return CaptchaHelperService.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CaptchaHelperService, [{\n        type: core_1.Injectable\n    }], function () { return [{ type: ɵngcc1.HttpClient }, { type: ɵngcc0.NgZone }]; }, null); })();\r\n    return CaptchaHelperService;\r\n}());\r\nexports.CaptchaHelperService = CaptchaHelperService;\r\n\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"../services/shared\";\nexport let AuthGuardLogin = /*#__PURE__*/(() => {\n  class AuthGuardLogin {\n    constructor(router, cookieService, authenticationService) {\n      this.router = router;\n      this.cookieService = cookieService;\n      this.authenticationService = authenticationService;\n    }\n\n    canActivate(route, state) {\n      // user is logged in\n      if (this.authenticationService.isAuthenticated()) {\n        this.router.navigate(['/dashboard']);\n      }\n\n      return true;\n    }\n\n  }\n\n  AuthGuardLogin.ɵfac = function AuthGuardLogin_Factory(t) {\n    return new (t || AuthGuardLogin)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.CookieService), i0.ɵɵinject(i3.AuthenticationService));\n  };\n\n  AuthGuardLogin.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuardLogin,\n    factory: AuthGuardLogin.ɵfac\n  });\n  return AuthGuardLogin;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/guards/auth.guard.login.ts"],"names":["i0","i1","i2","i3","AuthGuardLogin","constructor","router","cookieService","authenticationService","canActivate","route","state","isAuthenticated","navigate","ɵfac","AuthGuardLogin_Factory","t","ɵɵinject","Router","CookieService","AuthenticationService","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,WAAaC,cAAb;AAAO,QAAMA,cAAN,CAAqB;AACxBC,IAAAA,WAAW,CAACC,MAAD,EAASC,aAAT,EAAwBC,qBAAxB,EAA+C;AACtD,WAAKF,MAAL,GAAcA,MAAd;AACA,WAAKC,aAAL,GAAqBA,aAArB;AACA,WAAKC,qBAAL,GAA6BA,qBAA7B;AACH;;AACDC,IAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AACtB;AACA,UAAI,KAAKH,qBAAL,CAA2BI,eAA3B,EAAJ,EAAkD;AAC9C,aAAKN,MAAL,CAAYO,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACH;;AACD,aAAO,IAAP;AACH;;AAZuB;;AAc5BT,EAAAA,cAAc,CAACU,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAIZ,cAAV,EAA0BJ,EAAE,CAACiB,QAAH,CAAYhB,EAAE,CAACiB,MAAf,CAA1B,EAAkDlB,EAAE,CAACiB,QAAH,CAAYf,EAAE,CAACiB,aAAf,CAAlD,EAAiFnB,EAAE,CAACiB,QAAH,CAAYd,EAAE,CAACiB,qBAAf,CAAjF,CAAP;AAAiI,GAA5L;;AACAhB,EAAAA,cAAc,CAACiB,KAAf,GAAuB,aAAcrB,EAAE,CAACsB,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAEnB,cAAT;AAAyBoB,IAAAA,OAAO,EAAEpB,cAAc,CAACU;AAAjD,GAAtB,CAArC;AAfA,SAAaV,cAAb;AAAA","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nimport * as i2 from \"ngx-cookie-service\";\r\nimport * as i3 from \"../services/shared\";\r\nexport class AuthGuardLogin {\r\n    constructor(router, cookieService, authenticationService) {\r\n        this.router = router;\r\n        this.cookieService = cookieService;\r\n        this.authenticationService = authenticationService;\r\n    }\r\n    canActivate(route, state) {\r\n        // user is logged in\r\n        if (this.authenticationService.isAuthenticated()) {\r\n            this.router.navigate(['/dashboard']);\r\n        }\r\n        return true;\r\n    }\r\n}\r\nAuthGuardLogin.ɵfac = function AuthGuardLogin_Factory(t) { return new (t || AuthGuardLogin)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.CookieService), i0.ɵɵinject(i3.AuthenticationService)); };\r\nAuthGuardLogin.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthGuardLogin, factory: AuthGuardLogin.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AddEmpComponent } from '../add-emp/add-emp.component';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { forkJoin } from 'rxjs';\nlet TablePaginatorChefComponent = class TablePaginatorChefComponent {\n  constructor(dataService, authService, _dialog) {\n    this.dataService = dataService;\n    this.authService = authService;\n    this._dialog = _dialog;\n    this.displayedColumns = ['name', 'date_Debut', 'date_Fin', 'statut', 'days', 'type', 'actions'];\n    this.dataSource = new MatTableDataSource([]);\n  }\n\n  ngOnInit() {\n    this.loadUserData();\n  }\n\n  loadUserData() {\n    const token = this.authService.getToken();\n\n    if (token) {\n      const parsedToken = this.parseToken(token);\n      const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\n\n      if (userId) {\n        this.authService.getUserById(userId).subscribe(userData => {\n          const groupeId = userData.groupe_Id;\n\n          if (groupeId) {\n            this.fetchGroupMembersAndLeaves(groupeId);\n          } else {\n            console.error('groupeId is undefined.');\n          }\n        }, error => {\n          console.error('Error fetching user data:', error);\n        });\n      } else {\n        console.error('userId is undefined.');\n      }\n    } else {\n      console.error('Token is not available.');\n    }\n  }\n\n  fetchGroupMembersAndLeaves(groupeId) {\n    this.dataService.getGroupMembers(groupeId).subscribe(members => {\n      const matricules = members.map(member => member.matricule);\n      const leaveRequests = matricules.map(matricule => this.dataService.getCongesByMatricule(matricule)); // Use forkJoin to wait for all HTTP requests to complete\n\n      forkJoin(leaveRequests).subscribe(results => {\n        const allLeaves = results.reduce((acc, curr) => acc.concat(curr), []);\n        const leavesWithNames = allLeaves.map(leave => {\n          const member = members.find(member => member.matricule === leave.matricule);\n          console.log('Leave data:', leave); // Debugging statement\n\n          return Object.assign(Object.assign({}, leave), {\n            name: member ? `${member.prenom} ${member.nom}` : 'Unknown'\n          });\n        });\n        this.processLeaveData(leavesWithNames);\n      }, error => {\n        console.error('Error fetching leave data:', error);\n      });\n    }, error => {\n      console.error('Error fetching group members:', error);\n    });\n  }\n\n  processLeaveData(leaves) {\n    const filteredLeaves = leaves.filter(leave => leave.statut.toLowerCase() === 'pending');\n    console.log('Filtered leaves:', filteredLeaves); // Debugging statement\n\n    this.dataService.getTypeConges().subscribe(typeCongesData => {\n      const processedData = filteredLeaves.map(leave => {\n        const typeConge = typeCongesData.find(tc => tc.type_Conge_Id === leave.type_Conge_Id);\n        console.log('Processing leave:', leave); // Debugging statement\n\n        return {\n          conge_Id: leave.conge_Id,\n          date_Debut: leave.date_Debut,\n          date_Fin: leave.date_Fin,\n          statut: leave.statut,\n          days: this.calculateDays(new Date(leave.date_Debut), new Date(leave.date_Fin)),\n          type: typeConge ? typeConge.type : 'Unknown',\n          name: leave.name\n        };\n      });\n      this.dataSource = new MatTableDataSource(processedData);\n      this.dataSource.paginator = this.paginator;\n    }, error => {\n      console.error('Error fetching type conge data:', error);\n    });\n  }\n\n  parseToken(token) {\n    try {\n      const payload = atob(token.split('.')[1]);\n      return JSON.parse(payload);\n    } catch (error) {\n      console.error('Error parsing token:', error);\n      return null;\n    }\n  }\n\n  calculateDays(startDate, endDate) {\n    const oneDay = 24 * 60 * 60 * 1000;\n    return Math.round((endDate.getTime() - startDate.getTime()) / oneDay);\n  }\n\n  approve(element) {\n    if (element.conge_Id) {\n      this.dataService.updateCongeStatut(element.conge_Id, 'Approved').subscribe(response => {\n        element.statut = 'Approved';\n        this.dataSource.data = this.dataSource.data.filter(el => el.conge_Id !== element.conge_Id);\n      }, error => {\n        console.error('Error approving leave request:', error);\n      });\n    } else {\n      console.error('conge_Id is undefined.');\n    }\n  }\n\n  deny(element) {\n    if (element.conge_Id) {\n      this.dataService.updateCongeStatut(element.conge_Id, 'Denied').subscribe(response => {\n        element.statut = 'Denied';\n        this.dataSource.data = this.dataSource.data.filter(el => el.conge_Id !== element.conge_Id);\n      }, error => {\n        console.error('Error denying leave request:', error);\n      });\n    } else {\n      console.error('conge_Id is undefined.');\n    }\n  }\n\n  openAddEmp(event) {\n    event.preventDefault();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n\n    this._dialog.open(AddEmpComponent, dialogConfig);\n  }\n\n};\n\n__decorate([ViewChild(MatPaginator)], TablePaginatorChefComponent.prototype, \"paginator\", void 0);\n\nTablePaginatorChefComponent = __decorate([Component({\n  selector: 'app-table-paginator-chef',\n  templateUrl: './table-paginator-chef.component.html',\n  styleUrls: ['./table-paginator-chef.component.scss']\n})], TablePaginatorChefComponent);\nexport { TablePaginatorChefComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/table-paginator-chef/table-paginator-chef.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Component","ViewChild","MatPaginator","MatTableDataSource","AddEmpComponent","MatDialogConfig","forkJoin","TablePaginatorChefComponent","constructor","dataService","authService","_dialog","displayedColumns","dataSource","ngOnInit","loadUserData","token","getToken","parsedToken","parseToken","userId","nameid","getUserById","subscribe","userData","groupeId","groupe_Id","fetchGroupMembersAndLeaves","console","error","getGroupMembers","members","matricules","map","member","matricule","leaveRequests","getCongesByMatricule","results","allLeaves","reduce","acc","curr","concat","leavesWithNames","leave","find","log","assign","name","prenom","nom","processLeaveData","leaves","filteredLeaves","filter","statut","toLowerCase","getTypeConges","typeCongesData","processedData","typeConge","tc","type_Conge_Id","conge_Id","date_Debut","date_Fin","days","calculateDays","Date","type","paginator","payload","atob","split","JSON","parse","startDate","endDate","oneDay","Math","round","getTime","approve","element","updateCongeStatut","response","data","el","deny","openAddEmp","event","preventDefault","dialogConfig","autoFocus","open","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddEmpComponent } from '../add-emp/add-emp.component';\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\nimport { forkJoin } from 'rxjs';\r\nlet TablePaginatorChefComponent = class TablePaginatorChefComponent {\r\n    constructor(dataService, authService, _dialog) {\r\n        this.dataService = dataService;\r\n        this.authService = authService;\r\n        this._dialog = _dialog;\r\n        this.displayedColumns = ['name', 'date_Debut', 'date_Fin', 'statut', 'days', 'type', 'actions'];\r\n        this.dataSource = new MatTableDataSource([]);\r\n    }\r\n    ngOnInit() {\r\n        this.loadUserData();\r\n    }\r\n    loadUserData() {\r\n        const token = this.authService.getToken();\r\n        if (token) {\r\n            const parsedToken = this.parseToken(token);\r\n            const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\r\n            if (userId) {\r\n                this.authService.getUserById(userId).subscribe((userData) => {\r\n                    const groupeId = userData.groupe_Id;\r\n                    if (groupeId) {\r\n                        this.fetchGroupMembersAndLeaves(groupeId);\r\n                    }\r\n                    else {\r\n                        console.error('groupeId is undefined.');\r\n                    }\r\n                }, (error) => {\r\n                    console.error('Error fetching user data:', error);\r\n                });\r\n            }\r\n            else {\r\n                console.error('userId is undefined.');\r\n            }\r\n        }\r\n        else {\r\n            console.error('Token is not available.');\r\n        }\r\n    }\r\n    fetchGroupMembersAndLeaves(groupeId) {\r\n        this.dataService.getGroupMembers(groupeId).subscribe((members) => {\r\n            const matricules = members.map(member => member.matricule);\r\n            const leaveRequests = matricules.map(matricule => this.dataService.getCongesByMatricule(matricule));\r\n            // Use forkJoin to wait for all HTTP requests to complete\r\n            forkJoin(leaveRequests).subscribe((results) => {\r\n                const allLeaves = results.reduce((acc, curr) => acc.concat(curr), []);\r\n                const leavesWithNames = allLeaves.map(leave => {\r\n                    const member = members.find(member => member.matricule === leave.matricule);\r\n                    console.log('Leave data:', leave); // Debugging statement\r\n                    return Object.assign(Object.assign({}, leave), { name: member ? `${member.prenom} ${member.nom}` : 'Unknown' });\r\n                });\r\n                this.processLeaveData(leavesWithNames);\r\n            }, (error) => {\r\n                console.error('Error fetching leave data:', error);\r\n            });\r\n        }, (error) => {\r\n            console.error('Error fetching group members:', error);\r\n        });\r\n    }\r\n    processLeaveData(leaves) {\r\n        const filteredLeaves = leaves.filter(leave => leave.statut.toLowerCase() === 'pending');\r\n        console.log('Filtered leaves:', filteredLeaves); // Debugging statement\r\n        this.dataService.getTypeConges().subscribe((typeCongesData) => {\r\n            const processedData = filteredLeaves.map(leave => {\r\n                const typeConge = typeCongesData.find(tc => tc.type_Conge_Id === leave.type_Conge_Id);\r\n                console.log('Processing leave:', leave); // Debugging statement\r\n                return {\r\n                    conge_Id: leave.conge_Id,\r\n                    date_Debut: leave.date_Debut,\r\n                    date_Fin: leave.date_Fin,\r\n                    statut: leave.statut,\r\n                    days: this.calculateDays(new Date(leave.date_Debut), new Date(leave.date_Fin)),\r\n                    type: typeConge ? typeConge.type : 'Unknown',\r\n                    name: leave.name\r\n                };\r\n            });\r\n            this.dataSource = new MatTableDataSource(processedData);\r\n            this.dataSource.paginator = this.paginator;\r\n        }, (error) => {\r\n            console.error('Error fetching type conge data:', error);\r\n        });\r\n    }\r\n    parseToken(token) {\r\n        try {\r\n            const payload = atob(token.split('.')[1]);\r\n            return JSON.parse(payload);\r\n        }\r\n        catch (error) {\r\n            console.error('Error parsing token:', error);\r\n            return null;\r\n        }\r\n    }\r\n    calculateDays(startDate, endDate) {\r\n        const oneDay = 24 * 60 * 60 * 1000;\r\n        return Math.round((endDate.getTime() - startDate.getTime()) / oneDay);\r\n    }\r\n    approve(element) {\r\n        if (element.conge_Id) {\r\n            this.dataService.updateCongeStatut(element.conge_Id, 'Approved').subscribe((response) => {\r\n                element.statut = 'Approved';\r\n                this.dataSource.data = this.dataSource.data.filter(el => el.conge_Id !== element.conge_Id);\r\n            }, (error) => {\r\n                console.error('Error approving leave request:', error);\r\n            });\r\n        }\r\n        else {\r\n            console.error('conge_Id is undefined.');\r\n        }\r\n    }\r\n    deny(element) {\r\n        if (element.conge_Id) {\r\n            this.dataService.updateCongeStatut(element.conge_Id, 'Denied').subscribe((response) => {\r\n                element.statut = 'Denied';\r\n                this.dataSource.data = this.dataSource.data.filter(el => el.conge_Id !== element.conge_Id);\r\n            }, (error) => {\r\n                console.error('Error denying leave request:', error);\r\n            });\r\n        }\r\n        else {\r\n            console.error('conge_Id is undefined.');\r\n        }\r\n    }\r\n    openAddEmp(event) {\r\n        event.preventDefault();\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.autoFocus = true;\r\n        this._dialog.open(AddEmpComponent, dialogConfig);\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild(MatPaginator)\r\n], TablePaginatorChefComponent.prototype, \"paginator\", void 0);\r\nTablePaginatorChefComponent = __decorate([\r\n    Component({\r\n        selector: 'app-table-paginator-chef',\r\n        templateUrl: './table-paginator-chef.component.html',\r\n        styleUrls: ['./table-paginator-chef.component.scss']\r\n    })\r\n], TablePaginatorChefComponent);\r\nexport { TablePaginatorChefComponent };\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '@angular/core';\nimport { UserIdentifiers } from 'app/models/shared';\nlet ChangePasswordComponent = class ChangePasswordComponent {\n  constructor(dialogRef, authentication, notificationService) {\n    this.dialogRef = dialogRef;\n    this.authentication = authentication;\n    this.notificationService = notificationService;\n    this.hideCurrentPassword = true;\n    this.hideNewPassword = true;\n    this.hideNewPasswordConfirmed = true;\n    this.barLabel = 'New Password Strength:';\n    this.passwordStrength = false;\n  }\n\n  ngOnInit() {\n    this.userIdentifiers = new UserIdentifiers();\n  }\n\n  changePassword() {\n    this.userProfile = this.authentication.getProfile();\n    this.userIdentifiers.identifier = this.userProfile.currentUser.userId.toString();\n    this.userIdentifiers.password = this.password;\n    this.userIdentifiers.newPassword = this.newPassword;\n    this.userIdentifiers.newPasswordConfirmed = this.newPasswordConfirmed;\n\n    if (this.validPasswords()) {\n      this.authentication.changePassword(this.userIdentifiers).subscribe(data => {\n        if (data === 'succeeded') {\n          this.notificationService.success('Your password is updated successfully');\n          this.dialogRef.close();\n        } else {\n          this.notificationService.danger('Verify your old password');\n        }\n      });\n    }\n  }\n\n  getPasswordStrength(passwordStrength) {\n    this.passwordStrength = passwordStrength;\n  }\n\n  validPasswords() {\n    if (this.userIdentifiers.password === undefined || this.userIdentifiers.newPassword === undefined || this.userIdentifiers.newPasswordConfirmed === undefined) {\n      this.notificationService.danger('Please fill all required fields');\n      return false;\n    }\n\n    if (!this.passwordStrength) {\n      this.notificationService.danger('Please fill a strength new password');\n      return false;\n    }\n\n    if (this.userIdentifiers.password === this.userIdentifiers.newPassword) {\n      this.notificationService.danger('Current and new passwords must be different');\n      return false;\n    }\n\n    if (this.userIdentifiers.newPassword !== this.userIdentifiers.newPasswordConfirmed) {\n      this.notificationService.danger('Verify your confirm password');\n      return false;\n    }\n\n    return true;\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n};\nChangePasswordComponent = __decorate([Component({\n  selector: 'app-change-password-component',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})], ChangePasswordComponent);\nexport { ChangePasswordComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/components/auth/change-password/change-password.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Component","UserIdentifiers","ChangePasswordComponent","constructor","dialogRef","authentication","notificationService","hideCurrentPassword","hideNewPassword","hideNewPasswordConfirmed","barLabel","passwordStrength","ngOnInit","userIdentifiers","changePassword","userProfile","getProfile","identifier","currentUser","userId","toString","password","newPassword","newPasswordConfirmed","validPasswords","subscribe","data","success","close","danger","getPasswordStrength","undefined","cancel","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { UserIdentifiers } from 'app/models/shared';\r\nlet ChangePasswordComponent = class ChangePasswordComponent {\r\n    constructor(dialogRef, authentication, notificationService) {\r\n        this.dialogRef = dialogRef;\r\n        this.authentication = authentication;\r\n        this.notificationService = notificationService;\r\n        this.hideCurrentPassword = true;\r\n        this.hideNewPassword = true;\r\n        this.hideNewPasswordConfirmed = true;\r\n        this.barLabel = 'New Password Strength:';\r\n        this.passwordStrength = false;\r\n    }\r\n    ngOnInit() {\r\n        this.userIdentifiers = new UserIdentifiers();\r\n    }\r\n    changePassword() {\r\n        this.userProfile = this.authentication.getProfile();\r\n        this.userIdentifiers.identifier = this.userProfile.currentUser.userId.toString();\r\n        this.userIdentifiers.password = this.password;\r\n        this.userIdentifiers.newPassword = this.newPassword;\r\n        this.userIdentifiers.newPasswordConfirmed = this.newPasswordConfirmed;\r\n        if (this.validPasswords()) {\r\n            this.authentication.changePassword(this.userIdentifiers).subscribe((data) => {\r\n                if (data === 'succeeded') {\r\n                    this.notificationService.success('Your password is updated successfully');\r\n                    this.dialogRef.close();\r\n                }\r\n                else {\r\n                    this.notificationService.danger('Verify your old password');\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getPasswordStrength(passwordStrength) {\r\n        this.passwordStrength = passwordStrength;\r\n    }\r\n    validPasswords() {\r\n        if (this.userIdentifiers.password === undefined || this.userIdentifiers.newPassword === undefined\r\n            || this.userIdentifiers.newPasswordConfirmed === undefined) {\r\n            this.notificationService.danger('Please fill all required fields');\r\n            return false;\r\n        }\r\n        if (!this.passwordStrength) {\r\n            this.notificationService.danger('Please fill a strength new password');\r\n            return false;\r\n        }\r\n        if (this.userIdentifiers.password === this.userIdentifiers.newPassword) {\r\n            this.notificationService.danger('Current and new passwords must be different');\r\n            return false;\r\n        }\r\n        if (this.userIdentifiers.newPassword !== this.userIdentifiers.newPasswordConfirmed) {\r\n            this.notificationService.danger('Verify your confirm password');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    cancel() {\r\n        this.dialogRef.close();\r\n    }\r\n};\r\nChangePasswordComponent = __decorate([\r\n    Component({\r\n        selector: 'app-change-password-component',\r\n        templateUrl: './change-password.component.html',\r\n        styleUrls: ['./change-password.component.scss']\r\n    })\r\n], ChangePasswordComponent);\r\nexport { ChangePasswordComponent };\r\n"]},"metadata":{},"sourceType":"module"}
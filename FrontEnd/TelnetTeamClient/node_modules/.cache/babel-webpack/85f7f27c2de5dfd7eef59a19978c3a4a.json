{"ast":null,"code":"import * as _ from 'underscore';\nexport class PagerService {\n  getPager(totalItems, currentPage = 1, pageSize = 3) {\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n    let startPage, endPage;\n\n    if (totalPages <= 3) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 2) {\n        startPage = 1;\n        endPage = 3;\n      } else if (currentPage + 2 >= totalPages) {\n        startPage = totalPages - 2;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage;\n        endPage = currentPage + 2;\n      }\n    } // calculate start and end item indexes\n\n\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n    const pages = _.range(startPage, endPage + 1); // return object with all pager properties required by the view\n\n\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/services/shared/pager.service.ts"],"names":["_","PagerService","getPager","totalItems","currentPage","pageSize","totalPages","Math","ceil","startPage","endPage","startIndex","endIndex","min","pages","range"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,YAAnB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,QAAQ,CAACC,UAAD,EAAaC,WAAW,GAAG,CAA3B,EAA8BC,QAAQ,GAAG,CAAzC,EAA4C;AAChD;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,UAAU,GAAGE,QAAvB,CAAnB;AACA,QAAII,SAAJ,EAAeC,OAAf;;AACA,QAAIJ,UAAU,IAAI,CAAlB,EAAqB;AACjB;AACAG,MAAAA,SAAS,GAAG,CAAZ;AACAC,MAAAA,OAAO,GAAGJ,UAAV;AACH,KAJD,MAKK;AACD;AACA,UAAIF,WAAW,IAAI,CAAnB,EAAsB;AAClBK,QAAAA,SAAS,GAAG,CAAZ;AACAC,QAAAA,OAAO,GAAG,CAAV;AACH,OAHD,MAIK,IAAIN,WAAW,GAAG,CAAd,IAAmBE,UAAvB,EAAmC;AACpCG,QAAAA,SAAS,GAAGH,UAAU,GAAG,CAAzB;AACAI,QAAAA,OAAO,GAAGJ,UAAV;AACH,OAHI,MAIA;AACDG,QAAAA,SAAS,GAAGL,WAAZ;AACAM,QAAAA,OAAO,GAAGN,WAAW,GAAG,CAAxB;AACH;AACJ,KAvB+C,CAwBhD;;;AACA,UAAMO,UAAU,GAAG,CAACP,WAAW,GAAG,CAAf,IAAoBC,QAAvC;AACA,UAAMO,QAAQ,GAAGL,IAAI,CAACM,GAAL,CAASF,UAAU,GAAGN,QAAb,GAAwB,CAAjC,EAAoCF,UAAU,GAAG,CAAjD,CAAjB,CA1BgD,CA2BhD;;AACA,UAAMW,KAAK,GAAGd,CAAC,CAACe,KAAF,CAAQN,SAAR,EAAmBC,OAAO,GAAG,CAA7B,CAAd,CA5BgD,CA6BhD;;;AACA,WAAO;AACHP,MAAAA,UAAU,EAAEA,UADT;AAEHC,MAAAA,WAAW,EAAEA,WAFV;AAGHC,MAAAA,QAAQ,EAAEA,QAHP;AAIHC,MAAAA,UAAU,EAAEA,UAJT;AAKHG,MAAAA,SAAS,EAAEA,SALR;AAMHC,MAAAA,OAAO,EAAEA,OANN;AAOHC,MAAAA,UAAU,EAAEA,UAPT;AAQHC,MAAAA,QAAQ,EAAEA,QARP;AASHE,MAAAA,KAAK,EAAEA;AATJ,KAAP;AAWH;;AA1CqB","sourcesContent":["import * as _ from 'underscore';\r\nexport class PagerService {\r\n    getPager(totalItems, currentPage = 1, pageSize = 3) {\r\n        // calculate total pages\r\n        const totalPages = Math.ceil(totalItems / pageSize);\r\n        let startPage, endPage;\r\n        if (totalPages <= 3) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        }\r\n        else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 2) {\r\n                startPage = 1;\r\n                endPage = 3;\r\n            }\r\n            else if (currentPage + 2 >= totalPages) {\r\n                startPage = totalPages - 2;\r\n                endPage = totalPages;\r\n            }\r\n            else {\r\n                startPage = currentPage;\r\n                endPage = currentPage + 2;\r\n            }\r\n        }\r\n        // calculate start and end item indexes\r\n        const startIndex = (currentPage - 1) * pageSize;\r\n        const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n        // create an array of pages to ng-repeat in the pager control\r\n        const pages = _.range(startPage, endPage + 1);\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
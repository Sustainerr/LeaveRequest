{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'https://localhost:7216/api';\n    }\n\n    getConges(userId) {\n      return this.http.get(`${this.apiUrl}/Conges/matricule/${userId}`);\n    }\n\n    getTypeConges() {\n      return this.http.get(`${this.apiUrl}/TypeConges`);\n    }\n\n    getGroupMembers(groupeId) {\n      return this.http.get(`${this.apiUrl}/Utilisateur/groupe/${groupeId}`);\n    }\n\n    getCongesByMatricule(matricule) {\n      return this.http.get(`${this.apiUrl}/conges/matricule/${matricule}`);\n    }\n\n    updateCongeStatut(congeId, statut) {\n      return this.http.patch(`${this.apiUrl}/conges/${congeId}/statut`, JSON.stringify(statut), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n\n    updateCongeDates(conge_Id, dates) {\n      return this.http.patch(`${this.apiUrl}/Conges/${conge_Id}/dates`, dates, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n\n    deleteConge(conge_Id) {\n      return this.http.delete(`${this.apiUrl}/Conges/${conge_Id}`);\n    }\n\n  }\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/services/data.service.ts"],"names":["i0","i1","DataService","constructor","http","apiUrl","getConges","userId","get","getTypeConges","getGroupMembers","groupeId","getCongesByMatricule","matricule","updateCongeStatut","congeId","statut","patch","JSON","stringify","headers","updateCongeDates","conge_Id","dates","deleteConge","delete","ɵfac","DataService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,WAAaC,WAAb;AAAO,QAAMA,WAAN,CAAkB;AACrBC,IAAAA,WAAW,CAACC,IAAD,EAAO;AACd,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKC,MAAL,GAAc,4BAAd;AACH;;AACDC,IAAAA,SAAS,CAACC,MAAD,EAAS;AACd,aAAO,KAAKH,IAAL,CAAUI,GAAV,CAAe,GAAE,KAAKH,MAAO,qBAAoBE,MAAO,EAAxD,CAAP;AACH;;AACDE,IAAAA,aAAa,GAAG;AACZ,aAAO,KAAKL,IAAL,CAAUI,GAAV,CAAe,GAAE,KAAKH,MAAO,aAA7B,CAAP;AACH;;AACDK,IAAAA,eAAe,CAACC,QAAD,EAAW;AACtB,aAAO,KAAKP,IAAL,CAAUI,GAAV,CAAe,GAAE,KAAKH,MAAO,uBAAsBM,QAAS,EAA5D,CAAP;AACH;;AACDC,IAAAA,oBAAoB,CAACC,SAAD,EAAY;AAC5B,aAAO,KAAKT,IAAL,CAAUI,GAAV,CAAe,GAAE,KAAKH,MAAO,qBAAoBQ,SAAU,EAA3D,CAAP;AACH;;AACDC,IAAAA,iBAAiB,CAACC,OAAD,EAAUC,MAAV,EAAkB;AAC/B,aAAO,KAAKZ,IAAL,CAAUa,KAAV,CAAiB,GAAE,KAAKZ,MAAO,WAAUU,OAAQ,SAAjD,EAA2DG,IAAI,CAACC,SAAL,CAAeH,MAAf,CAA3D,EAAmF;AACtFI,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAD6E,OAAnF,CAAP;AAGH;;AACDC,IAAAA,gBAAgB,CAACC,QAAD,EAAWC,KAAX,EAAkB;AAC9B,aAAO,KAAKnB,IAAL,CAAUa,KAAV,CAAiB,GAAE,KAAKZ,MAAO,WAAUiB,QAAS,QAAlD,EAA2DC,KAA3D,EAAkE;AACrEH,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAD4D,OAAlE,CAAP;AAGH;;AACDI,IAAAA,WAAW,CAACF,QAAD,EAAW;AAClB,aAAO,KAAKlB,IAAL,CAAUqB,MAAV,CAAkB,GAAE,KAAKpB,MAAO,WAAUiB,QAAS,EAAnD,CAAP;AACH;;AA7BoB;;AA+BzBpB,EAAAA,WAAW,CAACwB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,WAAO,KAAKA,CAAC,IAAI1B,WAAV,EAAuBF,EAAE,CAAC6B,QAAH,CAAY5B,EAAE,CAAC6B,UAAf,CAAvB,CAAP;AAA4D,GAAjH;;AACA5B,EAAAA,WAAW,CAAC6B,KAAZ,GAAoB,aAAc/B,EAAE,CAACgC,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAE/B,WAAT;AAAsBgC,IAAAA,OAAO,EAAEhC,WAAW,CAACwB,IAA3C;AAAiDS,IAAAA,UAAU,EAAE;AAA7D,GAAtB,CAAlC;AAhCA,SAAajC,WAAb;AAAA","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class DataService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.apiUrl = 'https://localhost:7216/api';\r\n    }\r\n    getConges(userId) {\r\n        return this.http.get(`${this.apiUrl}/Conges/matricule/${userId}`);\r\n    }\r\n    getTypeConges() {\r\n        return this.http.get(`${this.apiUrl}/TypeConges`);\r\n    }\r\n    getGroupMembers(groupeId) {\r\n        return this.http.get(`${this.apiUrl}/Utilisateur/groupe/${groupeId}`);\r\n    }\r\n    getCongesByMatricule(matricule) {\r\n        return this.http.get(`${this.apiUrl}/conges/matricule/${matricule}`);\r\n    }\r\n    updateCongeStatut(congeId, statut) {\r\n        return this.http.patch(`${this.apiUrl}/conges/${congeId}/statut`, JSON.stringify(statut), {\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n    }\r\n    updateCongeDates(conge_Id, dates) {\r\n        return this.http.patch(`${this.apiUrl}/Conges/${conge_Id}/dates`, dates, {\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n    }\r\n    deleteConge(conge_Id) {\r\n        return this.http.delete(`${this.apiUrl}/Conges/${conge_Id}`);\r\n    }\r\n}\r\nDataService.ɵfac = function DataService_Factory(t) { return new (t || DataService)(i0.ɵɵinject(i1.HttpClient)); };\r\nDataService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DataService, factory: DataService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}
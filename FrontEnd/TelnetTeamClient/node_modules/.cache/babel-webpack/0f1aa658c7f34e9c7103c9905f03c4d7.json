{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../auth.service\";\nexport let AddEmpComponent = /*#__PURE__*/(() => {\n  class AddEmpComponent {\n    constructor(fb, http, authService) {\n      this.fb = fb;\n      this.http = http;\n      this.authService = authService;\n      this.typeCongeUrl = 'https://localhost:7216/api/TypeConges/byRole';\n      this.congesUrl = 'https://localhost:7216/api/conges';\n      this.userRole = '';\n      this.leaveTypes = [];\n      console.log('AddEmpComponent instantiated');\n      this.leaveForm = this.fb.group({\n        dateDebut: ['', Validators.required],\n        dateFin: ['', Validators.required],\n        type: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      console.log('ngOnInit called'); // Add log to confirm ngOnInit execution\n\n      const token = this.authService.getToken();\n      console.log('Token:', token); // Log token\n\n      if (token) {\n        const parsedToken = this.parseToken(token);\n        console.log('Parsed Token:', parsedToken); // Log parsed token\n\n        const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\n        console.log('User ID:', userId); // Log user ID\n\n        if (userId) {\n          this.authService.getUserById(userId).subscribe(data => {\n            console.log('User data:', data); // Log user data\n\n            this.userRole = data.role;\n            console.log('User Role:', this.userRole); // Log user role\n\n            this.getLeaveTypesByRole(this.userRole).subscribe(types => {\n              this.leaveTypes = types;\n              console.log('Leave types fetched:', this.leaveTypes); // Log leave types\n            }, error => {\n              console.error('Error fetching leave types:', error); // Log error\n            });\n          }, error => {\n            console.error('Error fetching user data:', error); // Log error\n          });\n        } else {\n          console.error('userId is undefined.');\n        }\n      } else {\n        console.error('Token is not available.');\n      }\n    }\n\n    parseToken(token) {\n      try {\n        const payload = atob(token.split('.')[1]);\n        return JSON.parse(payload);\n      } catch (error) {\n        console.error('Error parsing token:', error);\n        return null;\n      }\n    }\n\n    getLeaveTypesByRole(role) {\n      const url = `${this.typeCongeUrl}/${role}`;\n      console.log('Fetching leave types from URL:', url); // Log URL\n\n      return this.http.get(url);\n    }\n\n    onSubmit() {\n      if (this.leaveForm.valid) {\n        const token = this.authService.getToken();\n\n        if (token) {\n          const parsedToken = this.parseToken(token);\n          const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\n          const leaveRequest = {\n            date_Debut: this.leaveForm.value.dateDebut,\n            date_Fin: this.leaveForm.value.dateFin,\n            statut: 'pending',\n            type_Conge_Id: this.leaveForm.value.type,\n            matricule: userId\n          };\n          console.log('Submitting leave request:', leaveRequest); // Log leave request\n\n          this.http.post(this.congesUrl, leaveRequest).subscribe(response => {\n            console.log('Leave request submitted successfully:', response); // Log success response\n          }, error => {\n            console.error('Error submitting leave request:', error); // Log error\n          });\n        } else {\n          console.error('Token is not available.');\n        }\n      } else {\n        console.error('Form is invalid.');\n      }\n    }\n\n  }\n\n  AddEmpComponent.ɵfac = function AddEmpComponent_Factory(t) {\n    return new (t || AddEmpComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  AddEmpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEmpComponent,\n    selectors: [[\"app-add-emp\"]],\n    decls: 19,\n    vars: 0,\n    consts: [[1, \"form-container\"], [1, \"date-inputs\"], [1, \"form-group\"], [\"for\", \"dateDebut\"], [\"type\", \"date\", \"id\", \"dateDebut\", \"name\", \"dateDebut\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateFin\"], [\"type\", \"date\", \"id\", \"dateFin\", \"name\", \"dateFin\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"type-input\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AddEmpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Date Debut:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Date Fin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelementStart(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 9);\n        i0.ɵɵelementStart(15, \"option\", 10);\n        i0.ɵɵtext(16, \"Select Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵtext(18, \"Add Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\".form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;padding:35px}.date-inputs[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;max-width:500px;margin-bottom:20px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{flex:1;margin-right:10px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]:last-child{margin-right:0}.type-input[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%;max-width:500px;margin-bottom:20px}button[_ngcontent-%COMP%]{display:block;margin:0 auto}\"]\n  });\n  return AddEmpComponent;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/add-emp/add-emp.component.ts"],"names":["Validators","i0","i1","i2","i3","AddEmpComponent","constructor","fb","http","authService","typeCongeUrl","congesUrl","userRole","leaveTypes","console","log","leaveForm","group","dateDebut","required","dateFin","type","ngOnInit","token","getToken","parsedToken","parseToken","userId","nameid","getUserById","subscribe","data","role","getLeaveTypesByRole","types","error","payload","atob","split","JSON","parse","url","get","onSubmit","valid","leaveRequest","date_Debut","value","date_Fin","statut","type_Conge_Id","matricule","post","response","ɵfac","AddEmpComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","HttpClient","AuthService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","AddEmpComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","directives","ɵNgNoValidate","NgControlStatusGroup","NgForm","NgSelectOption","ɵNgSelectMultipleOption","styles"],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nimport * as i2 from \"@angular/common/http\";\r\nimport * as i3 from \"../auth.service\";\r\nexport class AddEmpComponent {\r\n    constructor(fb, http, authService) {\r\n        this.fb = fb;\r\n        this.http = http;\r\n        this.authService = authService;\r\n        this.typeCongeUrl = 'https://localhost:7216/api/TypeConges/byRole';\r\n        this.congesUrl = 'https://localhost:7216/api/conges';\r\n        this.userRole = '';\r\n        this.leaveTypes = [];\r\n        console.log('AddEmpComponent instantiated');\r\n        this.leaveForm = this.fb.group({\r\n            dateDebut: ['', Validators.required],\r\n            dateFin: ['', Validators.required],\r\n            type: ['', Validators.required]\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        console.log('ngOnInit called'); // Add log to confirm ngOnInit execution\r\n        const token = this.authService.getToken();\r\n        console.log('Token:', token); // Log token\r\n        if (token) {\r\n            const parsedToken = this.parseToken(token);\r\n            console.log('Parsed Token:', parsedToken); // Log parsed token\r\n            const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\r\n            console.log('User ID:', userId); // Log user ID\r\n            if (userId) {\r\n                this.authService.getUserById(userId).subscribe((data) => {\r\n                    console.log('User data:', data); // Log user data\r\n                    this.userRole = data.role;\r\n                    console.log('User Role:', this.userRole); // Log user role\r\n                    this.getLeaveTypesByRole(this.userRole).subscribe((types) => {\r\n                        this.leaveTypes = types;\r\n                        console.log('Leave types fetched:', this.leaveTypes); // Log leave types\r\n                    }, (error) => {\r\n                        console.error('Error fetching leave types:', error); // Log error\r\n                    });\r\n                }, (error) => {\r\n                    console.error('Error fetching user data:', error); // Log error\r\n                });\r\n            }\r\n            else {\r\n                console.error('userId is undefined.');\r\n            }\r\n        }\r\n        else {\r\n            console.error('Token is not available.');\r\n        }\r\n    }\r\n    parseToken(token) {\r\n        try {\r\n            const payload = atob(token.split('.')[1]);\r\n            return JSON.parse(payload);\r\n        }\r\n        catch (error) {\r\n            console.error('Error parsing token:', error);\r\n            return null;\r\n        }\r\n    }\r\n    getLeaveTypesByRole(role) {\r\n        const url = `${this.typeCongeUrl}/${role}`;\r\n        console.log('Fetching leave types from URL:', url); // Log URL\r\n        return this.http.get(url);\r\n    }\r\n    onSubmit() {\r\n        if (this.leaveForm.valid) {\r\n            const token = this.authService.getToken();\r\n            if (token) {\r\n                const parsedToken = this.parseToken(token);\r\n                const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\r\n                const leaveRequest = {\r\n                    date_Debut: this.leaveForm.value.dateDebut,\r\n                    date_Fin: this.leaveForm.value.dateFin,\r\n                    statut: 'pending',\r\n                    type_Conge_Id: this.leaveForm.value.type,\r\n                    matricule: userId\r\n                };\r\n                console.log('Submitting leave request:', leaveRequest); // Log leave request\r\n                this.http.post(this.congesUrl, leaveRequest).subscribe((response) => {\r\n                    console.log('Leave request submitted successfully:', response); // Log success response\r\n                }, (error) => {\r\n                    console.error('Error submitting leave request:', error); // Log error\r\n                });\r\n            }\r\n            else {\r\n                console.error('Token is not available.');\r\n            }\r\n        }\r\n        else {\r\n            console.error('Form is invalid.');\r\n        }\r\n    }\r\n}\r\nAddEmpComponent.ɵfac = function AddEmpComponent_Factory(t) { return new (t || AddEmpComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthService)); };\r\nAddEmpComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddEmpComponent, selectors: [[\"app-add-emp\"]], decls: 19, vars: 0, consts: [[1, \"form-container\"], [1, \"date-inputs\"], [1, \"form-group\"], [\"for\", \"dateDebut\"], [\"type\", \"date\", \"id\", \"dateDebut\", \"name\", \"dateDebut\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateFin\"], [\"type\", \"date\", \"id\", \"dateFin\", \"name\", \"dateFin\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"type-input\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]], template: function AddEmpComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵelementStart(1, \"form\");\r\n        i0.ɵɵelementStart(2, \"div\", 1);\r\n        i0.ɵɵelementStart(3, \"div\", 2);\r\n        i0.ɵɵelementStart(4, \"label\", 3);\r\n        i0.ɵɵtext(5, \"Date Debut:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(6, \"input\", 4);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(7, \"div\", 2);\r\n        i0.ɵɵelementStart(8, \"label\", 5);\r\n        i0.ɵɵtext(9, \"Date Fin:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(10, \"input\", 6);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(11, \"div\", 7);\r\n        i0.ɵɵelementStart(12, \"label\", 8);\r\n        i0.ɵɵtext(13, \"Type:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(14, \"select\", 9);\r\n        i0.ɵɵelementStart(15, \"option\", 10);\r\n        i0.ɵɵtext(16, \"Select Type\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(17, \"button\", 11);\r\n        i0.ɵɵtext(18, \"Add Employee\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } }, directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i1.NgSelectOption, i1.ɵNgSelectMultipleOption], styles: [\".form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;padding:35px}.date-inputs[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;max-width:500px;margin-bottom:20px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{flex:1;margin-right:10px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]:last-child{margin-right:0}.type-input[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%;max-width:500px;margin-bottom:20px}button[_ngcontent-%COMP%]{display:block;margin:0 auto}\"] });\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'https://localhost:7216/api';\n    }\n\n    getConges(userId) {\n      return this.http.get(`${this.apiUrl}/Conges/matricule/${userId}`);\n    }\n\n    getTypeConges() {\n      return this.http.get(`${this.apiUrl}/TypeConges`);\n    }\n\n    getGroupMembers(groupeId) {\n      return this.http.get(`${this.apiUrl}/Utilisateur/groupe/${groupeId}`);\n    }\n\n    getCongesByMatricule(matricule) {\n      return this.http.get(`${this.apiUrl}/conges/matricule/${matricule}`);\n    }\n\n    updateCongeStatut(congeId, statut) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.http.patch(`${this.apiUrl}/Conges/${congeId}/statut`, JSON.stringify(statut), {\n        headers\n      });\n    }\n\n  }\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/services/data.service.ts"],"names":["HttpHeaders","i0","i1","DataService","constructor","http","apiUrl","getConges","userId","get","getTypeConges","getGroupMembers","groupeId","getCongesByMatricule","matricule","updateCongeStatut","congeId","statut","headers","patch","JSON","stringify","ɵfac","DataService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,WAAaC,WAAb;AAAO,QAAMA,WAAN,CAAkB;AACrBC,IAAAA,WAAW,CAACC,IAAD,EAAO;AACd,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKC,MAAL,GAAc,4BAAd;AACH;;AACDC,IAAAA,SAAS,CAACC,MAAD,EAAS;AACd,aAAO,KAAKH,IAAL,CAAUI,GAAV,CAAe,GAAE,KAAKH,MAAO,qBAAoBE,MAAO,EAAxD,CAAP;AACH;;AACDE,IAAAA,aAAa,GAAG;AACZ,aAAO,KAAKL,IAAL,CAAUI,GAAV,CAAe,GAAE,KAAKH,MAAO,aAA7B,CAAP;AACH;;AACDK,IAAAA,eAAe,CAACC,QAAD,EAAW;AACtB,aAAO,KAAKP,IAAL,CAAUI,GAAV,CAAe,GAAE,KAAKH,MAAO,uBAAsBM,QAAS,EAA5D,CAAP;AACH;;AACDC,IAAAA,oBAAoB,CAACC,SAAD,EAAY;AAC5B,aAAO,KAAKT,IAAL,CAAUI,GAAV,CAAe,GAAE,KAAKH,MAAO,qBAAoBQ,SAAU,EAA3D,CAAP;AACH;;AACDC,IAAAA,iBAAiB,CAACC,OAAD,EAAUC,MAAV,EAAkB;AAC/B,YAAMC,OAAO,GAAG,IAAIlB,WAAJ,CAAgB;AAAE,wBAAgB;AAAlB,OAAhB,CAAhB;AACA,aAAO,KAAKK,IAAL,CAAUc,KAAV,CAAiB,GAAE,KAAKb,MAAO,WAAUU,OAAQ,SAAjD,EAA2DI,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA3D,EAAmF;AAAEC,QAAAA;AAAF,OAAnF,CAAP;AACH;;AApBoB;;AAsBzBf,EAAAA,WAAW,CAACmB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,WAAO,KAAKA,CAAC,IAAIrB,WAAV,EAAuBF,EAAE,CAACwB,QAAH,CAAYvB,EAAE,CAACwB,UAAf,CAAvB,CAAP;AAA4D,GAAjH;;AACAvB,EAAAA,WAAW,CAACwB,KAAZ,GAAoB,aAAc1B,EAAE,CAAC2B,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAE1B,WAAT;AAAsB2B,IAAAA,OAAO,EAAE3B,WAAW,CAACmB,IAA3C;AAAiDS,IAAAA,UAAU,EAAE;AAA7D,GAAtB,CAAlC;AAvBA,SAAa5B,WAAb;AAAA","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class DataService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.apiUrl = 'https://localhost:7216/api';\r\n    }\r\n    getConges(userId) {\r\n        return this.http.get(`${this.apiUrl}/Conges/matricule/${userId}`);\r\n    }\r\n    getTypeConges() {\r\n        return this.http.get(`${this.apiUrl}/TypeConges`);\r\n    }\r\n    getGroupMembers(groupeId) {\r\n        return this.http.get(`${this.apiUrl}/Utilisateur/groupe/${groupeId}`);\r\n    }\r\n    getCongesByMatricule(matricule) {\r\n        return this.http.get(`${this.apiUrl}/conges/matricule/${matricule}`);\r\n    }\r\n    updateCongeStatut(congeId, statut) {\r\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n        return this.http.patch(`${this.apiUrl}/Conges/${congeId}/statut`, JSON.stringify(statut), { headers });\r\n    }\r\n}\r\nDataService.ɵfac = function DataService_Factory(t) { return new (t || DataService)(i0.ɵɵinject(i1.HttpClient)); };\r\nDataService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DataService, factory: DataService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, ViewChild } from '@angular/core';\nimport { JwtHelper } from '../../../helpers';\nimport { UserIdentifiers } from 'app/models/shared';\nlet ResetPasswordComponent = class ResetPasswordComponent {\n  constructor(route, authService, router, notificationService) {\n    this.route = route;\n    this.authService = authService;\n    this.router = router;\n    this.notificationService = notificationService;\n    this.jwtHelper = new JwtHelper();\n    this.inputValid = true;\n    this.expired = false;\n    this.barLabel = \"New Password Strength:\";\n    this.passwordStrength = false;\n  }\n\n  ngOnInit() {\n    this.userIdentifiers = new UserIdentifiers();\n    this.route.params.subscribe(params => {\n      this.token = params['token'];\n      this.expires_in = this.jwtHelper.getTokenExpirationDate(this.token);\n      this.userId = this.jwtHelper.getTokenUserId(this.token);\n      this.userIdentifiers.identifier = this.userId;\n      this.userIdentifiers.token = this.token;\n    });\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\n\n    if (this.expires_in < new Date()) {\n      this.expired = true;\n      this.notificationService.warning('Your reset password is expired , you must send new request');\n      this.router.navigate(['/auth/login']);\n    } else {\n      this.expired = false;\n    }\n  }\n\n  resetPassword() {\n    if (this.newPassword !== null && this.passwordStrength) {\n      if (this.newPassword === this.newPasswordConfirmed) {\n        this.userIdentifiers.newPassword = this.newPassword;\n        this.userIdentifiers.newPasswordConfirmed = this.newPasswordConfirmed;\n        this.authService.resetPassword(this.userIdentifiers).subscribe(response => {\n          if (response === 'succeeded') {\n            this.notificationService.success('Your password is reseted successfully.');\n            this.router.navigate(['/auth/login']);\n          } else {\n            this.notificationService.danger('Reset password failed. Check if new and old password are different.');\n          }\n        }, () => {\n          this.notificationService.danger('Reset password failed.');\n        });\n      } else {\n        this.notificationService.danger('Verify your password confirmation.');\n      }\n    } else {\n      this.notificationService.danger('Please fill a strong new password.');\n    }\n  }\n\n  getPasswordStrength(passwordStrength) {\n    this.passwordStrength = passwordStrength;\n  }\n\n};\n\n__decorate([ViewChild('f', {\n  static: true\n})], ResetPasswordComponent.prototype, \"f\", void 0);\n\nResetPasswordComponent = __decorate([Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: []\n})], ResetPasswordComponent);\nexport { ResetPasswordComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/components/auth/reset-password/reset-password.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Component","ViewChild","JwtHelper","UserIdentifiers","ResetPasswordComponent","constructor","route","authService","router","notificationService","jwtHelper","inputValid","expired","barLabel","passwordStrength","ngOnInit","userIdentifiers","params","subscribe","token","expires_in","getTokenExpirationDate","userId","getTokenUserId","identifier","document","querySelector","setAttribute","Date","warning","navigate","resetPassword","newPassword","newPasswordConfirmed","response","success","danger","getPasswordStrength","static","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { JwtHelper } from '../../../helpers';\r\nimport { UserIdentifiers } from 'app/models/shared';\r\nlet ResetPasswordComponent = class ResetPasswordComponent {\r\n    constructor(route, authService, router, notificationService) {\r\n        this.route = route;\r\n        this.authService = authService;\r\n        this.router = router;\r\n        this.notificationService = notificationService;\r\n        this.jwtHelper = new JwtHelper();\r\n        this.inputValid = true;\r\n        this.expired = false;\r\n        this.barLabel = \"New Password Strength:\";\r\n        this.passwordStrength = false;\r\n    }\r\n    ngOnInit() {\r\n        this.userIdentifiers = new UserIdentifiers();\r\n        this.route.params.subscribe(params => {\r\n            this.token = params['token'];\r\n            this.expires_in = this.jwtHelper.getTokenExpirationDate(this.token);\r\n            this.userId = this.jwtHelper.getTokenUserId(this.token);\r\n            this.userIdentifiers.identifier = this.userId;\r\n            this.userIdentifiers.token = this.token;\r\n        });\r\n        document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n        if (this.expires_in < new Date()) {\r\n            this.expired = true;\r\n            this.notificationService.warning('Your reset password is expired , you must send new request');\r\n            this.router.navigate(['/auth/login']);\r\n        }\r\n        else {\r\n            this.expired = false;\r\n        }\r\n    }\r\n    resetPassword() {\r\n        if (this.newPassword !== null && this.passwordStrength) {\r\n            if (this.newPassword === this.newPasswordConfirmed) {\r\n                this.userIdentifiers.newPassword = this.newPassword;\r\n                this.userIdentifiers.newPasswordConfirmed = this.newPasswordConfirmed;\r\n                this.authService.resetPassword(this.userIdentifiers).subscribe((response) => {\r\n                    if (response === 'succeeded') {\r\n                        this.notificationService.success('Your password is reseted successfully.');\r\n                        this.router.navigate(['/auth/login']);\r\n                    }\r\n                    else {\r\n                        this.notificationService.danger('Reset password failed. Check if new and old password are different.');\r\n                    }\r\n                }, () => {\r\n                    this.notificationService.danger('Reset password failed.');\r\n                });\r\n            }\r\n            else {\r\n                this.notificationService.danger('Verify your password confirmation.');\r\n            }\r\n        }\r\n        else {\r\n            this.notificationService.danger('Please fill a strong new password.');\r\n        }\r\n    }\r\n    getPasswordStrength(passwordStrength) {\r\n        this.passwordStrength = passwordStrength;\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('f', { static: true })\r\n], ResetPasswordComponent.prototype, \"f\", void 0);\r\nResetPasswordComponent = __decorate([\r\n    Component({\r\n        selector: 'app-reset-password',\r\n        templateUrl: './reset-password.component.html',\r\n        styleUrls: []\r\n    })\r\n], ResetPasswordComponent);\r\nexport { ResetPasswordComponent };\r\n"]},"metadata":{},"sourceType":"module"}
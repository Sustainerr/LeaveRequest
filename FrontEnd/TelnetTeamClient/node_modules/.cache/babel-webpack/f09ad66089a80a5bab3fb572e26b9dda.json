{"ast":null,"code":"import { Subject, ReplaySubject } from 'rxjs/index';\nimport { Body, OracleDbType, Direction } from 'app/models/shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/services/shared\";\nexport let ReferenceService = /*#__PURE__*/(() => {\n  class ReferenceService {\n    constructor(genericService, entityParameterService) {\n      this.genericService = genericService;\n      this.entityParameterService = entityParameterService;\n      this.sortReferences = new Subject();\n      this.savedReference = new ReplaySubject(1);\n    }\n\n    getTypesDocuments() {\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetTypesDocuments';\n      body.cursorName = 'curs';\n      return null; // return this.genericService\n      //     .createService('/Data/Get', body);\n    }\n\n    getDocumentStates() {\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetDocumentStates';\n      body.cursorName = 'curs';\n      return null; // return this.genericService\n      //     .createService('/Data/Get', body);\n    }\n\n    GetDocumentConfidentialities() {\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetDocumentConfidentialities';\n      body.cursorName = 'curs';\n      return null; // return this.genericService\n      //     .createService('/Data/Get', body);\n    }\n\n    getReferencesProjects(title, referenceCode, status, docTypes, activities, startCreationDate, endCreationDate) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'title', title, OracleDbType.Varchar2, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'referenceCode', referenceCode, OracleDbType.Varchar2, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'states', status, OracleDbType.Varchar2, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'activities', activities, OracleDbType.Varchar2, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'types', docTypes, OracleDbType.Varchar2, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'startCreationDate', startCreationDate, OracleDbType.Date, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'endCreationDate', endCreationDate, OracleDbType.Date, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetReferences';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return null; // return this.genericService\n      //     .createService('/Data/Get', body);\n    }\n\n    getReferenceProject(referenceId) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'referenceId', referenceId, OracleDbType.Decimal, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetReference';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return null; // return this.genericService\n      //     .createService('/Data/Get', body);\n    }\n\n    getActivityAbbriviations(activityId) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'activityId', activityId, OracleDbType.Decimal, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetActivityAbbriviations';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return null; // return this.genericService\n      //     .createService('/Data/Get', body);\n    }\n\n    getActivityCode(activityId) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'activityId', activityId, OracleDbType.Varchar2, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetActivityCode';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return null; // return this.genericService\n      //     .createService('/Data/Get', body);\n    }\n\n    saveReferenceGenerator(reference) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameters(entityParameters, reference);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.InsertOrUpdateReference';\n      body.entitiesParameters = new Array(entityParameters);\n      body.outputIdParameterName = 'referenceId';\n      return null; // return this.genericService\n      //     .createService('/Data/Save', body);\n    }\n\n  }\n\n  ReferenceService.ɵfac = function ReferenceService_Factory(t) {\n    return new (t || ReferenceService)(i0.ɵɵinject(i1.GenericService), i0.ɵɵinject(i1.EntityParameterService));\n  };\n\n  ReferenceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReferenceService,\n    factory: ReferenceService.ɵfac\n  });\n  return ReferenceService;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/services/project-management/project/reference.service.ts"],"names":["Subject","ReplaySubject","Body","OracleDbType","Direction","i0","i1","ReferenceService","constructor","genericService","entityParameterService","sortReferences","savedReference","getTypesDocuments","body","storedProcedureName","cursorName","getDocumentStates","GetDocumentConfidentialities","getReferencesProjects","title","referenceCode","status","docTypes","activities","startCreationDate","endCreationDate","entityParameters","Array","AddEntityParameter","Varchar2","Input","Date","entitiesParameters","getReferenceProject","referenceId","Decimal","getActivityAbbriviations","activityId","getActivityCode","saveReferenceGenerator","reference","AddEntityParameters","outputIdParameterName","ɵfac","ReferenceService_Factory","t","ɵɵinject","GenericService","EntityParameterService","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"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","sourcesContent":["import { Subject, ReplaySubject } from 'rxjs/index';\r\nimport { Body, OracleDbType, Direction } from 'app/models/shared';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"app/services/shared\";\r\nexport class ReferenceService {\r\n    constructor(genericService, entityParameterService) {\r\n        this.genericService = genericService;\r\n        this.entityParameterService = entityParameterService;\r\n        this.sortReferences = new Subject();\r\n        this.savedReference = new ReplaySubject(1);\r\n    }\r\n    getTypesDocuments() {\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetTypesDocuments';\r\n        body.cursorName = 'curs';\r\n        return null;\r\n        // return this.genericService\r\n        //     .createService('/Data/Get', body);\r\n    }\r\n    getDocumentStates() {\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetDocumentStates';\r\n        body.cursorName = 'curs';\r\n        return null;\r\n        // return this.genericService\r\n        //     .createService('/Data/Get', body);\r\n    }\r\n    GetDocumentConfidentialities() {\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetDocumentConfidentialities';\r\n        body.cursorName = 'curs';\r\n        return null;\r\n        // return this.genericService\r\n        //     .createService('/Data/Get', body);\r\n    }\r\n    getReferencesProjects(title, referenceCode, status, docTypes, activities, startCreationDate, endCreationDate) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'title', title, OracleDbType.Varchar2, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'referenceCode', referenceCode, OracleDbType.Varchar2, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'states', status, OracleDbType.Varchar2, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'activities', activities, OracleDbType.Varchar2, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'types', docTypes, OracleDbType.Varchar2, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'startCreationDate', startCreationDate, OracleDbType.Date, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'endCreationDate', endCreationDate, OracleDbType.Date, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetReferences';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return null;\r\n        // return this.genericService\r\n        //     .createService('/Data/Get', body);\r\n    }\r\n    getReferenceProject(referenceId) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'referenceId', referenceId, OracleDbType.Decimal, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetReference';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return null;\r\n        // return this.genericService\r\n        //     .createService('/Data/Get', body);\r\n    }\r\n    getActivityAbbriviations(activityId) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'activityId', activityId, OracleDbType.Decimal, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetActivityAbbriviations';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return null;\r\n        // return this.genericService\r\n        //     .createService('/Data/Get', body);\r\n    }\r\n    getActivityCode(activityId) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'activityId', activityId, OracleDbType.Varchar2, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetActivityCode';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return null;\r\n        // return this.genericService\r\n        //     .createService('/Data/Get', body);\r\n    }\r\n    saveReferenceGenerator(reference) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameters(entityParameters, reference);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.InsertOrUpdateReference';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.outputIdParameterName = 'referenceId';\r\n        return null;\r\n        // return this.genericService\r\n        //     .createService('/Data/Save', body);\r\n    }\r\n}\r\nReferenceService.ɵfac = function ReferenceService_Factory(t) { return new (t || ReferenceService)(i0.ɵɵinject(i1.GenericService), i0.ɵɵinject(i1.EntityParameterService)); };\r\nReferenceService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ReferenceService, factory: ReferenceService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}
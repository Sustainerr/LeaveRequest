{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Input } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { WorkHomeRequestStatus, WorkHomeRequestStatusLabel } from 'app/models/human-resources/work-from-home';\nimport { Groups } from 'app/models/shared';\nimport swal from 'sweetalert2';\nimport { EditWorkFromHomeRequestComponent } from '../edit-work-from-home-request/edit-work-from-home-request.component';\nlet WorkFromHomeRequestTableComponent = class WorkFromHomeRequestTableComponent {\n  constructor(notificationService, dialog, searchFilterService, workFromHomeService, mailService, dateTimeService) {\n    this.notificationService = notificationService;\n    this.dialog = dialog;\n    this.searchFilterService = searchFilterService;\n    this.workFromHomeService = workFromHomeService;\n    this.mailService = mailService;\n    this.dateTimeService = dateTimeService;\n    this.displayedColumns = ['userNumber', 'userFullName', 'activityName', 'startDate', 'endDate', 'dayNumber', 'halfDay', 'state', 'buttons'];\n    this.dataSource = new MatTableDataSource();\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.forbiddenRejectValidate = true;\n    this.listView = false;\n  }\n\n  ngOnInit() {\n    this.forbiddenRejectValidate = this.currentUser.groupId !== Groups.SuperAdmin && !this.currentUser.hasSubordinates;\n\n    if (this.workFromHomeRequests.length !== 0) {\n      this.listView = true;\n    }\n\n    this.selectedWorkHomeRequestId = 0;\n    this.dataSource = new MatTableDataSource(this.workFromHomeRequests);\n    this.subscription = this.searchFilterService.resultChanged.subscribe(() => {\n      this.dataSource = new MatTableDataSource(this.searchFilterService.showingDataLastFilter);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onSortData(sort) {\n    this.workFromHomeService.sortWorkFromHomeRequest.next(sort);\n  }\n\n  isMyWorkFromHomeRequestApprovedAndRejected(workFromHomeRequest) {\n    return workFromHomeRequest.userId === this.currentUser.userId && (workFromHomeRequest.state === WorkHomeRequestStatus.Approved || workFromHomeRequest.state === WorkHomeRequestStatus.Rejected);\n  }\n\n  isApproved(workFromHomeRequest) {\n    return workFromHomeRequest.state === WorkHomeRequestStatus.Approved;\n  }\n\n  isRejected(workFromHomeRequest) {\n    return workFromHomeRequest.state === WorkHomeRequestStatus.Rejected;\n  }\n\n  isInProgress(workFromHomeRequest) {\n    return workFromHomeRequest.state === WorkHomeRequestStatus.InProgress;\n  }\n\n  isMyWorkFromHomeRequestInProgress(workFromHomeRequest) {\n    return workFromHomeRequest.userId === this.currentUser.userId && workFromHomeRequest.state === WorkHomeRequestStatus.InProgress;\n  }\n\n  getworkFromHomeLabel(state) {\n    switch (state) {\n      case WorkHomeRequestStatus.InProgress:\n        return WorkHomeRequestStatusLabel.InProgress;\n\n      case WorkHomeRequestStatus.Approved:\n        return WorkHomeRequestStatusLabel.Approved;\n\n      case WorkHomeRequestStatus.Rejected:\n        return WorkHomeRequestStatusLabel.Rejected;\n\n      default:\n        return '';\n    }\n  }\n\n  openEditRequestDialog(workFromHomeRequest) {\n    const config = {\n      disableClose: false,\n      hasBackdrop: true,\n      width: '500px',\n      height: '350px',\n      data: {\n        workFromHomeRequestId: workFromHomeRequest.workHomeRequestId,\n        isEdit: true\n      }\n    };\n    this.displayAddRequestComponentdialogRef = this.dialog.open(EditWorkFromHomeRequestComponent, config);\n  }\n\n  deleteWorkFromHomeRequest(workFromHomeRequest) {\n    swal.fire({\n      text: `Are you sure to delete this Work From Home ${this.getworkFromHomeLabel(workFromHomeRequest.state)} Request for ${workFromHomeRequest.userFullName} from ${this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)} to ${this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)} ?`,\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!',\n      showLoaderOnConfirm: true,\n      preConfirm: () => {\n        this.workFromHomeService.deleteWorkFromHomeRequest(workFromHomeRequest.workHomeRequestId, this.currentUser.userId).subscribe(data => {\n          if (data !== 0) {\n            this.notificationService.success('This Work From Home Request is deleted');\n            this.workFromHomeService.refreshWorkFomHomeRequest.next();\n\n            if (workFromHomeRequest.state === WorkHomeRequestStatus.Approved) {\n              this.mailService.workFromHomeRequestDeleted(workFromHomeRequest);\n            }\n          } else {\n            this.workFromHomeService.refreshWorkFomHomeRequest.next();\n            this.notificationService.danger('Delete Work From Home Request failed');\n          }\n        }, () => {\n          this.notificationService.danger('Delete Work From Home Request failed');\n          this.workFromHomeService.refreshWorkFomHomeRequest.next();\n        });\n      }\n    });\n  }\n\n  rejectWorkFromHomeRequest(workFromHomeRequest) {\n    swal.fire({\n      text: `Are you sure to reject this Work From Home ${this.getworkFromHomeLabel(workFromHomeRequest.state)} Request for ${workFromHomeRequest.userFullName} from ${this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)} to ${this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)} ?`,\n      icon: 'error',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, reject it!',\n      cancelButtonText: 'No',\n      showLoaderOnConfirm: true,\n      preConfirm: () => {\n        this.workFromHomeService.updateStatusWorkFromHomeRequest(workFromHomeRequest, WorkHomeRequestStatus.Rejected).subscribe(data => {\n          if (data !== 0) {\n            this.notificationService.success('This Work From Home Request is rejected');\n            this.workFromHomeService.refreshWorkFomHomeRequest.next();\n            this.mailService.workFromHomeRequestRejected(workFromHomeRequest);\n          } else {\n            this.workFromHomeService.refreshWorkFomHomeRequest.next();\n            this.notificationService.danger('Reject Work From Home Request failed');\n            this.workFromHomeService.refreshWorkFomHomeRequest.next();\n          }\n        }, () => {\n          this.notificationService.danger('Reject Work From Home Request failed');\n          this.workFromHomeService.refreshWorkFomHomeRequest.next();\n        });\n      }\n    });\n  }\n\n  approveWorkFromHomeRequest(workFromHomeRequest) {\n    this.workFromHomeService.updateStatusWorkFromHomeRequest(workFromHomeRequest, WorkHomeRequestStatus.Approved).subscribe(data => {\n      if (data !== 0) {\n        this.notificationService.success('This Work From Home Request is approved');\n        this.workFromHomeService.refreshWorkFomHomeRequest.next();\n        this.mailService.workFromHomeRequestApproved(workFromHomeRequest);\n      } else {\n        this.workFromHomeService.refreshWorkFomHomeRequest.next();\n        this.notificationService.danger('Approve Work From Home Request failed');\n        this.workFromHomeService.refreshWorkFomHomeRequest.next();\n      }\n    }, () => {\n      this.notificationService.danger('Approve Work From Home Request failed');\n      this.workFromHomeService.refreshWorkFomHomeRequest.next();\n    });\n  }\n\n};\n\n__decorate([Input()], WorkFromHomeRequestTableComponent.prototype, \"workFromHomeRequests\", void 0);\n\nWorkFromHomeRequestTableComponent = __decorate([Component({\n  selector: 'app-work-from-home-request-table',\n  templateUrl: './work-from-home-request-table.component.html',\n  styleUrls: ['./work-from-home-request-table.component.scss']\n})], WorkFromHomeRequestTableComponent);\nexport { WorkFromHomeRequestTableComponent };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/components/human-resources/work-from-home/work-from-home-request/work-from-home-request-table/work-from-home-request-table.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Component","Input","MatTableDataSource","WorkHomeRequestStatus","WorkHomeRequestStatusLabel","Groups","swal","EditWorkFromHomeRequestComponent","WorkFromHomeRequestTableComponent","constructor","notificationService","dialog","searchFilterService","workFromHomeService","mailService","dateTimeService","displayedColumns","dataSource","currentUser","JSON","parse","localStorage","getItem","forbiddenRejectValidate","listView","ngOnInit","groupId","SuperAdmin","hasSubordinates","workFromHomeRequests","selectedWorkHomeRequestId","subscription","resultChanged","subscribe","showingDataLastFilter","ngOnDestroy","unsubscribe","onSortData","sort","sortWorkFromHomeRequest","next","isMyWorkFromHomeRequestApprovedAndRejected","workFromHomeRequest","userId","state","Approved","Rejected","isApproved","isRejected","isInProgress","InProgress","isMyWorkFromHomeRequestInProgress","getworkFromHomeLabel","openEditRequestDialog","config","disableClose","hasBackdrop","width","height","data","workFromHomeRequestId","workHomeRequestId","isEdit","displayAddRequestComponentdialogRef","open","deleteWorkFromHomeRequest","fire","text","userFullName","getShortFormat","startDate","endDate","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","showLoaderOnConfirm","preConfirm","success","refreshWorkFomHomeRequest","workFromHomeRequestDeleted","danger","rejectWorkFromHomeRequest","cancelButtonText","updateStatusWorkFromHomeRequest","workFromHomeRequestRejected","approveWorkFromHomeRequest","workFromHomeRequestApproved","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { WorkHomeRequestStatus, WorkHomeRequestStatusLabel } from 'app/models/human-resources/work-from-home';\r\nimport { Groups } from 'app/models/shared';\r\nimport swal from 'sweetalert2';\r\nimport { EditWorkFromHomeRequestComponent } from '../edit-work-from-home-request/edit-work-from-home-request.component';\r\nlet WorkFromHomeRequestTableComponent = class WorkFromHomeRequestTableComponent {\r\n    constructor(notificationService, dialog, searchFilterService, workFromHomeService, mailService, dateTimeService) {\r\n        this.notificationService = notificationService;\r\n        this.dialog = dialog;\r\n        this.searchFilterService = searchFilterService;\r\n        this.workFromHomeService = workFromHomeService;\r\n        this.mailService = mailService;\r\n        this.dateTimeService = dateTimeService;\r\n        this.displayedColumns = ['userNumber', 'userFullName', 'activityName', 'startDate', 'endDate', 'dayNumber',\r\n            'halfDay', 'state', 'buttons'];\r\n        this.dataSource = new MatTableDataSource();\r\n        this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        this.forbiddenRejectValidate = true;\r\n        this.listView = false;\r\n    }\r\n    ngOnInit() {\r\n        this.forbiddenRejectValidate = this.currentUser.groupId !== Groups.SuperAdmin && !this.currentUser.hasSubordinates;\r\n        if (this.workFromHomeRequests.length !== 0) {\r\n            this.listView = true;\r\n        }\r\n        this.selectedWorkHomeRequestId = 0;\r\n        this.dataSource = new MatTableDataSource(this.workFromHomeRequests);\r\n        this.subscription = this.searchFilterService.resultChanged\r\n            .subscribe(() => {\r\n            this.dataSource = new MatTableDataSource(this.searchFilterService.showingDataLastFilter);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n    onSortData(sort) {\r\n        this.workFromHomeService.sortWorkFromHomeRequest.next(sort);\r\n    }\r\n    isMyWorkFromHomeRequestApprovedAndRejected(workFromHomeRequest) {\r\n        return workFromHomeRequest.userId === this.currentUser.userId &&\r\n            (workFromHomeRequest.state === WorkHomeRequestStatus.Approved || workFromHomeRequest.state === WorkHomeRequestStatus.Rejected);\r\n    }\r\n    isApproved(workFromHomeRequest) {\r\n        return workFromHomeRequest.state === WorkHomeRequestStatus.Approved;\r\n    }\r\n    isRejected(workFromHomeRequest) {\r\n        return workFromHomeRequest.state === WorkHomeRequestStatus.Rejected;\r\n    }\r\n    isInProgress(workFromHomeRequest) {\r\n        return workFromHomeRequest.state === WorkHomeRequestStatus.InProgress;\r\n    }\r\n    isMyWorkFromHomeRequestInProgress(workFromHomeRequest) {\r\n        return workFromHomeRequest.userId === this.currentUser.userId &&\r\n            (workFromHomeRequest.state === WorkHomeRequestStatus.InProgress);\r\n    }\r\n    getworkFromHomeLabel(state) {\r\n        switch (state) {\r\n            case WorkHomeRequestStatus.InProgress:\r\n                return WorkHomeRequestStatusLabel.InProgress;\r\n            case WorkHomeRequestStatus.Approved:\r\n                return WorkHomeRequestStatusLabel.Approved;\r\n            case WorkHomeRequestStatus.Rejected:\r\n                return WorkHomeRequestStatusLabel.Rejected;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    openEditRequestDialog(workFromHomeRequest) {\r\n        const config = {\r\n            disableClose: false,\r\n            hasBackdrop: true,\r\n            width: '500px',\r\n            height: '350px',\r\n            data: {\r\n                workFromHomeRequestId: workFromHomeRequest.workHomeRequestId,\r\n                isEdit: true,\r\n            }\r\n        };\r\n        this.displayAddRequestComponentdialogRef = this.dialog.open(EditWorkFromHomeRequestComponent, config);\r\n    }\r\n    deleteWorkFromHomeRequest(workFromHomeRequest) {\r\n        swal.fire({\r\n            text: `Are you sure to delete this Work From Home ${this.getworkFromHomeLabel(workFromHomeRequest.state)} Request for ${workFromHomeRequest.userFullName} from ${this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)} to ${this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)} ?`,\r\n            icon: 'error',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: () => {\r\n                this.workFromHomeService.deleteWorkFromHomeRequest(workFromHomeRequest.workHomeRequestId, this.currentUser.userId)\r\n                    .subscribe(data => {\r\n                    if (data !== 0) {\r\n                        this.notificationService.success('This Work From Home Request is deleted');\r\n                        this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                        if (workFromHomeRequest.state === WorkHomeRequestStatus.Approved) {\r\n                            this.mailService.workFromHomeRequestDeleted(workFromHomeRequest);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                        this.notificationService.danger('Delete Work From Home Request failed');\r\n                    }\r\n                }, () => {\r\n                    this.notificationService.danger('Delete Work From Home Request failed');\r\n                    this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                });\r\n            }\r\n        });\r\n    }\r\n    rejectWorkFromHomeRequest(workFromHomeRequest) {\r\n        swal.fire({\r\n            text: `Are you sure to reject this Work From Home ${this.getworkFromHomeLabel(workFromHomeRequest.state)} Request for ${workFromHomeRequest.userFullName} from ${this.dateTimeService.getShortFormat(workFromHomeRequest.startDate)} to ${this.dateTimeService.getShortFormat(workFromHomeRequest.endDate)} ?`,\r\n            icon: 'error',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, reject it!',\r\n            cancelButtonText: 'No',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: () => {\r\n                this.workFromHomeService.updateStatusWorkFromHomeRequest(workFromHomeRequest, WorkHomeRequestStatus.Rejected)\r\n                    .subscribe(data => {\r\n                    if (data !== 0) {\r\n                        this.notificationService.success('This Work From Home Request is rejected');\r\n                        this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                        this.mailService.workFromHomeRequestRejected(workFromHomeRequest);\r\n                    }\r\n                    else {\r\n                        this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                        this.notificationService.danger('Reject Work From Home Request failed');\r\n                        this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                    }\r\n                }, () => {\r\n                    this.notificationService.danger('Reject Work From Home Request failed');\r\n                    this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                });\r\n            }\r\n        });\r\n    }\r\n    approveWorkFromHomeRequest(workFromHomeRequest) {\r\n        this.workFromHomeService.updateStatusWorkFromHomeRequest(workFromHomeRequest, WorkHomeRequestStatus.Approved)\r\n            .subscribe(data => {\r\n            if (data !== 0) {\r\n                this.notificationService.success('This Work From Home Request is approved');\r\n                this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                this.mailService.workFromHomeRequestApproved(workFromHomeRequest);\r\n            }\r\n            else {\r\n                this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n                this.notificationService.danger('Approve Work From Home Request failed');\r\n                this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n            }\r\n        }, () => {\r\n            this.notificationService.danger('Approve Work From Home Request failed');\r\n            this.workFromHomeService.refreshWorkFomHomeRequest.next();\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    Input()\r\n], WorkFromHomeRequestTableComponent.prototype, \"workFromHomeRequests\", void 0);\r\nWorkFromHomeRequestTableComponent = __decorate([\r\n    Component({\r\n        selector: 'app-work-from-home-request-table',\r\n        templateUrl: './work-from-home-request-table.component.html',\r\n        styleUrls: ['./work-from-home-request-table.component.scss']\r\n    })\r\n], WorkFromHomeRequestTableComponent);\r\nexport { WorkFromHomeRequestTableComponent };\r\n"]},"metadata":{},"sourceType":"module"}
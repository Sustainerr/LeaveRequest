{"ast":null,"code":"import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatProgressBar.\n\n/** @docs-private */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nconst _c0 = [\"primaryValueBar\"];\n\nconst _MatProgressBarBase = /*#__PURE__*/mixinColor(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\n\n\nconst MAT_PROGRESS_BAR_LOCATION = /*#__PURE__*/new InjectionToken('mat-progress-bar-location', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_BAR_LOCATION_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n  const _document = inject(DOCUMENT);\n\n  const _location = _document ? _document.location : null;\n\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? _location.pathname + _location.search : ''\n  };\n}\n/** Counter used to generate unique IDs for progress bars. */\n\n\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\n\nlet MatProgressBar = /*#__PURE__*/(() => {\n  class MatProgressBar extends _MatProgressBarBase {\n    constructor(elementRef, _ngZone, _animationMode,\n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n      super(elementRef);\n      this._ngZone = _ngZone;\n      this._animationMode = _animationMode;\n      /** Flag that indicates whether NoopAnimations mode is set to true. */\n\n      this._isNoopAnimation = false;\n      this._value = 0;\n      this._bufferValue = 0;\n      /**\n       * Event emitted when animation of the primary progress bar completes. This event will not\n       * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n       * animations (indeterminate and query).\n       */\n\n      this.animationEnd = new EventEmitter();\n      /** Reference to animation end subscription to be unsubscribed on destroy. */\n\n      this._animationEndSubscription = Subscription.EMPTY;\n      /**\n       * Mode of the progress bar.\n       *\n       * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n       * 'determinate'.\n       * Mirrored to mode attribute.\n       */\n\n      this.mode = 'determinate';\n      /** ID of the progress bar. */\n\n      this.progressbarId = `mat-progress-bar-${progressbarId++}`; // We need to prefix the SVG reference with the current path, otherwise they won't work\n      // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n      // because named route URLs can contain parentheses (see #12338). Also we don't use since\n      // we can't tell the difference between whether\n      // the consumer is using the hash location strategy or not, because `Location` normalizes\n      // both `/#/foo/bar` and `/foo/bar` to the same thing.\n\n      const path = location ? location.getPathname().split('#')[0] : '';\n      this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n      this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n\n\n    get value() {\n      return this._value;\n    }\n\n    set value(v) {\n      this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /** Buffer value of the progress bar. Defaults to zero. */\n\n\n    get bufferValue() {\n      return this._bufferValue;\n    }\n\n    set bufferValue(v) {\n      this._bufferValue = clamp(v || 0);\n    }\n    /** Gets the current transform value for the progress bar's primary indicator. */\n\n\n    _primaryTransform() {\n      // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n      const scale = this.value / 100;\n      return {\n        transform: `scale3d(${scale}, 1, 1)`\n      };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     */\n\n\n    _bufferTransform() {\n      if (this.mode === 'buffer') {\n        // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n        const scale = this.bufferValue / 100;\n        return {\n          transform: `scale3d(${scale}, 1, 1)`\n        };\n      }\n\n      return null;\n    }\n\n    ngAfterViewInit() {\n      // Run outside angular so change detection didn't get triggered on every transition end\n      // instead only on the animation that we care about (primary value bar's transitionend)\n      this._ngZone.runOutsideAngular(() => {\n        const element = this._primaryValueBar.nativeElement;\n        this._animationEndSubscription = fromEvent(element, 'transitionend').pipe(filter(e => e.target === element)).subscribe(() => {\n          if (this.mode === 'determinate' || this.mode === 'buffer') {\n            this._ngZone.run(() => this.animationEnd.next({\n              value: this.value\n            }));\n          }\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      this._animationEndSubscription.unsubscribe();\n    }\n\n  }\n\n  MatProgressBar.ɵfac = function MatProgressBar_Factory(t) {\n    return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8));\n  };\n\n  MatProgressBar.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatProgressBar,\n    selectors: [[\"mat-progress-bar\"]],\n    viewQuery: function MatProgressBar_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"tabindex\", \"-1\", 1, \"mat-progress-bar\"],\n    hostVars: 4,\n    hostBindings: function MatProgressBar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n      }\n    },\n    inputs: {\n      color: \"color\",\n      mode: \"mode\",\n      value: \"value\",\n      bufferValue: \"bufferValue\"\n    },\n    outputs: {\n      animationEnd: \"animationEnd\"\n    },\n    exportAs: [\"matProgressBar\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 10,\n    vars: 4,\n    consts: [[\"aria-hidden\", \"true\"], [\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]],\n    template: function MatProgressBar_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(1, \"svg\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"defs\");\n        ɵngcc0.ɵɵelementStart(3, \"pattern\", 2);\n        ɵngcc0.ɵɵelement(4, \"circle\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"rect\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(9, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n      }\n    },\n    directives: [ɵngcc1.NgStyle],\n    styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatProgressBar;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Clamps a value to be between two numbers, by default 0 and 100. */\n\n\nfunction clamp(v, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet MatProgressBarModule = /*#__PURE__*/(() => {\n  class MatProgressBarModule {}\n\n  MatProgressBarModule.ɵfac = function MatProgressBarModule_Factory(t) {\n    return new (t || MatProgressBarModule)();\n  };\n\n  MatProgressBarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatProgressBarModule\n  });\n  MatProgressBarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatCommonModule], MatCommonModule]\n  });\n  return MatProgressBarModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, {\n    declarations: function () {\n      return [MatProgressBar];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function () {\n      return [MatProgressBar, MatCommonModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js"],"names":["InjectionToken","inject","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","NgZone","Optional","Inject","Input","ViewChild","Output","NgModule","DOCUMENT","CommonModule","mixinColor","MatCommonModule","coerceNumberProperty","ANIMATION_MODULE_TYPE","Subscription","fromEvent","filter","ɵngcc0","ɵngcc1","_c0","_MatProgressBarBase","constructor","_elementRef","MAT_PROGRESS_BAR_LOCATION","providedIn","factory","MAT_PROGRESS_BAR_LOCATION_FACTORY","_document","_location","location","getPathname","pathname","search","progressbarId","MatProgressBar","elementRef","_ngZone","_animationMode","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","EMPTY","mode","path","split","_rectangleFillValue","value","v","clamp","bufferValue","_primaryTransform","scale","transform","_bufferTransform","ngAfterViewInit","runOutsideAngular","element","_primaryValueBar","nativeElement","pipe","e","target","subscribe","run","next","ngOnDestroy","unsubscribe","ɵfac","MatProgressBar_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatProgressBar_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatProgressBar_HostBindings","ɵɵattribute","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatProgressBar_Template","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵadvance","ɵɵproperty","directives","NgStyle","styles","encapsulation","changeDetection","ngDevMode","min","max","Math","MatProgressBarModule","MatProgressBarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatProgressBar.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nconst _MatProgressBarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/** @docs-private */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** Counter used to generate unique IDs for progress bars. */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarBase {\n    constructor(elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /** Flag that indicates whether NoopAnimations mode is set to true. */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /** Reference to animation end subscription to be unsubscribed on destroy. */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /** ID of the progress bar. */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() { return this._value; }\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /** Buffer value of the progress bar. Defaults to zero. */\n    get bufferValue() { return this._bufferValue; }\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    _primaryTransform() {\n        // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n        const scale = this.value / 100;\n        return { transform: `scale3d(${scale}, 1, 1)` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n            const scale = this.bufferValue / 100;\n            return { transform: `scale3d(${scale}, 1, 1)` };\n        }\n        return null;\n    }\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular((() => {\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                fromEvent(element, 'transitionend')\n                    .pipe(filter(((e) => e.target === element)))\n                    .subscribe(() => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run(() => this.animationEnd.next({ value: this.value }));\n                    }\n                });\n        }));\n    }\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"tabindex\", \"-1\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 4, consts: [[\"aria-hidden\", \"true\"], [\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(1, \"svg\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"defs\");\n        ɵngcc0.ɵɵelementStart(3, \"pattern\", 2);\n        ɵngcc0.ɵɵelement(4, \"circle\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"rect\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(9, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    // set tab index to -1 so screen readers will read the aria-label\n                    // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                    'tabindex': '-1',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div aria-hidden=\\\"true\\\">\\n  <svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n    <defs>\\n      <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n        <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n      </pattern>\\n    </defs>\\n    <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n  </svg>\\n  <!--\\n    The background div is named as such because it appears below the other divs and is not sized based\\n    on values.\\n  -->\\n  <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n  <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n  <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵfac = function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); };\nMatProgressBarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"../services/data.service\";\nimport * as i5 from \"@angular/common\";\n\nfunction AddEmpSomeoneComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r1.type_Conge_Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r1.type);\n  }\n}\n\nexport let AddEmpSomeoneComponent = /*#__PURE__*/(() => {\n  class AddEmpSomeoneComponent {\n    constructor(fb, http, authService, dataService) {\n      this.fb = fb;\n      this.http = http;\n      this.authService = authService;\n      this.dataService = dataService;\n      this.typeCongeUrl = 'https://localhost:7216/api/TypeConges/byRole';\n      this.congesUrl = 'https://localhost:7216/api/conges';\n      this.userRole = '';\n      this.leaveTypes = [];\n      console.log('AddEmpSomeoneComponent instantiated');\n      this.leaveForm = this.fb.group({\n        dateDebut: ['', Validators.required],\n        dateFin: ['', Validators.required],\n        type: ['', Validators.required],\n        matricule: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      console.log('ngOnInit called');\n      const token = this.authService.getToken();\n      console.log('Token:', token);\n\n      if (token) {\n        const parsedToken = this.parseToken(token);\n        console.log('Parsed Token:', parsedToken);\n        const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\n        console.log('User ID:', userId);\n\n        if (userId) {\n          this.authService.getUserById(userId).subscribe(data => {\n            console.log('User data:', data);\n            this.userRole = data.role;\n            this.userGroupId = data.groupe_Id; // Assuming the API response contains groupe_Id\n\n            console.log('User Role:', this.userRole);\n            console.log('User Group ID:', this.userGroupId);\n            this.getLeaveTypesForRoles(this.userRole);\n          }, error => {\n            console.error('Error fetching user data:', error);\n          });\n        } else {\n          console.error('userId is undefined.');\n        }\n      } else {\n        console.error('Token is not available.');\n      }\n    }\n\n    parseToken(token) {\n      try {\n        const payload = atob(token.split('.')[1]);\n        return JSON.parse(payload);\n      } catch (error) {\n        console.error('Error parsing token:', error);\n        return null;\n      }\n    }\n\n    getLeaveTypesForRoles(role) {\n      this.getLeaveTypesByRole('utilisateur').pipe(switchMap(utilisateurTypes => {\n        this.leaveTypes = utilisateurTypes;\n\n        if (role === 'Chef') {\n          return this.getLeaveTypesByRole('Chef');\n        } else if (role === 'Admin') {\n          return this.getLeaveTypesByRole('chef').pipe(switchMap(chefTypes => {\n            this.leaveTypes = this.leaveTypes.concat(chefTypes);\n            return this.getLeaveTypesByRole('Admin');\n          }));\n        } else {\n          return of([]); // No additional types to fetch\n        }\n      }), catchError(error => {\n        console.error('Error fetching leave types:', error);\n        return of([]); // Return an empty array on error\n      })).subscribe(additionalTypes => {\n        if (role === 'Chef' || role === 'Admin') {\n          this.leaveTypes = this.leaveTypes.concat(additionalTypes);\n        }\n\n        console.log('Combined leave types:', this.leaveTypes);\n      });\n    }\n\n    getLeaveTypesByRole(role) {\n      const url = `${this.typeCongeUrl}/${role}`;\n      console.log(`Fetching leave types for role: ${role} from URL: ${url}`);\n      return this.http.get(url).pipe(catchError(error => {\n        console.error(`Error fetching leave types for role ${role}:`, error);\n        return of([]);\n      }));\n    }\n\n    onSubmit() {\n      if (this.leaveForm.valid) {\n        const token = this.authService.getToken();\n\n        if (token) {\n          const parsedToken = this.parseToken(token);\n          const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\n          const leaveRequest = {\n            date_Debut: this.leaveForm.value.dateDebut,\n            date_Fin: this.leaveForm.value.dateFin,\n            statut: 'Approved',\n            type_Conge_Id: this.leaveForm.value.type,\n            matricule: this.leaveForm.value.matricule // Use the matricule from the form\n\n          };\n\n          if (this.userRole === 'Admin') {\n            this.submitLeaveRequest(leaveRequest);\n          } else if (this.userRole === 'Chef') {\n            if (this.userGroupId !== undefined) {\n              this.dataService.getUserByMatricule(this.leaveForm.value.matricule).subscribe(data => {\n                if (data.groupe_Id === this.userGroupId) {\n                  this.submitLeaveRequest(leaveRequest);\n                } else {\n                  console.error('Error: The selected user is not in the same group.'); // Display error message to the user\n                }\n              }, error => {\n                console.error('Error fetching user data by matricule:', error);\n              });\n            } else {\n              console.error('Error: Group ID is undefined.'); // Display error message to the user\n            }\n          }\n        } else {\n          console.error('Token is not available.');\n        }\n      } else {\n        console.error('Form is invalid.');\n      }\n    }\n\n    submitLeaveRequest(leaveRequest) {\n      console.log('Submitting leave request:', leaveRequest);\n      this.http.post(this.congesUrl, leaveRequest).subscribe(response => {\n        console.log('Leave request submitted successfully:', response); // Optionally: Show success message to the user\n      }, error => {\n        console.error('Error submitting leave request:', error); // Optionally: Display error message to the user\n      });\n    }\n\n  }\n\n  AddEmpSomeoneComponent.ɵfac = function AddEmpSomeoneComponent_Factory(t) {\n    return new (t || AddEmpSomeoneComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.DataService));\n  };\n\n  AddEmpSomeoneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEmpSomeoneComponent,\n    selectors: [[\"app-add-emp-someone\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"date-inputs\"], [1, \"form-group\"], [\"for\", \"dateDebut\"], [\"type\", \"date\", \"id\", \"dateDebut\", \"formControlName\", \"dateDebut\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateFin\"], [\"type\", \"date\", \"id\", \"dateFin\", \"formControlName\", \"dateFin\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"matricule\"], [\"type\", \"text\", \"id\", \"matricule\", \"formControlName\", \"matricule\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"type-input\"], [\"for\", \"type\"], [\"id\", \"type\", \"formControlName\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"]],\n    template: function AddEmpSomeoneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEmpSomeoneComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Date Debut:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Date Fin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵelementStart(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Matricule:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"label\", 11);\n        i0.ɵɵtext(17, \"Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"select\", 12);\n        i0.ɵɵelementStart(19, \"option\", 13);\n        i0.ɵɵtext(20, \"Select Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, AddEmpSomeoneComponent_option_21_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 15);\n        i0.ɵɵtext(23, \"Add Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.leaveForm);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngForOf\", ctx.leaveTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.leaveForm.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i5.NgForOf],\n    styles: [\".form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;padding:35px}.date-inputs[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;max-width:500px;margin-bottom:20px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{flex:1;margin-right:10px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]:last-child{margin-right:0}.type-input[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%;max-width:500px;margin-bottom:20px}button[_ngcontent-%COMP%]{display:block;margin:0 auto}\"]\n  });\n  return AddEmpSomeoneComponent;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/add-emp-someone/add-emp-someone.component.ts"],"names":["Validators","of","catchError","switchMap","i0","i1","i2","i3","i4","i5","AddEmpSomeoneComponent_option_21_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","type_r1","$implicit","ɵɵproperty","type_Conge_Id","ɵɵadvance","ɵɵtextInterpolate","type","AddEmpSomeoneComponent","constructor","fb","http","authService","dataService","typeCongeUrl","congesUrl","userRole","leaveTypes","console","log","leaveForm","group","dateDebut","required","dateFin","matricule","ngOnInit","token","getToken","parsedToken","parseToken","userId","nameid","getUserById","subscribe","data","role","userGroupId","groupe_Id","getLeaveTypesForRoles","error","payload","atob","split","JSON","parse","getLeaveTypesByRole","pipe","utilisateurTypes","chefTypes","concat","additionalTypes","url","get","onSubmit","valid","leaveRequest","date_Debut","value","date_Fin","statut","submitLeaveRequest","undefined","getUserByMatricule","post","response","ɵfac","AddEmpSomeoneComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","HttpClient","AuthService","DataService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","AddEmpSomeoneComponent_Template","ɵɵlistener","AddEmpSomeoneComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","invalid","directives","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","RequiredValidator","SelectControlValueAccessor","NgSelectOption","ɵNgSelectMultipleOption","NgForOf","styles"],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nimport * as i2 from \"@angular/common/http\";\r\nimport * as i3 from \"../auth.service\";\r\nimport * as i4 from \"../services/data.service\";\r\nimport * as i5 from \"@angular/common\";\r\nfunction AddEmpSomeoneComponent_option_21_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"option\", 16);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const type_r1 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", type_r1.type_Conge_Id);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(type_r1.type);\r\n} }\r\nexport class AddEmpSomeoneComponent {\r\n    constructor(fb, http, authService, dataService) {\r\n        this.fb = fb;\r\n        this.http = http;\r\n        this.authService = authService;\r\n        this.dataService = dataService;\r\n        this.typeCongeUrl = 'https://localhost:7216/api/TypeConges/byRole';\r\n        this.congesUrl = 'https://localhost:7216/api/conges';\r\n        this.userRole = '';\r\n        this.leaveTypes = [];\r\n        console.log('AddEmpSomeoneComponent instantiated');\r\n        this.leaveForm = this.fb.group({\r\n            dateDebut: ['', Validators.required],\r\n            dateFin: ['', Validators.required],\r\n            type: ['', Validators.required],\r\n            matricule: ['', Validators.required]\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        console.log('ngOnInit called');\r\n        const token = this.authService.getToken();\r\n        console.log('Token:', token);\r\n        if (token) {\r\n            const parsedToken = this.parseToken(token);\r\n            console.log('Parsed Token:', parsedToken);\r\n            const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\r\n            console.log('User ID:', userId);\r\n            if (userId) {\r\n                this.authService.getUserById(userId).subscribe((data) => {\r\n                    console.log('User data:', data);\r\n                    this.userRole = data.role;\r\n                    this.userGroupId = data.groupe_Id; // Assuming the API response contains groupe_Id\r\n                    console.log('User Role:', this.userRole);\r\n                    console.log('User Group ID:', this.userGroupId);\r\n                    this.getLeaveTypesForRoles(this.userRole);\r\n                }, (error) => {\r\n                    console.error('Error fetching user data:', error);\r\n                });\r\n            }\r\n            else {\r\n                console.error('userId is undefined.');\r\n            }\r\n        }\r\n        else {\r\n            console.error('Token is not available.');\r\n        }\r\n    }\r\n    parseToken(token) {\r\n        try {\r\n            const payload = atob(token.split('.')[1]);\r\n            return JSON.parse(payload);\r\n        }\r\n        catch (error) {\r\n            console.error('Error parsing token:', error);\r\n            return null;\r\n        }\r\n    }\r\n    getLeaveTypesForRoles(role) {\r\n        this.getLeaveTypesByRole('utilisateur').pipe(switchMap((utilisateurTypes) => {\r\n            this.leaveTypes = utilisateurTypes;\r\n            if (role === 'Chef') {\r\n                return this.getLeaveTypesByRole('Chef');\r\n            }\r\n            else if (role === 'Admin') {\r\n                return this.getLeaveTypesByRole('chef').pipe(switchMap((chefTypes) => {\r\n                    this.leaveTypes = this.leaveTypes.concat(chefTypes);\r\n                    return this.getLeaveTypesByRole('Admin');\r\n                }));\r\n            }\r\n            else {\r\n                return of([]); // No additional types to fetch\r\n            }\r\n        }), catchError((error) => {\r\n            console.error('Error fetching leave types:', error);\r\n            return of([]); // Return an empty array on error\r\n        })).subscribe((additionalTypes) => {\r\n            if (role === 'Chef' || role === 'Admin') {\r\n                this.leaveTypes = this.leaveTypes.concat(additionalTypes);\r\n            }\r\n            console.log('Combined leave types:', this.leaveTypes);\r\n        });\r\n    }\r\n    getLeaveTypesByRole(role) {\r\n        const url = `${this.typeCongeUrl}/${role}`;\r\n        console.log(`Fetching leave types for role: ${role} from URL: ${url}`);\r\n        return this.http.get(url).pipe(catchError((error) => {\r\n            console.error(`Error fetching leave types for role ${role}:`, error);\r\n            return of([]);\r\n        }));\r\n    }\r\n    onSubmit() {\r\n        if (this.leaveForm.valid) {\r\n            const token = this.authService.getToken();\r\n            if (token) {\r\n                const parsedToken = this.parseToken(token);\r\n                const userId = parsedToken === null || parsedToken === void 0 ? void 0 : parsedToken.nameid;\r\n                const leaveRequest = {\r\n                    date_Debut: this.leaveForm.value.dateDebut,\r\n                    date_Fin: this.leaveForm.value.dateFin,\r\n                    statut: 'Approved',\r\n                    type_Conge_Id: this.leaveForm.value.type,\r\n                    matricule: this.leaveForm.value.matricule // Use the matricule from the form\r\n                };\r\n                if (this.userRole === 'Admin') {\r\n                    this.submitLeaveRequest(leaveRequest);\r\n                }\r\n                else if (this.userRole === 'Chef') {\r\n                    if (this.userGroupId !== undefined) {\r\n                        this.dataService.getUserByMatricule(this.leaveForm.value.matricule).subscribe((data) => {\r\n                            if (data.groupe_Id === this.userGroupId) {\r\n                                this.submitLeaveRequest(leaveRequest);\r\n                            }\r\n                            else {\r\n                                console.error('Error: The selected user is not in the same group.');\r\n                                // Display error message to the user\r\n                            }\r\n                        }, (error) => {\r\n                            console.error('Error fetching user data by matricule:', error);\r\n                        });\r\n                    }\r\n                    else {\r\n                        console.error('Error: Group ID is undefined.');\r\n                        // Display error message to the user\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                console.error('Token is not available.');\r\n            }\r\n        }\r\n        else {\r\n            console.error('Form is invalid.');\r\n        }\r\n    }\r\n    submitLeaveRequest(leaveRequest) {\r\n        console.log('Submitting leave request:', leaveRequest);\r\n        this.http.post(this.congesUrl, leaveRequest).subscribe((response) => {\r\n            console.log('Leave request submitted successfully:', response);\r\n            // Optionally: Show success message to the user\r\n        }, (error) => {\r\n            console.error('Error submitting leave request:', error);\r\n            // Optionally: Display error message to the user\r\n        });\r\n    }\r\n}\r\nAddEmpSomeoneComponent.ɵfac = function AddEmpSomeoneComponent_Factory(t) { return new (t || AddEmpSomeoneComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.DataService)); };\r\nAddEmpSomeoneComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddEmpSomeoneComponent, selectors: [[\"app-add-emp-someone\"]], decls: 24, vars: 3, consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"date-inputs\"], [1, \"form-group\"], [\"for\", \"dateDebut\"], [\"type\", \"date\", \"id\", \"dateDebut\", \"formControlName\", \"dateDebut\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateFin\"], [\"type\", \"date\", \"id\", \"dateFin\", \"formControlName\", \"dateFin\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"matricule\"], [\"type\", \"text\", \"id\", \"matricule\", \"formControlName\", \"matricule\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"type-input\"], [\"for\", \"type\"], [\"id\", \"type\", \"formControlName\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"]], template: function AddEmpSomeoneComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵelementStart(1, \"form\", 1);\r\n        i0.ɵɵlistener(\"ngSubmit\", function AddEmpSomeoneComponent_Template_form_ngSubmit_1_listener() { return ctx.onSubmit(); });\r\n        i0.ɵɵelementStart(2, \"div\", 2);\r\n        i0.ɵɵelementStart(3, \"div\", 3);\r\n        i0.ɵɵelementStart(4, \"label\", 4);\r\n        i0.ɵɵtext(5, \"Date Debut:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(6, \"input\", 5);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(7, \"div\", 3);\r\n        i0.ɵɵelementStart(8, \"label\", 6);\r\n        i0.ɵɵtext(9, \"Date Fin:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(10, \"input\", 7);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(11, \"div\", 3);\r\n        i0.ɵɵelementStart(12, \"label\", 8);\r\n        i0.ɵɵtext(13, \"Matricule:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(14, \"input\", 9);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(15, \"div\", 10);\r\n        i0.ɵɵelementStart(16, \"label\", 11);\r\n        i0.ɵɵtext(17, \"Type:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(18, \"select\", 12);\r\n        i0.ɵɵelementStart(19, \"option\", 13);\r\n        i0.ɵɵtext(20, \"Select Type\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(21, AddEmpSomeoneComponent_option_21_Template, 2, 2, \"option\", 14);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(22, \"button\", 15);\r\n        i0.ɵɵtext(23, \"Add Employee\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"formGroup\", ctx.leaveForm);\r\n        i0.ɵɵadvance(20);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.leaveTypes);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"disabled\", ctx.leaveForm.invalid);\r\n    } }, directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i5.NgForOf], styles: [\".form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;padding:35px}.date-inputs[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;max-width:500px;margin-bottom:20px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{flex:1;margin-right:10px}.date-inputs[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]:last-child{margin-right:0}.type-input[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%;max-width:500px;margin-bottom:20px}button[_ngcontent-%COMP%]{display:block;margin:0 auto}\"] });\r\n"]},"metadata":{},"sourceType":"module"}
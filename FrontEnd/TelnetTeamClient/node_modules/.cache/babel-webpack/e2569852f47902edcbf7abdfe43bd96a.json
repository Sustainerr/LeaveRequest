{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar forms_1 = require(\"@angular/forms\");\n\nvar captcha_service_1 = require(\"./captcha.service\");\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ɵngcc1 = require('./captcha.service');\n\nvar CorrectCaptchaDirective =\n/** @class */\nfunction () {\n  function CorrectCaptchaDirective(captchaService) {\n    this.captchaService = captchaService;\n  }\n\n  CorrectCaptchaDirective.prototype.validate = function (c, onBlur) {\n    var _this = this;\n\n    if (c) {\n      // cache the control for using on blur\n      this.control = c;\n    }\n\n    return new Promise(function (resolve) {\n      // the control should have incorrect status first\n      resolve({\n        incorrectCaptcha: true\n      }); // we only validate the captcha on blur\n\n      if (onBlur) {\n        var captchaCode = _this.captchaService.botdetectInstance.userInput.value;\n\n        if (captchaCode) {\n          _this.captchaService.validateUnsafe(captchaCode).subscribe(function (isHuman) {\n            if (!isHuman) {\n              // ui captcha validation failed\n              _this.captchaService.botdetectInstance.reloadImage();\n\n              _this.control = null;\n            } else {\n              // ui captcha validation passed\n              _this.control.setErrors(null);\n            }\n          }, function (error) {\n            throw new Error(error);\n          });\n        }\n      }\n    });\n  };\n\n  CorrectCaptchaDirective.prototype.onBlur = function () {\n    this.validate(undefined, true);\n  };\n  /** @nocollapse */\n\n\n  CorrectCaptchaDirective.ctorParameters = function () {\n    return [{\n      type: captcha_service_1.CaptchaService\n    }];\n  };\n\n  CorrectCaptchaDirective.propDecorators = {\n    'onBlur': [{\n      type: core_1.HostListener,\n      args: ['blur']\n    }]\n  };\n\n  CorrectCaptchaDirective.ɵfac = function CorrectCaptchaDirective_Factory(t) {\n    return new (t || CorrectCaptchaDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CaptchaService));\n  };\n\n  CorrectCaptchaDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: CorrectCaptchaDirective,\n    selectors: [[\"\", \"correctCaptcha\", \"\", \"formControlName\", \"\"], [\"\", \"correctCaptcha\", \"\", \"formControl\", \"\"], [\"\", \"correctCaptcha\", \"\", \"ngModel\", \"\"]],\n    hostBindings: function CorrectCaptchaDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function CorrectCaptchaDirective_blur_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: forms_1.NG_ASYNC_VALIDATORS,\n      useExisting: core_1.forwardRef(function () {\n        return CorrectCaptchaDirective;\n      }),\n      multi: true\n    }])]\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return CorrectCaptchaDirective;\n}();\n\nexports.CorrectCaptchaDirective = CorrectCaptchaDirective;","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/node_modules/angular-captcha/__ivy_ngcc__/src/correct-captcha.directive.js"],"names":["Object","defineProperty","exports","value","core_1","require","forms_1","captcha_service_1","ɵngcc0","ɵngcc1","CorrectCaptchaDirective","captchaService","prototype","validate","c","onBlur","_this","control","Promise","resolve","incorrectCaptcha","captchaCode","botdetectInstance","userInput","validateUnsafe","subscribe","isHuman","reloadImage","setErrors","error","Error","undefined","ctorParameters","type","CaptchaService","propDecorators","HostListener","args","ɵfac","CorrectCaptchaDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","hostBindings","CorrectCaptchaDirective_HostBindings","rf","ctx","ɵɵlistener","CorrectCaptchaDirective_blur_HostBindingHandler","features","ɵɵProvidersFeature","provide","NG_ASYNC_VALIDATORS","useExisting","forwardRef","multi","ngDevMode"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,mBAAD,CAA/B;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,eAAD,CAApB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAIK,uBAAuB;AAAG;AAAe,YAAY;AACrD,WAASA,uBAAT,CAAiCC,cAAjC,EAAiD;AAC7C,SAAKA,cAAL,GAAsBA,cAAtB;AACH;;AACDD,EAAAA,uBAAuB,CAACE,SAAxB,CAAkCC,QAAlC,GAA6C,UAAUC,CAAV,EAAaC,MAAb,EAAqB;AAC9D,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIF,CAAJ,EAAO;AACH;AACA,WAAKG,OAAL,GAAeH,CAAf;AACH;;AACD,WAAO,IAAII,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClC;AACAA,MAAAA,OAAO,CAAC;AAAEC,QAAAA,gBAAgB,EAAE;AAApB,OAAD,CAAP,CAFkC,CAGlC;;AACA,UAAIL,MAAJ,EAAY;AACR,YAAIM,WAAW,GAAGL,KAAK,CAACL,cAAN,CAAqBW,iBAArB,CAAuCC,SAAvC,CAAiDpB,KAAnE;;AACA,YAAIkB,WAAJ,EAAiB;AACbL,UAAAA,KAAK,CAACL,cAAN,CAAqBa,cAArB,CAAoCH,WAApC,EACKI,SADL,CACe,UAAUC,OAAV,EAAmB;AAC9B,gBAAI,CAACA,OAAL,EAAc;AACV;AACAV,cAAAA,KAAK,CAACL,cAAN,CAAqBW,iBAArB,CAAuCK,WAAvC;;AACAX,cAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACH,aAJD,MAKK;AACD;AACAD,cAAAA,KAAK,CAACC,OAAN,CAAcW,SAAd,CAAwB,IAAxB;AACH;AACJ,WAXD,EAWG,UAAUC,KAAV,EAAiB;AAChB,kBAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,WAbD;AAcH;AACJ;AACJ,KAvBM,CAAP;AAwBH,GA9BD;;AA+BAnB,EAAAA,uBAAuB,CAACE,SAAxB,CAAkCG,MAAlC,GAA2C,YAAY;AACnD,SAAKF,QAAL,CAAckB,SAAd,EAAyB,IAAzB;AACH,GAFD;AAGA;;;AACArB,EAAAA,uBAAuB,CAACsB,cAAxB,GAAyC,YAAY;AAAE,WAAO,CAC1D;AAAEC,MAAAA,IAAI,EAAE1B,iBAAiB,CAAC2B;AAA1B,KAD0D,CAAP;AAEnD,GAFJ;;AAGAxB,EAAAA,uBAAuB,CAACyB,cAAxB,GAAyC;AACrC,cAAU,CAAC;AAAEF,MAAAA,IAAI,EAAE7B,MAAM,CAACgC,YAAf;AAA6BC,MAAAA,IAAI,EAAE,CAAC,MAAD;AAAnC,KAAD;AAD2B,GAAzC;;AAGJ3B,EAAAA,uBAAuB,CAAC4B,IAAxB,GAA+B,SAASC,+BAAT,CAAyCC,CAAzC,EAA4C;AAAE,WAAO,KAAKA,CAAC,IAAI9B,uBAAV,EAAmCF,MAAM,CAACiC,iBAAP,CAAyBhC,MAAM,CAACyB,cAAhC,CAAnC,CAAP;AAA6F,GAA1K;;AACAxB,EAAAA,uBAAuB,CAACgC,IAAxB,GAA+B,aAAclC,MAAM,CAACmC,iBAAP,CAAyB;AAAEV,IAAAA,IAAI,EAAEvB,uBAAR;AAAiCkC,IAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,EAA2B,iBAA3B,EAA8C,EAA9C,CAAD,EAAoD,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,EAA2B,aAA3B,EAA0C,EAA1C,CAApD,EAAmG,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,EAA2B,SAA3B,EAAsC,EAAtC,CAAnG,CAA5C;AAA2LC,IAAAA,YAAY,EAAE,SAASC,oCAAT,CAA8CC,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5UvC,QAAAA,MAAM,CAACyC,UAAP,CAAkB,MAAlB,EAA0B,SAASC,+CAAT,GAA2D;AAAE,iBAAOF,GAAG,CAACjC,MAAJ,EAAP;AAAsB,SAA7G;AACH;AAAE,KAF+D;AAE7DoC,IAAAA,QAAQ,EAAE,CAAC3C,MAAM,CAAC4C,kBAAP,CAA0B,CAClC;AACIC,MAAAA,OAAO,EAAE/C,OAAO,CAACgD,mBADrB;AAEIC,MAAAA,WAAW,EAAEnD,MAAM,CAACoD,UAAP,CAAkB,YAAY;AAAE,eAAO9C,uBAAP;AAAiC,OAAjE,CAFjB;AAGI+C,MAAAA,KAAK,EAAE;AAHX,KADkC,CAA1B,CAAD;AAFmD,GAAzB,CAA7C;;AASA,GAAC,YAAY;AAAE,KAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAeC,GAfhB;;AAgBI,SAAOhD,uBAAP;AACH,CAxE4C,EAA7C;;AAyEAR,OAAO,CAACQ,uBAAR,GAAkCA,uBAAlC","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar captcha_service_1 = require(\"./captcha.service\");\r\nvar ɵngcc0 = require('@angular/core');\nvar ɵngcc1 = require('./captcha.service');\nvar CorrectCaptchaDirective = /** @class */ (function () {\r\n    function CorrectCaptchaDirective(captchaService) {\r\n        this.captchaService = captchaService;\r\n    }\r\n    CorrectCaptchaDirective.prototype.validate = function (c, onBlur) {\r\n        var _this = this;\r\n        if (c) {\r\n            // cache the control for using on blur\r\n            this.control = c;\r\n        }\r\n        return new Promise(function (resolve) {\r\n            // the control should have incorrect status first\r\n            resolve({ incorrectCaptcha: true });\r\n            // we only validate the captcha on blur\r\n            if (onBlur) {\r\n                var captchaCode = _this.captchaService.botdetectInstance.userInput.value;\r\n                if (captchaCode) {\r\n                    _this.captchaService.validateUnsafe(captchaCode)\r\n                        .subscribe(function (isHuman) {\r\n                        if (!isHuman) {\r\n                            // ui captcha validation failed\r\n                            _this.captchaService.botdetectInstance.reloadImage();\r\n                            _this.control = null;\r\n                        }\r\n                        else {\r\n                            // ui captcha validation passed\r\n                            _this.control.setErrors(null);\r\n                        }\r\n                    }, function (error) {\r\n                        throw new Error(error);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    CorrectCaptchaDirective.prototype.onBlur = function () {\r\n        this.validate(undefined, true);\r\n    };\r\n    /** @nocollapse */\r\n    CorrectCaptchaDirective.ctorParameters = function () { return [\r\n        { type: captcha_service_1.CaptchaService, },\r\n    ]; };\r\n    CorrectCaptchaDirective.propDecorators = {\r\n        'onBlur': [{ type: core_1.HostListener, args: ['blur',] },],\r\n    };\nCorrectCaptchaDirective.ɵfac = function CorrectCaptchaDirective_Factory(t) { return new (t || CorrectCaptchaDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CaptchaService)); };\nCorrectCaptchaDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CorrectCaptchaDirective, selectors: [[\"\", \"correctCaptcha\", \"\", \"formControlName\", \"\"], [\"\", \"correctCaptcha\", \"\", \"formControl\", \"\"], [\"\", \"correctCaptcha\", \"\", \"ngModel\", \"\"]], hostBindings: function CorrectCaptchaDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function CorrectCaptchaDirective_blur_HostBindingHandler() { return ctx.onBlur(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: forms_1.NG_ASYNC_VALIDATORS,\n                useExisting: core_1.forwardRef(function () { return CorrectCaptchaDirective; }),\n                multi: true\n            }\n        ])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CorrectCaptchaDirective, [{\n        type: core_1.Directive,\n        args: [{\n                selector: '[correctCaptcha][formControlName],[correctCaptcha][formControl],[correctCaptcha][ngModel]',\n                providers: [\n                    {\n                        provide: forms_1.NG_ASYNC_VALIDATORS,\n                        useExisting: core_1.forwardRef(function () { return CorrectCaptchaDirective; }),\n                        multi: true\n                    }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc1.CaptchaService }]; }, { onBlur: [{\n            type: core_1.HostListener,\n            args: ['blur']\n        }] }); })();\r\n    return CorrectCaptchaDirective;\r\n}());\r\nexports.CorrectCaptchaDirective = CorrectCaptchaDirective;\r\n\n"]},"metadata":{},"sourceType":"script"}
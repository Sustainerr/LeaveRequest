{"ast":null,"code":"import { OracleDbType, Direction, Body } from 'app/models/shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./generic.service\";\nimport * as i2 from \"./entity-parameter.service\";\nexport let CoreDataService = /*#__PURE__*/(() => {\n  class CoreDataService {\n    constructor(genericService, entityParameterService) {\n      this.genericService = genericService;\n      this.entityParameterService = entityParameterService;\n    }\n\n    getUser(userId) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'userId', userId, OracleDbType.Decimal, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetUser';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getSubordinates(managerUserId) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'managerUserId', managerUserId, OracleDbType.Decimal, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetSubordinates';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'result';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getReporters(userId) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'userId', userId, OracleDbType.Decimal, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetReporters';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getReportingsTo(userId) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'userId', userId, OracleDbType.Decimal, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetReportingsTo';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getReportersByPeriod(userId, periodFrom, periodTo) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'userId', userId, OracleDbType.Decimal, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'periodFrom', periodFrom, OracleDbType.Date, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'periodTo', periodTo, OracleDbType.Date, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetReportersByPeriod';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getUsers() {\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetUsers';\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getActiveUsers() {\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetActiveUsers';\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getActivitiesActiveUsers(activitiesId) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'activitiesId', activitiesId, OracleDbType.Varchar2, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetActivitiesActiveUsers';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getActivitiesUsersByPeriod(activitiesId, periodFrom, periodTo) {\n      const entityParameters = new Array();\n      this.entityParameterService.AddEntityParameter(entityParameters, 'activitiesId', activitiesId, OracleDbType.Varchar2, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'periodFrom', periodFrom, OracleDbType.Date, Direction.Input);\n      this.entityParameterService.AddEntityParameter(entityParameters, 'periodTo', periodTo, OracleDbType.Date, Direction.Input);\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetActivitiesUsersByPeriod';\n      body.entitiesParameters = new Array(entityParameters);\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n    getDepartments() {\n      const body = new Body();\n      body.storedProcedureName = 'GPTT.GetDepartments';\n      body.cursorName = 'curs';\n      return this.genericService.createService('/Data/Get', body);\n    }\n\n  }\n\n  CoreDataService.ɵfac = function CoreDataService_Factory(t) {\n    return new (t || CoreDataService)(i0.ɵɵinject(i1.GenericService), i0.ɵɵinject(i2.EntityParameterService));\n  };\n\n  CoreDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CoreDataService,\n    factory: CoreDataService.ɵfac\n  });\n  return CoreDataService;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/services/shared/core-data.service.ts"],"names":["OracleDbType","Direction","Body","i0","i1","i2","CoreDataService","constructor","genericService","entityParameterService","getUser","userId","entityParameters","Array","AddEntityParameter","Decimal","Input","body","storedProcedureName","entitiesParameters","cursorName","createService","getSubordinates","managerUserId","getReporters","getReportingsTo","getReportersByPeriod","periodFrom","periodTo","Date","getUsers","getActiveUsers","getActivitiesActiveUsers","activitiesId","Varchar2","getActivitiesUsersByPeriod","getDepartments","ɵfac","CoreDataService_Factory","t","ɵɵinject","GenericService","EntityParameterService","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"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","sourcesContent":["import { OracleDbType, Direction, Body } from 'app/models/shared';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./generic.service\";\r\nimport * as i2 from \"./entity-parameter.service\";\r\nexport class CoreDataService {\r\n    constructor(genericService, entityParameterService) {\r\n        this.genericService = genericService;\r\n        this.entityParameterService = entityParameterService;\r\n    }\r\n    getUser(userId) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'userId', userId, OracleDbType.Decimal, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetUser';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getSubordinates(managerUserId) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'managerUserId', managerUserId, OracleDbType.Decimal, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetSubordinates';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'result';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getReporters(userId) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'userId', userId, OracleDbType.Decimal, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetReporters';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getReportingsTo(userId) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'userId', userId, OracleDbType.Decimal, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetReportingsTo';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getReportersByPeriod(userId, periodFrom, periodTo) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'userId', userId, OracleDbType.Decimal, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'periodFrom', periodFrom, OracleDbType.Date, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'periodTo', periodTo, OracleDbType.Date, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetReportersByPeriod';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getUsers() {\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetUsers';\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getActiveUsers() {\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetActiveUsers';\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getActivitiesActiveUsers(activitiesId) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'activitiesId', activitiesId, OracleDbType.Varchar2, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetActivitiesActiveUsers';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getActivitiesUsersByPeriod(activitiesId, periodFrom, periodTo) {\r\n        const entityParameters = new Array();\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'activitiesId', activitiesId, OracleDbType.Varchar2, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'periodFrom', periodFrom, OracleDbType.Date, Direction.Input);\r\n        this.entityParameterService.AddEntityParameter(entityParameters, 'periodTo', periodTo, OracleDbType.Date, Direction.Input);\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetActivitiesUsersByPeriod';\r\n        body.entitiesParameters = new Array(entityParameters);\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n    getDepartments() {\r\n        const body = new Body();\r\n        body.storedProcedureName = 'GPTT.GetDepartments';\r\n        body.cursorName = 'curs';\r\n        return this.genericService\r\n            .createService('/Data/Get', body);\r\n    }\r\n}\r\nCoreDataService.ɵfac = function CoreDataService_Factory(t) { return new (t || CoreDataService)(i0.ɵɵinject(i1.GenericService), i0.ɵɵinject(i2.EntityParameterService)); };\r\nCoreDataService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CoreDataService, factory: CoreDataService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}
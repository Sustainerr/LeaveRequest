{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let FileService = /*#__PURE__*/(() => {\n  class FileService {\n    constructor() {// do nothing\n    }\n\n    FromFileToDbFormat(fileData) {\n      return atob(fileData);\n    }\n\n    FromDbToFileFormat(fileData, fileType) {\n      const byteCharacters = atob(fileData);\n      const byteNumbers = new Uint8Array(byteCharacters.length);\n\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n\n      return new Blob([byteNumbers], {\n        type: fileType\n      });\n    }\n\n  }\n\n  FileService.ɵfac = function FileService_Factory(t) {\n    return new (t || FileService)();\n  };\n\n  FileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FileService,\n    factory: FileService.ɵfac\n  });\n  return FileService;\n})();","map":{"version":3,"sources":["C:/Users/pprod/Desktop/satge PFE/satge PFE/TelnetTeamClient/src/app/services/shared/file.service.ts"],"names":["i0","FileService","constructor","FromFileToDbFormat","fileData","atob","FromDbToFileFormat","fileType","byteCharacters","byteNumbers","Uint8Array","length","i","charCodeAt","Blob","type","ɵfac","FileService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,WAAaC,WAAb;AAAO,QAAMA,WAAN,CAAkB;AACrBC,IAAAA,WAAW,GAAG,CACV;AACH;;AACDC,IAAAA,kBAAkB,CAACC,QAAD,EAAW;AACzB,aAAOC,IAAI,CAACD,QAAD,CAAX;AACH;;AACDE,IAAAA,kBAAkB,CAACF,QAAD,EAAWG,QAAX,EAAqB;AACnC,YAAMC,cAAc,GAAGH,IAAI,CAACD,QAAD,CAA3B;AACA,YAAMK,WAAW,GAAG,IAAIC,UAAJ,CAAeF,cAAc,CAACG,MAA9B,CAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAAc,CAACG,MAAnC,EAA2CC,CAAC,EAA5C,EAAgD;AAC5CH,QAAAA,WAAW,CAACG,CAAD,CAAX,GAAiBJ,cAAc,CAACK,UAAf,CAA0BD,CAA1B,CAAjB;AACH;;AACD,aAAO,IAAIE,IAAJ,CAAS,CAACL,WAAD,CAAT,EAAwB;AAAEM,QAAAA,IAAI,EAAER;AAAR,OAAxB,CAAP;AACH;;AAdoB;;AAgBzBN,EAAAA,WAAW,CAACe,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,WAAO,KAAKA,CAAC,IAAIjB,WAAV,GAAP;AAAkC,GAAvF;;AACAA,EAAAA,WAAW,CAACkB,KAAZ,GAAoB,aAAcnB,EAAE,CAACoB,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAEpB,WAAT;AAAsBqB,IAAAA,OAAO,EAAErB,WAAW,CAACe;AAA3C,GAAtB,CAAlC;AAjBA,SAAaf,WAAb;AAAA","sourcesContent":["import * as i0 from \"@angular/core\";\r\nexport class FileService {\r\n    constructor() {\r\n        // do nothing\r\n    }\r\n    FromFileToDbFormat(fileData) {\r\n        return atob(fileData);\r\n    }\r\n    FromDbToFileFormat(fileData, fileType) {\r\n        const byteCharacters = atob(fileData);\r\n        const byteNumbers = new Uint8Array(byteCharacters.length);\r\n        for (let i = 0; i < byteCharacters.length; i++) {\r\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n        }\r\n        return new Blob([byteNumbers], { type: fileType });\r\n    }\r\n}\r\nFileService.ɵfac = function FileService_Factory(t) { return new (t || FileService)(); };\r\nFileService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: FileService, factory: FileService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}